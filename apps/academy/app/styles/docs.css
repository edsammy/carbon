.Code {
  width: 100%;
}

.Code .prism-code {
  margin: 0;
  padding: 0.25rem;
  background-color: none;
  white-space: normal;
  word-break: break-word;
}

.Code .token-line {
  font-size: 0.875rem;
  line-height: 1.25rem;
}

.Code .token.function,
.Code .token.imports,
.Code .token.keyword.module,
.Code .token.property-access {
  --tw-text-opacity: 1 !important;
}

.Code .token.function,
.Code .token.keyword.module {
  font-style: normal !important;
}

.Code .token.console.class-name,
.Code .token.doc-comment.optional-parameter,
.Code .token.doc-comment.optional-parameter.punctuation,
.Code .token.doc-comment.parameter,
.Code .token.doc-comment.parameter.punctuation,
.Code .token.operator,
.Code .token.parameter,
.Code .token.plain,
.Code .token.punctuation {
  font-style: normal !important;
  --tw-text-opacity: 1 !important;
}

.Code .token.doc-comment.keyword,
.Code .token.keyword {
  font-style: normal !important;
}

.Code .token.string {
  font-style: normal !important;
  --tw-text-opacity: 1 !important;
}

.Code .token.constant {
  font-style: normal !important;
}

.Code .token.comment {
  font-style: normal !important;
  --tw-text-opacity: 1 !important;
}

.Code .token.number {
  --tw-text-opacity: 1 !important;
}

.Code .token.boolean,
.Code .token.doc-comment.class-name {
  --tw-text-opacity: 1;
}

.Code .codeBlock {
  margin-bottom: 0;
  overflow: hidden;
  overflow-wrap: break-word;
  white-space: pre-wrap;
}

.Code.codeBlockWrapper {
  position: relative;
}

.Code.codeBlockWrapper:hover .buttonContainer {
  visibility: visible;
  opacity: 1;
}

.Code .buttonContainer {
  right: 5px;
  top: 5px;
  opacity: 0;
  position: absolute;
  visibility: hidden;
  transition: opacity 0.2s ease-in-out, visibility 0.2s ease-in-out,
    bottom 0.2s ease-in-out;
}

.Code .buttonContainer button {
  border-radius: 0.25rem;
  font-size: 0.75rem;
  line-height: 1rem;
  background: #011627;
  border: 1px solid #d6deeb;
  color: #d6deeb;
  cursor: pointer;
  line-height: 12px;
  outline: none;
  padding: 4px 8px;
}

.Code.codeBlockWrapper .sbui-btn-container {
  position: absolute;
  top: 2px;
  right: 3px;
  visibility: hidden;
  opacity: 0;
}

.Code.codeBlockWrapper:hover .sbui-btn-container {
  visibility: visible;
  opacity: 1;
}

.CustomCodeBlock {
  width: 100%;
}

.CustomCodeBlock .code-with-header pre {
  border-radius: 0 0 4px 4px;
}

.CustomCodeBlock .code-with-response pre {
  border-radius: 0;
}

.CustomCodeBlock .code-header {
  color: #ccc;
  padding: 5px 15px;
  border-radius: 4px 4px 0 0;
  font-size: 0.8rem;
  font-weight: 700;
  border-bottom: 1px solid #444;
}

.FunctionBlock h4 {
  margin-top: 36px;
  margin-bottom: 12px;
}

.FunctionBlock p {
  margin-top: 0;
  margin-bottom: 24px;
}

.Docs--inner-wrapper {
  background: linear-gradient(
    90deg,
    hsl(var(--background)) 50%,
    hsl(var(--muted)) 50%
  );
  width: 100%;
}

.dark .Docs--inner-wrapper {
  background: linear-gradient(
    90deg,
    hsl(var(--background)) 50%,
    hsl(var(--card)) 50%
  );
}

.Docs .doc-heading {
  font-weight: bold;
  margin-top: 1rem;
  width: 50%;
  padding-left: 1.5rem;
  padding-right: 1.5rem;
  text-transform: capitalize;
  --tw-text-opacity: 1;

  -webkit-hyphens: auto;
  hyphens: auto;
  max-width: 50%;
}

.Docs .doc-module {
  display: flex;
  border-bottom-width: 1px;
  --tw-border-opacity: 1;
  border-color: hsl(var(--border) / var(--tw-border-opacity));
}

.Docs.Docs--table-editor .doc-module--introduction .text {
  width: 85%;
}

.Docs.Docs--table-editor .doc-module--client-libraries {
  flex-direction: column;
  margin-bottom: 40px;
}

.Docs.Docs--table-editor .doc-module--client-libraries .code,
.Docs.Docs--table-editor .doc-module--client-libraries .text {
  width: 100%;
  max-width: none;
}

.Docs.Docs--table-editor .doc-module--client-libraries .code {
  margin-bottom: 20px;
}

.Docs .doc-module article:first-child {
  color: var(--tw-prose-body);
  max-width: 65ch;
}

.Docs
  .doc-module
  article:first-child
  :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  font-weight: 400;
}

.Docs
  .doc-module
  article:first-child
  :where([class~="lead"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  color: var(--tw-prose-lead);
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}

.Docs
  .doc-module
  article:first-child
  :where(a):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  text-decoration: underline;
  font-weight: 400;
  position: relative;
  transition: all 0.18s ease;
  padding-bottom: 2px;
  opacity: 1;
  text-decoration-line: underline;
  text-decoration-color: hsl(var(--muted-foreground));
  text-decoration-thickness: 1px;
  text-underline-offset: 2px;
}

.Docs
  .doc-module
  article:first-child
  :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-bold);
  font-weight: 600;
}

.Docs
  .doc-module
  article:first-child
  :where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(blockquote strong):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(thead th strong):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  list-style-type: none;
  margin-top: 1.25em;
  margin-bottom: 3rem;
  padding-left: 1rem;
  counter-reset: item;
}

.Docs
  .doc-module
  article:first-child
  :where(ol[type="A"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: upper-alpha;
}

.Docs
  .doc-module
  article:first-child
  :where(ol[type="a"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: lower-alpha;
}

.Docs
  .doc-module
  article:first-child
  :where(ol[type="A s"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: upper-alpha;
}

.Docs
  .doc-module
  article:first-child
  :where(ol[type="a s"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: lower-alpha;
}

.Docs
  .doc-module
  article:first-child
  :where(ol[type="I"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: upper-roman;
}

.Docs
  .doc-module
  article:first-child
  :where(ol[type="i"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: lower-roman;
}

.Docs
  .doc-module
  article:first-child
  :where(ol[type="I s"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: upper-roman;
}

.Docs
  .doc-module
  article:first-child
  :where(ol[type="i s"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: lower-roman;
}

.Docs
  .doc-module
  article:first-child
  :where(ol[type="1"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  list-style-type: decimal;
}

.Docs
  .doc-module
  article:first-child
  :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  list-style-type: none;
  margin-top: 1.25em;
  margin-bottom: 1.25em;
  padding-left: 1rem;
}

.Docs
  .doc-module
  article:first-child
  :where(ol > li):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::marker {
  font-weight: 400;
  color: var(--tw-prose-counters);
}

.Docs
  .doc-module
  article:first-child
  :where(ul > li):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  )::marker {
  color: var(--tw-prose-bullets);
}

.Docs
  .doc-module
  article:first-child
  :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.25em;
}

.Docs
  .doc-module
  article:first-child
  :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr);
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}

.Docs
  .doc-module
  article:first-child
  :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: var(--tw-prose-quotes);
  border-left-width: 0.25rem;
  border-left-color: var(--tw-prose-quote-borders);
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}

.Docs
  .doc-module
  article:first-child
  :where(blockquote p:first-of-type):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ):before {
  content: open-quote;
}

.Docs
  .doc-module
  article:first-child
  :where(blockquote p:last-of-type):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ):after {
  content: close-quote;
}

.Docs
  .doc-module
  article:first-child
  :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 800;
  font-size: 2.25em;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}

.Docs
  .doc-module
  article:first-child
  :where(h1 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: 900;
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}

.Docs
  .doc-module
  article:first-child
  :where(h2 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: 800;
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}

.Docs
  .doc-module
  article:first-child
  :where(h3 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
  font-size: 1.15em;
}

.Docs
  .doc-module
  article:first-child
  :where(h4 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: 700;
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.Docs
  .doc-module
  article:first-child
  :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  display: block;
  margin-top: 2em;
  margin-bottom: 2em;
}

.Docs
  .doc-module
  article:first-child
  :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-weight: 500;
  font-family: inherit;
  color: var(--tw-prose-kbd);
  box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%),
    0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
  font-size: 0.875em;
  padding: 0.1875em 0.375em;
}

.Docs
  .doc-module
  article:first-child
  :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-code);
  font-weight: 400;
  font-size: 0.875em;
  padding: 0.2rem 0.4rem;
  background-color: hsl(var(--muted));
  border: 1px solid hsl(var(--muted));
  border-radius: 0.5rem;
}

.Docs
  .doc-module
  article:first-child
  :where(code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ):before {
  content: "";
}

.Docs
  .doc-module
  article:first-child
  :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)):after {
  content: "";
}

.Docs
  .doc-module
  article:first-child
  :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.875em;
}

.Docs
  .doc-module
  article:first-child
  :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
  font-size: 0.9em;
}

.Docs
  .doc-module
  article:first-child
  :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(blockquote code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(thead th code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  color: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-pre-code);
  background-color: var(--tw-prose-pre-bg);
  overflow-x: auto;
  font-weight: 400;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 32px;
  border-radius: 0.375rem;
  background: none;
  padding: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(pre code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: inherit;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}

.Docs
  .doc-module
  article:first-child
  :where(pre code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ):before {
  content: none;
}

.Docs
  .doc-module
  article:first-child
  :where(pre code):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ):after {
  content: none;
}

.Docs
  .doc-module
  article:first-child
  :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}

.Docs
  .doc-module
  article:first-child
  :where(thead):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-th-borders);
}

.Docs
  .doc-module
  article:first-child
  :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--tw-prose-headings);
  font-weight: 600;
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}

.Docs
  .doc-module
  article:first-child
  :where(tbody tr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: var(--tw-prose-td-borders);
}

.Docs
  .doc-module
  article:first-child
  :where(tbody tr:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  border-bottom-width: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(tbody td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  vertical-align: baseline;
}

.Docs
  .doc-module
  article:first-child
  :where(tfoot):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-top-width: 1px;
  border-top-color: var(--tw-prose-th-borders);
}

.Docs
  .doc-module
  article:first-child
  :where(tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  vertical-align: top;
}

.Docs
  .doc-module
  article:first-child
  :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: hsl(var(--muted-foreground));
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
  font-family: Office Code Pro, monospace;
}

.Docs .doc-module article:first-child {
  --tw-prose-links: hsl(var(--foreground));
  --tw-prose-kbd: #111827;
  --tw-prose-kbd-shadows: 17 24 39;
  --tw-prose-invert-kbd: #fff;
  --tw-prose-invert-kbd-shadows: 255 255 255;
  --tw-prose-invert-code: #fff;
  --tw-prose-invert-pre-code: #d1d5db;
  --tw-prose-invert-pre-bg: rgba(0, 0, 0, 0.5);
  --tw-prose-invert-th-borders: #4b5563;
  --tw-prose-invert-td-borders: #374151;
  font-size: 1rem;
  line-height: 1.75;
}

.Docs
  .doc-module
  article:first-child
  :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}

.Docs
  .doc-module
  article:first-child
  :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}

.Docs
  .doc-module
  article:first-child
  :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.Docs
  .doc-module
  article:first-child
  :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-left: 0.375em;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > ul > li p):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > ul > li > :first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 1.25em;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > ul > li > :last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 1.25em;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > ol > li > :first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 1.25em;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > ol > li > :last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 1.25em;
}

.Docs
  .doc-module
  article:first-child
  :where(ul ul, ul ol, ol ul, ol ol):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.Docs
  .doc-module
  article:first-child
  :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}

.Docs
  .doc-module
  article:first-child
  :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0.5em;
  padding-left: 1.625em;
}

.Docs
  .doc-module
  article:first-child
  :where(tbody td, tfoot td):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding: 0.5714286em;
}

.Docs
  .doc-module
  article:first-child
  :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin: 3rem 0;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > :first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > :last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(h5):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  color: var(--colors-scale12);
}

.Docs
  .doc-module
  article:first-child
  :where(h1, h2, h3, h4, h5, h6):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  font-weight: 400;
}

.Docs
  .doc-module
  article:first-child
  :where(article h2, article h3, article h4, article h5, article h6):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 2em;
  margin-bottom: 1em;
}

.Docs
  .doc-module
  article:first-child
  :where(ul li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  position: relative;
}

.Docs
  .doc-module
  article:first-child
  :where(ul li):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ):before {
  position: absolute;
  top: 0.75rem;
  left: -1rem;
  height: 0.125rem;
  width: 0.5rem;
  border-radius: 0.25rem;
  background-color: hsl(var(--border));
  content: "";
}

.Docs
  .doc-module
  article:first-child
  :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  display: block;
  position: relative;
  padding-left: 1rem;
}

.Docs
  .doc-module
  article:first-child
  :where(ol > li):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ):before {
  position: absolute;
  top: 0.25rem;
  left: -1rem;
  height: 1.2rem;
  width: 1.2rem;
  border-radius: 0.25rem;
  background-color: hsl(var(--background));
  border: 1px solid hsl(var(--border));
  content: counter(item) "  ";
  counter-increment: item;
  font-size: 12px;
  color: hsl(var(--muted-foreground));
  display: flex;
  align-items: center;
  justify-content: center;
}

.Docs
  .doc-module
  article:first-child
  :where(p img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border: 1px solid hsl(var(--border));
  border-radius: 4px;
  overflow: hidden;
}

.Docs
  .doc-module
  article:first-child
  :where(iframe):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border: 1px solid hsl(var(--border) / 0.9);
  border-radius: 0.5rem;
}

.Docs
  .doc-module
  article:first-child
  :where(td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  border-bottom: 1px solid hsl(var(--muted));
}

.Docs
  .doc-module
  article:first-child
  :where(a:hover):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
}

.Docs
  .doc-module
  article:first-child
  :where(figure.quote-figure p:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(figure.quote-figure p:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(figure img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin: 0;
}

.Docs .doc-module article:first-child {
  font-size: 0.875rem;
  line-height: 1.7142857;
}

.Docs
  .doc-module
  article:first-child
  :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}

.Docs
  .doc-module
  article:first-child
  :where([class~="lead"]):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  font-size: 1.2857143em;
  line-height: 1.5555556;
  margin-top: 0.8888889em;
  margin-bottom: 0.8888889em;
}

.Docs
  .doc-module
  article:first-child
  :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.3333333em;
  margin-bottom: 1.3333333em;
  padding-left: 1.1111111em;
}

.Docs
  .doc-module
  article:first-child
  :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: 2.1428571em;
  margin-top: 0;
  margin-bottom: 0.8em;
  line-height: 1.2;
}

.Docs
  .doc-module
  article:first-child
  :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: 1.4285714em;
  margin-top: 1.6em;
  margin-bottom: 0.8em;
  line-height: 1.4;
}

.Docs
  .doc-module
  article:first-child
  :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: 1.2857143em;
  margin-top: 1.5555556em;
  margin-bottom: 0.4444444em;
  line-height: 1.5555556;
}

.Docs
  .doc-module
  article:first-child
  :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.4285714em;
  margin-bottom: 0.5714286em;
  line-height: 1.4285714;
}

.Docs
  .doc-module
  article:first-child
  :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.Docs
  .doc-module
  article:first-child
  :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.Docs
  .doc-module
  article:first-child
  :where(picture > img):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
  margin-bottom: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.Docs
  .doc-module
  article:first-child
  :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: 0.8571429em;
  border-radius: 0.3125rem;
  padding: 0.1428571em 0.3571429em;
}

.Docs
  .doc-module
  article:first-child
  :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: 0.8571429em;
}

.Docs
  .doc-module
  article:first-child
  :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: 0.9em;
}

.Docs
  .doc-module
  article:first-child
  :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: 0.8888889em;
}

.Docs
  .doc-module
  article:first-child
  :where(pre):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.6666667;
  margin-top: 1.6666667em;
  margin-bottom: 1.6666667em;
  border-radius: 0.25rem;
  padding: 0.6666667em 1em;
}

.Docs
  .doc-module
  article:first-child
  :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-left: 1.5714286em;
}

.Docs
  .doc-module
  article:first-child
  :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
  padding-left: 1.5714286em;
}

.Docs
  .doc-module
  article:first-child
  :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0.2857143em;
  margin-bottom: 0.2857143em;
}

.Docs
  .doc-module
  article:first-child
  :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-left: 0.4285714em;
}

.Docs
  .doc-module
  article:first-child
  :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-left: 0.4285714em;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > ul > li p):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > ul > li > :first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 1.1428571em;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > ul > li > :last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 1.1428571em;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > ol > li > :first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 1.1428571em;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > ol > li > :last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 1.1428571em;
}

.Docs
  .doc-module
  article:first-child
  :where(ul ul, ul ol, ol ul, ol ol):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0.5714286em;
  margin-bottom: 0.5714286em;
}

.Docs
  .doc-module
  article:first-child
  :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.1428571em;
  margin-bottom: 1.1428571em;
}

.Docs
  .doc-module
  article:first-child
  :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.1428571em;
}

.Docs
  .doc-module
  article:first-child
  :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0.2857143em;
  padding-left: 1.5714286em;
}

.Docs
  .doc-module
  article:first-child
  :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 2.8571429em;
  margin-bottom: 2.8571429em;
}

.Docs
  .doc-module
  article:first-child
  :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.5;
}

.Docs
  .doc-module
  article:first-child
  :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  padding-right: 1em;
  padding-bottom: 0.6666667em;
  padding-left: 1em;
}

.Docs
  .doc-module
  article:first-child
  :where(thead th:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-left: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(thead th:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-right: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(tbody td, tfoot td):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding: 0.6666667em 1em;
}

.Docs
  .doc-module
  article:first-child
  :where(tbody td:first-child, tfoot td:first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-left: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(tbody td:last-child, tfoot td:last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  padding-right: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
}

.Docs
  .doc-module
  article:first-child
  :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
  font-size: 0.8571429em;
  line-height: 1.3333333;
  margin-top: 0.6666667em;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > :first-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-top: 0;
}

.Docs
  .doc-module
  article:first-child
  :where(.prose > :last-child):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  margin-bottom: 0;
}

.Docs .doc-module article:first-child {
  --tw-prose-body: hsl(var(--foreground));
  --tw-prose-headings: hsl(var(--foreground));
  --tw-prose-lead: hsl(var(--foreground));
  --tw-prose-links: hsl(var(--primary));
  --tw-prose-bold: hsl(var(--foreground));
  --tw-prose-counters: hsl(var(--foreground));
  --tw-prose-bullets: hsl(var(--muted-foreground));
  --tw-prose-hr: hsl(var(--muted));
  --tw-prose-quotes: hsl(var(--foreground));
  --tw-prose-quote-borders: hsl(var(--muted));
  --tw-prose-captions: hsl(var(--border));
  --tw-prose-code: hsl(var(--foreground));
  --tw-prose-pre-code: hsl(var(--muted-foreground));
  --tw-prose-pre-bg: hsl(var(--muted));
  --tw-prose-th-borders: hsl(var(--muted));
  --tw-prose-td-borders: hsl(var(--background-default));
  --tw-prose-invert-body: hsl(var(--background-default));
  --tw-prose-invert-headings: #fff;
  --tw-prose-invert-lead: hsl(var(--muted));
  --tw-prose-invert-links: #fff;
  --tw-prose-invert-bold: #fff;
  --tw-prose-invert-counters: hsl(var(--muted));
  --tw-prose-invert-bullets: hsl(var(--primary));
  --tw-prose-invert-hr: hsl(var(--border));
  --tw-prose-invert-quotes: hsl(var(--background-alternative-default));
  --tw-prose-invert-quote-borders: hsl(var(--border));
  --tw-prose-invert-captions: hsl(var(--muted));
}

.Docs
  .doc-module
  article:first-child
  :where(h1, h2, h3, h4, h5):not(
    :where([class~="not-prose"], [class~="not-prose"] *)
  ) {
  font-weight: 400;
}

.Docs .doc-module article:first-child {
  max-width: none;
}

.Docs.Docs--table-editor .doc-module__table-name {
  margin-top: 1rem;
}

.Docs .code-column {
  width: 50%;
  padding: 1rem 1.5rem;
  max-width: 50%;
}

.Docs .code-column a {
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    -webkit-backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter;
  transition-property: color, background-color, border-color,
    text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter,
    backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  transition-duration: 0.15s;
}

.Docs .code-column a:hover {
  --tw-text-opacity: 1;
  color: hsl(var(--brand-600) / var(--tw-text-opacity));
}

.Docs .code-column p:last-child {
  padding-bottom: 0;
}

.Docs .code {
  width: 50%;
  flex: 1 1 0%;
  padding: 0.5rem 1.5rem 1rem;
  max-width: 50%;
}

.Docs .code h4 {
  margin: 0.25rem;
  padding: 0;
  font-size: 0.875rem;
  line-height: 1.25rem;
  font-weight: 400;
  text-transform: uppercase;
  --tw-text-opacity: 1;
}

.Docs .code h4:not(:first-child) {
  margin-top: 1.5rem;
}

.Docs .code code {
  margin: 0.25rem;
  padding: 0;
  background-color: none;
}

.Docs .code .is-highlighted {
  --tw-text-opacity: 1;
  color: hsl(var(--primary) / var(--tw-text-opacity));
}

.Docs .codeblock-container + .codeblock-container {
  margin-top: 3rem;
}
