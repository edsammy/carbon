export type Json =
  | string
  | number
  | boolean
  | null
  | { [key: string]: Json | undefined }
  | Json[];

export type Database = {
  graphql_public: {
    Tables: {
      [_ in never]: never;
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      graphql: {
        Args: {
          operationName?: string;
          query?: string;
          variables?: Json;
          extensions?: Json;
        };
        Returns: Json;
      };
    };
    Enums: {
      [_ in never]: never;
    };
    CompositeTypes: {
      [_ in never]: never;
    };
  };
  public: {
    Tables: {
      ability: {
        Row: {
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          curve: Json;
          id: string;
          name: string;
          shadowWeeks: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          curve?: Json;
          id?: string;
          name: string;
          shadowWeeks?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          curve?: Json;
          id?: string;
          name?: string;
          shadowWeeks?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "abilities_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "abilities_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "abilities_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "abilities_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "abilities_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "abilities_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "abilities_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "abilities_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "abilities_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "abilities_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "abilities_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "abilities_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "abilities_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "abilities_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      account: {
        Row: {
          accountCategoryId: string | null;
          accountSubcategoryId: string | null;
          active: boolean;
          class: Database["public"]["Enums"]["glAccountClass"] | null;
          companyId: string;
          consolidatedRate:
            | Database["public"]["Enums"]["glConsolidatedRate"]
            | null;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          directPosting: boolean;
          id: string;
          incomeBalance: Database["public"]["Enums"]["glIncomeBalance"];
          name: string;
          number: string;
          tags: string[] | null;
          type: Database["public"]["Enums"]["glAccountType"];
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          accountCategoryId?: string | null;
          accountSubcategoryId?: string | null;
          active?: boolean;
          class?: Database["public"]["Enums"]["glAccountClass"] | null;
          companyId: string;
          consolidatedRate?:
            | Database["public"]["Enums"]["glConsolidatedRate"]
            | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          directPosting?: boolean;
          id?: string;
          incomeBalance: Database["public"]["Enums"]["glIncomeBalance"];
          name: string;
          number: string;
          tags?: string[] | null;
          type: Database["public"]["Enums"]["glAccountType"];
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          accountCategoryId?: string | null;
          accountSubcategoryId?: string | null;
          active?: boolean;
          class?: Database["public"]["Enums"]["glAccountClass"] | null;
          companyId?: string;
          consolidatedRate?:
            | Database["public"]["Enums"]["glConsolidatedRate"]
            | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          directPosting?: boolean;
          id?: string;
          incomeBalance?: Database["public"]["Enums"]["glIncomeBalance"];
          name?: string;
          number?: string;
          tags?: string[] | null;
          type?: Database["public"]["Enums"]["glAccountType"];
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "account_accountCategoryId_fkey";
            columns: ["accountCategoryId"];
            isOneToOne: false;
            referencedRelation: "accountCategories";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_accountCategoryId_fkey";
            columns: ["accountCategoryId"];
            isOneToOne: false;
            referencedRelation: "accountCategory";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "account_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "account_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "account_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      accountCategory: {
        Row: {
          category: string;
          class: Database["public"]["Enums"]["glAccountClass"];
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          incomeBalance: Database["public"]["Enums"]["glIncomeBalance"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          category: string;
          class: Database["public"]["Enums"]["glAccountClass"];
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          incomeBalance: Database["public"]["Enums"]["glIncomeBalance"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          category?: string;
          class?: Database["public"]["Enums"]["glAccountClass"];
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          incomeBalance?: Database["public"]["Enums"]["glIncomeBalance"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "accountCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "accountCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "accountCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "accountCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      accountDefault: {
        Row: {
          accumulatedDepreciationAccount: string;
          accumulatedDepreciationOnDisposalAccount: string;
          assetAquisitionCostAccount: string;
          assetAquisitionCostOnDisposalAccount: string;
          assetDepreciationExpenseAccount: string;
          assetGainsAndLossesAccount: string;
          bankCashAccount: string;
          bankForeignCurrencyAccount: string;
          bankLocalCurrencyAccount: string;
          capacityVarianceAccount: string;
          companyId: string;
          costOfGoodsSoldAccount: string;
          customerPaymentDiscountAccount: string;
          directCostAppliedAccount: string;
          interestAccount: string;
          inventoryAccount: string;
          inventoryAdjustmentVarianceAccount: string;
          inventoryInterimAccrualAccount: string;
          inventoryInvoicedNotReceivedAccount: string;
          inventoryReceivedNotInvoicedAccount: string;
          inventoryShippedNotInvoicedAccount: string;
          maintenanceAccount: string;
          materialVarianceAccount: string;
          overheadAccount: string;
          overheadCostAppliedAccount: string;
          payablesAccount: string;
          prepaymentAccount: string;
          purchaseAccount: string;
          purchaseTaxPayableAccount: string;
          purchaseVarianceAccount: string;
          receivablesAccount: string;
          retainedEarningsAccount: string;
          reverseChargeSalesTaxPayableAccount: string;
          roundingAccount: string;
          salesAccount: string;
          salesDiscountAccount: string;
          salesTaxPayableAccount: string;
          serviceChargeAccount: string;
          supplierPaymentDiscountAccount: string;
          updatedBy: string | null;
          workInProgressAccount: string;
        };
        Insert: {
          accumulatedDepreciationAccount: string;
          accumulatedDepreciationOnDisposalAccount: string;
          assetAquisitionCostAccount: string;
          assetAquisitionCostOnDisposalAccount: string;
          assetDepreciationExpenseAccount: string;
          assetGainsAndLossesAccount: string;
          bankCashAccount: string;
          bankForeignCurrencyAccount: string;
          bankLocalCurrencyAccount: string;
          capacityVarianceAccount: string;
          companyId: string;
          costOfGoodsSoldAccount: string;
          customerPaymentDiscountAccount: string;
          directCostAppliedAccount: string;
          interestAccount: string;
          inventoryAccount: string;
          inventoryAdjustmentVarianceAccount: string;
          inventoryInterimAccrualAccount: string;
          inventoryInvoicedNotReceivedAccount: string;
          inventoryReceivedNotInvoicedAccount: string;
          inventoryShippedNotInvoicedAccount: string;
          maintenanceAccount: string;
          materialVarianceAccount: string;
          overheadAccount: string;
          overheadCostAppliedAccount: string;
          payablesAccount: string;
          prepaymentAccount: string;
          purchaseAccount: string;
          purchaseTaxPayableAccount: string;
          purchaseVarianceAccount: string;
          receivablesAccount: string;
          retainedEarningsAccount: string;
          reverseChargeSalesTaxPayableAccount: string;
          roundingAccount: string;
          salesAccount: string;
          salesDiscountAccount: string;
          salesTaxPayableAccount: string;
          serviceChargeAccount: string;
          supplierPaymentDiscountAccount: string;
          updatedBy?: string | null;
          workInProgressAccount: string;
        };
        Update: {
          accumulatedDepreciationAccount?: string;
          accumulatedDepreciationOnDisposalAccount?: string;
          assetAquisitionCostAccount?: string;
          assetAquisitionCostOnDisposalAccount?: string;
          assetDepreciationExpenseAccount?: string;
          assetGainsAndLossesAccount?: string;
          bankCashAccount?: string;
          bankForeignCurrencyAccount?: string;
          bankLocalCurrencyAccount?: string;
          capacityVarianceAccount?: string;
          companyId?: string;
          costOfGoodsSoldAccount?: string;
          customerPaymentDiscountAccount?: string;
          directCostAppliedAccount?: string;
          interestAccount?: string;
          inventoryAccount?: string;
          inventoryAdjustmentVarianceAccount?: string;
          inventoryInterimAccrualAccount?: string;
          inventoryInvoicedNotReceivedAccount?: string;
          inventoryReceivedNotInvoicedAccount?: string;
          inventoryShippedNotInvoicedAccount?: string;
          maintenanceAccount?: string;
          materialVarianceAccount?: string;
          overheadAccount?: string;
          overheadCostAppliedAccount?: string;
          payablesAccount?: string;
          prepaymentAccount?: string;
          purchaseAccount?: string;
          purchaseTaxPayableAccount?: string;
          purchaseVarianceAccount?: string;
          receivablesAccount?: string;
          retainedEarningsAccount?: string;
          reverseChargeSalesTaxPayableAccount?: string;
          roundingAccount?: string;
          salesAccount?: string;
          salesDiscountAccount?: string;
          salesTaxPayableAccount?: string;
          serviceChargeAccount?: string;
          supplierPaymentDiscountAccount?: string;
          updatedBy?: string | null;
          workInProgressAccount?: string;
        };
        Relationships: [
          {
            foreignKeyName: "accountDefault_accumulatedDepreciationAccount_fkey";
            columns: ["accumulatedDepreciationAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_accumulatedDepreciationAccount_fkey";
            columns: ["accumulatedDepreciationAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_accumulatedDepreciationOnDisposalAccount_fkey";
            columns: ["accumulatedDepreciationOnDisposalAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_accumulatedDepreciationOnDisposalAccount_fkey";
            columns: ["accumulatedDepreciationOnDisposalAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_aquisitionCostAccount_fkey";
            columns: ["assetAquisitionCostAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_aquisitionCostAccount_fkey";
            columns: ["assetAquisitionCostAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_aquisitionCostOnDisposalAccount_fkey";
            columns: ["assetAquisitionCostOnDisposalAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_aquisitionCostOnDisposalAccount_fkey";
            columns: ["assetAquisitionCostOnDisposalAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_assetDepreciationExpenseAccount_fkey";
            columns: ["assetDepreciationExpenseAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_assetDepreciationExpenseAccount_fkey";
            columns: ["assetDepreciationExpenseAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_assetGainsAndLossesAccount_fkey";
            columns: ["assetGainsAndLossesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_assetGainsAndLossesAccount_fkey";
            columns: ["assetGainsAndLossesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_bankCashAccount_fkey";
            columns: ["bankCashAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_bankCashAccount_fkey";
            columns: ["bankCashAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_bankForeignCurrencyAccount_fkey";
            columns: ["bankForeignCurrencyAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_bankForeignCurrencyAccount_fkey";
            columns: ["bankForeignCurrencyAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_bankLocalCurrencyAccount_fkey";
            columns: ["bankLocalCurrencyAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_bankLocalCurrencyAccount_fkey";
            columns: ["bankLocalCurrencyAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_capacityVarianceAccount_fkey";
            columns: ["capacityVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_capacityVarianceAccount_fkey";
            columns: ["capacityVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_costOfGoodsSoldAccount_fkey";
            columns: ["costOfGoodsSoldAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_costOfGoodsSoldAccount_fkey";
            columns: ["costOfGoodsSoldAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_customerPaymentDiscountAccount_fkey";
            columns: ["customerPaymentDiscountAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_customerPaymentDiscountAccount_fkey";
            columns: ["customerPaymentDiscountAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_directCostAppliedAccount_fkey";
            columns: ["directCostAppliedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_directCostAppliedAccount_fkey";
            columns: ["directCostAppliedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_fkey";
            columns: ["companyId"];
            isOneToOne: true;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_fkey";
            columns: ["companyId"];
            isOneToOne: true;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_fkey";
            columns: ["companyId"];
            isOneToOne: true;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "accountDefault_fkey";
            columns: ["companyId"];
            isOneToOne: true;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "accountDefault_interestAccount_fkey";
            columns: ["interestAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_interestAccount_fkey";
            columns: ["interestAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_inventoryAccount_fkey";
            columns: ["inventoryAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_inventoryAccount_fkey";
            columns: ["inventoryAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_inventoryAdjustmentVarianceAccount_fkey";
            columns: ["inventoryAdjustmentVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_inventoryAdjustmentVarianceAccount_fkey";
            columns: ["inventoryAdjustmentVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_inventoryInterimAccrualAccount_fkey";
            columns: ["inventoryInterimAccrualAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_inventoryInterimAccrualAccount_fkey";
            columns: ["inventoryInterimAccrualAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_inventoryReceivedNotInvoicedAccount_fkey";
            columns: ["inventoryReceivedNotInvoicedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_inventoryReceivedNotInvoicedAccount_fkey";
            columns: ["inventoryReceivedNotInvoicedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_inventoryShippedNotInvoicedAccount_fkey";
            columns: ["inventoryShippedNotInvoicedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_inventoryShippedNotInvoicedAccount_fkey";
            columns: ["inventoryShippedNotInvoicedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_maintenanceAccount_fkey";
            columns: ["maintenanceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_maintenanceAccount_fkey";
            columns: ["maintenanceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_materialVarianceAccount_fkey";
            columns: ["materialVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_materialVarianceAccount_fkey";
            columns: ["materialVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_overheadAccount_fkey";
            columns: ["overheadAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_overheadAccount_fkey";
            columns: ["overheadAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_overheadCostAppliedAccount_fkey";
            columns: ["overheadCostAppliedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_overheadCostAppliedAccount_fkey";
            columns: ["overheadCostAppliedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_payablesAccount_fkey";
            columns: ["payablesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_payablesAccount_fkey";
            columns: ["payablesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_prepaymentAccount_fkey";
            columns: ["prepaymentAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_prepaymentAccount_fkey";
            columns: ["prepaymentAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_purchaseAccount_fkey";
            columns: ["purchaseAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_purchaseAccount_fkey";
            columns: ["purchaseAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_purchaseTaxPayableAccount_fkey";
            columns: ["purchaseTaxPayableAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_purchaseTaxPayableAccount_fkey";
            columns: ["purchaseTaxPayableAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_purchaseVarianceAccount_fkey";
            columns: ["purchaseVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_purchaseVarianceAccount_fkey";
            columns: ["purchaseVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_receivablesAccount_fkey";
            columns: ["receivablesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_receivablesAccount_fkey";
            columns: ["receivablesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_retainedEarningsAccount_fkey";
            columns: ["retainedEarningsAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_retainedEarningsAccount_fkey";
            columns: ["retainedEarningsAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_reverseChargeSalesTaxPayableAccount_fkey";
            columns: ["reverseChargeSalesTaxPayableAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_reverseChargeSalesTaxPayableAccount_fkey";
            columns: ["reverseChargeSalesTaxPayableAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_roundingAccount_fkey";
            columns: ["roundingAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_roundingAccount_fkey";
            columns: ["roundingAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_salesAccount_fkey";
            columns: ["salesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_salesAccount_fkey";
            columns: ["salesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_salesDiscountAccount_fkey";
            columns: ["salesDiscountAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_salesDiscountAccount_fkey";
            columns: ["salesDiscountAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_salesTaxPayableAccount_fkey";
            columns: ["salesTaxPayableAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_salesTaxPayableAccount_fkey";
            columns: ["salesTaxPayableAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_serviceChargeAccount_fkey";
            columns: ["serviceChargeAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_serviceChargeAccount_fkey";
            columns: ["serviceChargeAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_supplierPaymentDiscountAccount_fkey";
            columns: ["supplierPaymentDiscountAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_supplierPaymentDiscountAccount_fkey";
            columns: ["supplierPaymentDiscountAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "accountDefault_workInProgressAccount_fkey";
            columns: ["workInProgressAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "accountDefault_workInProgressAccount_fkey";
            columns: ["workInProgressAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          }
        ];
      };
      accountingPeriod: {
        Row: {
          closedAt: string | null;
          closedBy: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          endDate: string;
          id: string;
          startDate: string;
          status: Database["public"]["Enums"]["accountingPeriodStatus"];
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          closedAt?: string | null;
          closedBy?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          endDate: string;
          id?: string;
          startDate: string;
          status?: Database["public"]["Enums"]["accountingPeriodStatus"];
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          closedAt?: string | null;
          closedBy?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          endDate?: string;
          id?: string;
          startDate?: string;
          status?: Database["public"]["Enums"]["accountingPeriodStatus"];
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "accountingPeriod_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "accountingPeriod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "accountingPeriod_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "accountingPeriod_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "accountingPeriod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountingPeriod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      accountSubcategory: {
        Row: {
          accountCategoryId: string;
          active: boolean;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          accountCategoryId: string;
          active?: boolean;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          accountCategoryId?: string;
          active?: boolean;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "accountSubcategory_accountCategoryId_fkey";
            columns: ["accountCategoryId"];
            isOneToOne: false;
            referencedRelation: "accountCategories";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountSubcategory_accountCategoryId_fkey";
            columns: ["accountCategoryId"];
            isOneToOne: false;
            referencedRelation: "accountCategory";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountSubcategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountSubcategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountSubcategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountSubcategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountSubcategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "accountSubcategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountSubcategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountSubcategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountSubcategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountSubcategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      address: {
        Row: {
          addressLine1: string | null;
          addressLine2: string | null;
          city: string | null;
          companyId: string;
          countryCode: string | null;
          fax: string | null;
          id: string;
          phone: string | null;
          postalCode: string | null;
          stateProvince: string | null;
        };
        Insert: {
          addressLine1?: string | null;
          addressLine2?: string | null;
          city?: string | null;
          companyId: string;
          countryCode?: string | null;
          fax?: string | null;
          id?: string;
          phone?: string | null;
          postalCode?: string | null;
          stateProvince?: string | null;
        };
        Update: {
          addressLine1?: string | null;
          addressLine2?: string | null;
          city?: string | null;
          companyId?: string;
          countryCode?: string | null;
          fax?: string | null;
          id?: string;
          phone?: string | null;
          postalCode?: string | null;
          stateProvince?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "address_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "address_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "address_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "address_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "address_countryCode_fkey";
            columns: ["countryCode"];
            isOneToOne: false;
            referencedRelation: "country";
            referencedColumns: ["alpha2"];
          }
        ];
      };
      apiKey: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          key: string;
          name: string;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          key: string;
          name: string;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          key?: string;
          name?: string;
        };
        Relationships: [
          {
            foreignKeyName: "apiKey_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "apiKey_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "apiKey_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "apiKey_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "apiKey_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "apiKey_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "apiKey_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "apiKey_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "apiKey_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      attributeDataType: {
        Row: {
          id: number;
          isBoolean: boolean;
          isCustomer: boolean;
          isDate: boolean;
          isList: boolean;
          isNumeric: boolean;
          isSupplier: boolean;
          isText: boolean;
          isUser: boolean;
          label: string;
        };
        Insert: {
          id?: number;
          isBoolean?: boolean;
          isCustomer?: boolean;
          isDate?: boolean;
          isList?: boolean;
          isNumeric?: boolean;
          isSupplier?: boolean;
          isText?: boolean;
          isUser?: boolean;
          label: string;
        };
        Update: {
          id?: number;
          isBoolean?: boolean;
          isCustomer?: boolean;
          isDate?: boolean;
          isList?: boolean;
          isNumeric?: boolean;
          isSupplier?: boolean;
          isText?: boolean;
          isUser?: boolean;
          label?: string;
        };
        Relationships: [];
      };
      batchProperty: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          dataType: Database["public"]["Enums"]["configurationParameterDataType"];
          id: string;
          itemId: string;
          label: string;
          listOptions: string[] | null;
          sortOrder: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          dataType: Database["public"]["Enums"]["configurationParameterDataType"];
          id?: string;
          itemId: string;
          label: string;
          listOptions?: string[] | null;
          sortOrder?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          dataType?: Database["public"]["Enums"]["configurationParameterDataType"];
          id?: string;
          itemId?: string;
          label?: string;
          listOptions?: string[] | null;
          sortOrder?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "batchProperty_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "batchProperty_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "batchProperty_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "batchProperty_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "batchProperty_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      challengeAttempt: {
        Row: {
          courseId: string;
          createdAt: string;
          id: number;
          passed: boolean;
          topicId: string;
          userId: string;
        };
        Insert: {
          courseId: string;
          createdAt?: string;
          id?: number;
          passed?: boolean;
          topicId: string;
          userId: string;
        };
        Update: {
          courseId?: string;
          createdAt?: string;
          id?: number;
          passed?: boolean;
          topicId?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "challengeAttempt_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "challengeAttempt_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "challengeAttempt_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "challengeAttempt_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "challengeAttempt_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      company: {
        Row: {
          addressLine1: string | null;
          addressLine2: string | null;
          baseCurrencyCode: string;
          city: string | null;
          countryCode: string | null;
          email: string | null;
          fax: string | null;
          id: string;
          logoDark: string | null;
          logoDarkIcon: string | null;
          logoLight: string | null;
          logoLightIcon: string | null;
          name: string;
          ownerId: string | null;
          phone: string | null;
          postalCode: string | null;
          slackChannel: string | null;
          stateProvince: string | null;
          taxId: string | null;
          updatedBy: string | null;
          website: string | null;
        };
        Insert: {
          addressLine1?: string | null;
          addressLine2?: string | null;
          baseCurrencyCode: string;
          city?: string | null;
          countryCode?: string | null;
          email?: string | null;
          fax?: string | null;
          id?: string;
          logoDark?: string | null;
          logoDarkIcon?: string | null;
          logoLight?: string | null;
          logoLightIcon?: string | null;
          name: string;
          ownerId?: string | null;
          phone?: string | null;
          postalCode?: string | null;
          slackChannel?: string | null;
          stateProvince?: string | null;
          taxId?: string | null;
          updatedBy?: string | null;
          website?: string | null;
        };
        Update: {
          addressLine1?: string | null;
          addressLine2?: string | null;
          baseCurrencyCode?: string;
          city?: string | null;
          countryCode?: string | null;
          email?: string | null;
          fax?: string | null;
          id?: string;
          logoDark?: string | null;
          logoDarkIcon?: string | null;
          logoLight?: string | null;
          logoLightIcon?: string | null;
          name?: string;
          ownerId?: string | null;
          phone?: string | null;
          postalCode?: string | null;
          slackChannel?: string | null;
          stateProvince?: string | null;
          taxId?: string | null;
          updatedBy?: string | null;
          website?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "company_baseCurrencyCode_fkey";
            columns: ["baseCurrencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          }
        ];
      };
      companyIntegration: {
        Row: {
          active: boolean;
          companyId: string;
          id: string;
          metadata: Json;
          updatedAt: string;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          id: string;
          metadata?: Json;
          updatedAt?: string;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          id?: string;
          metadata?: Json;
          updatedAt?: string;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "companyIntegration_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "companyIntegration_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "companyIntegration_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "companyIntegration_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "companyIntegration_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "integration";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "companyIntegration_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["id"];
          }
        ];
      };
      companyPlan: {
        Row: {
          aiTokensLimit: number;
          createdAt: string;
          id: string;
          planId: string;
          stripeCustomerId: string | null;
          stripeSubscriptionId: string | null;
          stripeSubscriptionStatus: string;
          subscriptionStartDate: string;
          tasksLimit: number;
          trialPeriodEndsAt: string | null;
          updatedAt: string;
          usersLimit: number;
        };
        Insert: {
          aiTokensLimit?: number;
          createdAt?: string;
          id?: string;
          planId: string;
          stripeCustomerId?: string | null;
          stripeSubscriptionId?: string | null;
          stripeSubscriptionStatus?: string;
          subscriptionStartDate: string;
          tasksLimit?: number;
          trialPeriodEndsAt?: string | null;
          updatedAt?: string;
          usersLimit?: number;
        };
        Update: {
          aiTokensLimit?: number;
          createdAt?: string;
          id?: string;
          planId?: string;
          stripeCustomerId?: string | null;
          stripeSubscriptionId?: string | null;
          stripeSubscriptionStatus?: string;
          subscriptionStartDate?: string;
          tasksLimit?: number;
          trialPeriodEndsAt?: string | null;
          updatedAt?: string;
          usersLimit?: number;
        };
        Relationships: [
          {
            foreignKeyName: "fk_companyPlan_company";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fk_companyPlan_company";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fk_companyPlan_company";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "fk_companyPlan_company";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "fk_companyPlan_plan";
            columns: ["planId"];
            isOneToOne: false;
            referencedRelation: "plan";
            referencedColumns: ["id"];
          }
        ];
      };
      companySettings: {
        Row: {
          digitalQuoteEnabled: boolean;
          digitalQuoteIncludesPurchaseOrders: boolean;
          digitalQuoteNotificationGroup: string[];
          id: string;
          inventoryJobCompletedNotificationGroup: string[];
          materialGeneratedIds: boolean;
          productLabelSize: string | null;
          rfqReadyNotificationGroup: string[];
          salesJobCompletedNotificationGroup: string[];
          shelfLabelSize: string | null;
          useMetric: boolean;
        };
        Insert: {
          digitalQuoteEnabled?: boolean;
          digitalQuoteIncludesPurchaseOrders?: boolean;
          digitalQuoteNotificationGroup?: string[];
          id: string;
          inventoryJobCompletedNotificationGroup?: string[];
          materialGeneratedIds?: boolean;
          productLabelSize?: string | null;
          rfqReadyNotificationGroup?: string[];
          salesJobCompletedNotificationGroup?: string[];
          shelfLabelSize?: string | null;
          useMetric?: boolean;
        };
        Update: {
          digitalQuoteEnabled?: boolean;
          digitalQuoteIncludesPurchaseOrders?: boolean;
          digitalQuoteNotificationGroup?: string[];
          id?: string;
          inventoryJobCompletedNotificationGroup?: string[];
          materialGeneratedIds?: boolean;
          productLabelSize?: string | null;
          rfqReadyNotificationGroup?: string[];
          salesJobCompletedNotificationGroup?: string[];
          shelfLabelSize?: string | null;
          useMetric?: boolean;
        };
        Relationships: [
          {
            foreignKeyName: "companySettings_companyId_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "companySettings_companyId_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "companySettings_companyId_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "companySettings_companyId_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      companyUsage: {
        Row: {
          aiTokens: number;
          companyId: string;
          createdAt: string;
          id: string;
          nextResetDatetime: string;
          tasks: number;
          updatedAt: string;
          users: number;
        };
        Insert: {
          aiTokens?: number;
          companyId: string;
          createdAt?: string;
          id?: string;
          nextResetDatetime: string;
          tasks?: number;
          updatedAt?: string;
          users?: number;
        };
        Update: {
          aiTokens?: number;
          companyId?: string;
          createdAt?: string;
          id?: string;
          nextResetDatetime?: string;
          tasks?: number;
          updatedAt?: string;
          users?: number;
        };
        Relationships: [
          {
            foreignKeyName: "fk_companyUsage_company";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fk_companyUsage_company";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fk_companyUsage_company";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "fk_companyUsage_company";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      config: {
        Row: {
          anonKey: string;
          apiUrl: string;
          id: boolean;
        };
        Insert: {
          anonKey: string;
          apiUrl: string;
          id?: boolean;
        };
        Update: {
          anonKey?: string;
          apiUrl?: string;
          id?: boolean;
        };
        Relationships: [];
      };
      configurationParameter: {
        Row: {
          companyId: string;
          configurationParameterGroupId: string | null;
          createdAt: string;
          createdBy: string;
          dataType: Database["public"]["Enums"]["configurationParameterDataType"];
          id: string;
          itemId: string;
          key: string;
          label: string;
          listOptions: string[] | null;
          sortOrder: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          configurationParameterGroupId?: string | null;
          createdAt?: string;
          createdBy: string;
          dataType: Database["public"]["Enums"]["configurationParameterDataType"];
          id?: string;
          itemId: string;
          key: string;
          label: string;
          listOptions?: string[] | null;
          sortOrder?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          configurationParameterGroupId?: string | null;
          createdAt?: string;
          createdBy?: string;
          dataType?: Database["public"]["Enums"]["configurationParameterDataType"];
          id?: string;
          itemId?: string;
          key?: string;
          label?: string;
          listOptions?: string[] | null;
          sortOrder?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "configurationParameter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "configurationParameter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "configurationParameter_configurationParameterGroupId_fkey";
            columns: ["configurationParameterGroupId"];
            isOneToOne: false;
            referencedRelation: "configurationParameterGroup";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "configurationParameter_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      configurationParameterGroup: {
        Row: {
          companyId: string;
          id: string;
          isUngrouped: boolean;
          itemId: string;
          name: string;
          sortOrder: number;
        };
        Insert: {
          companyId: string;
          id?: string;
          isUngrouped?: boolean;
          itemId: string;
          name: string;
          sortOrder?: number;
        };
        Update: {
          companyId?: string;
          id?: string;
          isUngrouped?: boolean;
          itemId?: string;
          name?: string;
          sortOrder?: number;
        };
        Relationships: [
          {
            foreignKeyName: "configurationParameterGroup_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameterGroup_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameterGroup_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "configurationParameterGroup_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "configurationParameterGroup_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameterGroup_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameterGroup_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameterGroup_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationParameterGroup_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          }
        ];
      };
      configurationRule: {
        Row: {
          code: string;
          companyId: string;
          field: string;
          itemId: string;
          updatedAt: string;
          updatedBy: string | null;
        };
        Insert: {
          code: string;
          companyId: string;
          field: string;
          itemId: string;
          updatedAt?: string;
          updatedBy?: string | null;
        };
        Update: {
          code?: string;
          companyId?: string;
          field?: string;
          itemId?: string;
          updatedAt?: string;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "configurationRule_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationRule_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationRule_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "configurationRule_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "configurationRule_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationRule_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationRule_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationRule_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationRule_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationRule_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationRule_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationRule_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationRule_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "configurationRule_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      consumable: {
        Row: {
          approved: boolean;
          approvedBy: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          externalId: Json | null;
          id: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          externalId?: Json | null;
          id: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          externalId?: Json | null;
          id?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "consumable_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "consumable_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "consumable_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "consumable_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "consumable_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "consumable_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      contact: {
        Row: {
          companyId: string;
          email: string;
          externalId: Json | null;
          fax: string | null;
          firstName: string | null;
          fullName: string | null;
          homePhone: string | null;
          id: string;
          isCustomer: boolean;
          lastName: string | null;
          mobilePhone: string | null;
          notes: string | null;
          title: string | null;
          workPhone: string | null;
        };
        Insert: {
          companyId: string;
          email: string;
          externalId?: Json | null;
          fax?: string | null;
          firstName?: string | null;
          fullName?: string | null;
          homePhone?: string | null;
          id?: string;
          isCustomer?: boolean;
          lastName?: string | null;
          mobilePhone?: string | null;
          notes?: string | null;
          title?: string | null;
          workPhone?: string | null;
        };
        Update: {
          companyId?: string;
          email?: string;
          externalId?: Json | null;
          fax?: string | null;
          firstName?: string | null;
          fullName?: string | null;
          homePhone?: string | null;
          id?: string;
          isCustomer?: boolean;
          lastName?: string | null;
          mobilePhone?: string | null;
          notes?: string | null;
          title?: string | null;
          workPhone?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "contact_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contact_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contact_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "contact_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      contractor: {
        Row: {
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          hoursPerWeek: number;
          id: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          hoursPerWeek?: number;
          id: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          hoursPerWeek?: number;
          id?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "contractor_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "contractor_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "contractor_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "contractor_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "supplierContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      contractorAbility: {
        Row: {
          abilityId: string;
          contractorId: string;
          createdAt: string;
          createdBy: string;
        };
        Insert: {
          abilityId: string;
          contractorId: string;
          createdAt?: string;
          createdBy: string;
        };
        Update: {
          abilityId?: string;
          contractorId?: string;
          createdAt?: string;
          createdBy?: string;
        };
        Relationships: [
          {
            foreignKeyName: "contractorAbility_abilityId_fkey";
            columns: ["abilityId"];
            isOneToOne: false;
            referencedRelation: "ability";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractorAbility_contractorId_fkey";
            columns: ["contractorId"];
            isOneToOne: false;
            referencedRelation: "contractor";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractorAbility_contractorId_fkey";
            columns: ["contractorId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierContactId"];
          },
          {
            foreignKeyName: "contractorAbility_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractorAbility_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractorAbility_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractorAbility_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractorAbility_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      costLedger: {
        Row: {
          adjustment: boolean;
          companyId: string;
          cost: number;
          costLedgerType: Database["public"]["Enums"]["costLedgerType"];
          createdAt: string;
          documentId: string | null;
          documentType:
            | Database["public"]["Enums"]["itemLedgerDocumentType"]
            | null;
          entryNumber: number;
          externalDocumentId: string | null;
          id: string;
          itemId: string | null;
          itemLedgerType: Database["public"]["Enums"]["itemLedgerType"];
          nominalCost: number;
          postingDate: string;
          quantity: number;
          supplierId: string | null;
        };
        Insert: {
          adjustment?: boolean;
          companyId: string;
          cost?: number;
          costLedgerType: Database["public"]["Enums"]["costLedgerType"];
          createdAt?: string;
          documentId?: string | null;
          documentType?:
            | Database["public"]["Enums"]["itemLedgerDocumentType"]
            | null;
          entryNumber?: number;
          externalDocumentId?: string | null;
          id?: string;
          itemId?: string | null;
          itemLedgerType: Database["public"]["Enums"]["itemLedgerType"];
          nominalCost?: number;
          postingDate?: string;
          quantity?: number;
          supplierId?: string | null;
        };
        Update: {
          adjustment?: boolean;
          companyId?: string;
          cost?: number;
          costLedgerType?: Database["public"]["Enums"]["costLedgerType"];
          createdAt?: string;
          documentId?: string | null;
          documentType?:
            | Database["public"]["Enums"]["itemLedgerDocumentType"]
            | null;
          entryNumber?: number;
          externalDocumentId?: string | null;
          id?: string;
          itemId?: string | null;
          itemLedgerType?: Database["public"]["Enums"]["itemLedgerType"];
          nominalCost?: number;
          postingDate?: string;
          quantity?: number;
          supplierId?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "costLedger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "costLedger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "costLedger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "costLedger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "costLedger_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "costLedger_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "costLedger_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "costLedger_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "costLedger_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          }
        ];
      };
      country: {
        Row: {
          alpha2: string;
          alpha3: string;
          name: string;
        };
        Insert: {
          alpha2: string;
          alpha3: string;
          name: string;
        };
        Update: {
          alpha2?: string;
          alpha3?: string;
          name?: string;
        };
        Relationships: [];
      };
      currency: {
        Row: {
          active: boolean;
          code: string;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          decimalPlaces: number;
          exchangeRate: number;
          id: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          code: string;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          decimalPlaces?: number;
          exchangeRate?: number;
          id?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          code?: string;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          decimalPlaces?: number;
          exchangeRate?: number;
          id?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "currency_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "currency_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "currency_currencyCode_fkey";
            columns: ["code"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "currency_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      currencyCode: {
        Row: {
          code: string;
          name: string;
        };
        Insert: {
          code: string;
          name: string;
        };
        Update: {
          code?: string;
          name?: string;
        };
        Relationships: [];
      };
      customer: {
        Row: {
          accountManagerId: string | null;
          assignee: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string | null;
          currencyCode: string | null;
          customerStatusId: string | null;
          customerTypeId: string | null;
          customFields: Json | null;
          embedding: unknown | null;
          externalId: Json | null;
          fax: string | null;
          id: string;
          logo: string | null;
          name: string;
          phone: string | null;
          tags: string[] | null;
          taxId: string | null;
          taxPercent: number;
          updatedAt: string | null;
          updatedBy: string | null;
          website: string | null;
        };
        Insert: {
          accountManagerId?: string | null;
          assignee?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy?: string | null;
          currencyCode?: string | null;
          customerStatusId?: string | null;
          customerTypeId?: string | null;
          customFields?: Json | null;
          embedding?: unknown | null;
          externalId?: Json | null;
          fax?: string | null;
          id?: string;
          logo?: string | null;
          name: string;
          phone?: string | null;
          tags?: string[] | null;
          taxId?: string | null;
          taxPercent?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
          website?: string | null;
        };
        Update: {
          accountManagerId?: string | null;
          assignee?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string | null;
          currencyCode?: string | null;
          customerStatusId?: string | null;
          customerTypeId?: string | null;
          customFields?: Json | null;
          embedding?: unknown | null;
          externalId?: Json | null;
          fax?: string | null;
          id?: string;
          logo?: string | null;
          name?: string;
          phone?: string | null;
          tags?: string[] | null;
          taxId?: string | null;
          taxPercent?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
          website?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "customer_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "customer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "customer_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "customer_customerStatusId_fkey";
            columns: ["customerStatusId"];
            isOneToOne: false;
            referencedRelation: "customerStatus";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_customerTypeId_fkey";
            columns: ["customerTypeId"];
            isOneToOne: false;
            referencedRelation: "customerType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      customerAccount: {
        Row: {
          active: boolean;
          companyId: string;
          customerId: string;
          id: string;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          customerId: string;
          id: string;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          customerId?: string;
          id?: string;
        };
        Relationships: [
          {
            foreignKeyName: "customerAccount_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerAccount_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerAccount_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerAccount_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerAccount_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerAccount_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerAccount_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerAccount_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerAccount_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerAccount_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerAccount_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerAccount_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      customerContact: {
        Row: {
          contactId: string;
          customerId: string;
          customerLocationId: string | null;
          customFields: Json | null;
          id: string;
          tags: string[] | null;
          userId: string | null;
        };
        Insert: {
          contactId: string;
          customerId: string;
          customerLocationId?: string | null;
          customFields?: Json | null;
          id?: string;
          tags?: string[] | null;
          userId?: string | null;
        };
        Update: {
          contactId?: string;
          customerId?: string;
          customerLocationId?: string | null;
          customFields?: Json | null;
          id?: string;
          tags?: string[] | null;
          userId?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "customerContact_contactId_fkey";
            columns: ["contactId"];
            isOneToOne: false;
            referencedRelation: "contact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerContact_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerContact_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerContact_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerContact_customerLocationId_fkey";
            columns: ["customerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerContact_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerContact_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerContact_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerContact_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerContact_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      customerLocation: {
        Row: {
          addressId: string;
          customerId: string;
          customFields: Json | null;
          id: string;
          name: string;
          tags: string[] | null;
        };
        Insert: {
          addressId: string;
          customerId: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          tags?: string[] | null;
        };
        Update: {
          addressId?: string;
          customerId?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          tags?: string[] | null;
        };
        Relationships: [
          {
            foreignKeyName: "customerLocation_addressId_fkey";
            columns: ["addressId"];
            isOneToOne: false;
            referencedRelation: "address";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerLocation_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerLocation_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerLocation_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          }
        ];
      };
      customerPartToItem: {
        Row: {
          companyId: string;
          customerId: string;
          customerPartId: string;
          customerPartRevision: string | null;
          id: string;
          itemId: string;
        };
        Insert: {
          companyId: string;
          customerId: string;
          customerPartId: string;
          customerPartRevision?: string | null;
          id?: string;
          itemId: string;
        };
        Update: {
          companyId?: string;
          customerId?: string;
          customerPartId?: string;
          customerPartRevision?: string | null;
          id?: string;
          itemId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "customerPartToItem_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPartToItem_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPartToItem_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerPartToItem_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerPartToItem_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPartToItem_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPartToItem_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPartToItem_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPartToItem_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPartToItem_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPartToItem_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPartToItem_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          }
        ];
      };
      customerPayment: {
        Row: {
          companyId: string;
          customerId: string;
          invoiceCustomerContactId: string | null;
          invoiceCustomerId: string | null;
          invoiceCustomerLocationId: string | null;
          paymentTermId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          customerId: string;
          invoiceCustomerContactId?: string | null;
          invoiceCustomerId?: string | null;
          invoiceCustomerLocationId?: string | null;
          paymentTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          customerId?: string;
          invoiceCustomerContactId?: string | null;
          invoiceCustomerId?: string | null;
          invoiceCustomerLocationId?: string | null;
          paymentTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "customerPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerPayment_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: true;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: true;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: true;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_invoiceCustomerContactId_fkey";
            columns: ["invoiceCustomerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_invoiceCustomerLocationId_fkey";
            columns: ["invoiceCustomerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_paymentTermId_fkey";
            columns: ["paymentTermId"];
            isOneToOne: false;
            referencedRelation: "paymentTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerPayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      customerShipping: {
        Row: {
          companyId: string;
          customerId: string;
          shippingCustomerContactId: string | null;
          shippingCustomerId: string | null;
          shippingCustomerLocationId: string | null;
          shippingMethodId: string | null;
          shippingTermId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          customerId: string;
          shippingCustomerContactId?: string | null;
          shippingCustomerId?: string | null;
          shippingCustomerLocationId?: string | null;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          customerId?: string;
          shippingCustomerContactId?: string | null;
          shippingCustomerId?: string | null;
          shippingCustomerLocationId?: string | null;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "customerShipping_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerShipping_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerShipping_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: true;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: true;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: true;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_shippingCustomerContactId_fkey";
            columns: ["shippingCustomerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_shippingCustomerId_fkey";
            columns: ["shippingCustomerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_shippingCustomerId_fkey";
            columns: ["shippingCustomerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_shippingCustomerId_fkey";
            columns: ["shippingCustomerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_shippingCustomerLocationId_fkey";
            columns: ["shippingCustomerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_shippingMethodId_fkey";
            columns: ["shippingMethodId"];
            isOneToOne: false;
            referencedRelation: "shippingMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_shippingTermId_fkey";
            columns: ["shippingTermId"];
            isOneToOne: false;
            referencedRelation: "shippingTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerShipping_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      customerStatus: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "customerStatus_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerStatus_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerStatus_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerStatus_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerStatus_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerStatus_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerStatus_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerStatus_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerStatus_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "customerStatus_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerStatus_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerStatus_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerStatus_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerStatus_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      customerType: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          protected: boolean;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          protected?: boolean;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          protected?: boolean;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "customerType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customerType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "customerType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customerType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      customField: {
        Row: {
          active: boolean | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          dataTypeId: number;
          id: string;
          listOptions: string[] | null;
          name: string;
          sortOrder: number;
          table: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          dataTypeId: number;
          id?: string;
          listOptions?: string[] | null;
          name: string;
          sortOrder?: number;
          table: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          dataTypeId?: number;
          id?: string;
          listOptions?: string[] | null;
          name?: string;
          sortOrder?: number;
          table?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "customField_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customField_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customField_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customField_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customField_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customField_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customField_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customField_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customField_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "customField_customFieldTable_fkey";
            columns: ["table"];
            isOneToOne: false;
            referencedRelation: "customFieldTable";
            referencedColumns: ["table"];
          },
          {
            foreignKeyName: "customField_customFieldTable_fkey";
            columns: ["table"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["table"];
          },
          {
            foreignKeyName: "customField_dataTypeId_fkey";
            columns: ["dataTypeId"];
            isOneToOne: false;
            referencedRelation: "attributeDataType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customField_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customField_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customField_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customField_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customField_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      customFieldTable: {
        Row: {
          module: Database["public"]["Enums"]["module"];
          name: string;
          table: string;
        };
        Insert: {
          module: Database["public"]["Enums"]["module"];
          name: string;
          table: string;
        };
        Update: {
          module?: Database["public"]["Enums"]["module"];
          name?: string;
          table?: string;
        };
        Relationships: [];
      };
      demandActual: {
        Row: {
          actualQuantity: number;
          companyId: string;
          createdAt: string;
          createdBy: string;
          itemId: string;
          locationId: string;
          notes: string | null;
          periodId: string;
          sourceType: Database["public"]["Enums"]["demandSourceType"];
          updatedAt: string;
          updatedBy: string;
        };
        Insert: {
          actualQuantity?: number;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          itemId: string;
          locationId: string;
          notes?: string | null;
          periodId: string;
          sourceType: Database["public"]["Enums"]["demandSourceType"];
          updatedAt?: string;
          updatedBy: string;
        };
        Update: {
          actualQuantity?: number;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          itemId?: string;
          locationId?: string;
          notes?: string | null;
          periodId?: string;
          sourceType?: Database["public"]["Enums"]["demandSourceType"];
          updatedAt?: string;
          updatedBy?: string;
        };
        Relationships: [
          {
            foreignKeyName: "demandActual_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "demandActual_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "demandActual_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "demandActual_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_periodId_fkey";
            columns: ["periodId"];
            isOneToOne: false;
            referencedRelation: "period";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandActual_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      demandForecast: {
        Row: {
          companyId: string;
          confidence: number | null;
          createdAt: string;
          createdBy: string;
          forecastMethod: string | null;
          forecastQuantity: number;
          itemId: string;
          locationId: string;
          notes: string | null;
          periodId: string;
          updatedAt: string;
          updatedBy: string;
        };
        Insert: {
          companyId: string;
          confidence?: number | null;
          createdAt?: string;
          createdBy: string;
          forecastMethod?: string | null;
          forecastQuantity?: number;
          itemId: string;
          locationId: string;
          notes?: string | null;
          periodId: string;
          updatedAt?: string;
          updatedBy: string;
        };
        Update: {
          companyId?: string;
          confidence?: number | null;
          createdAt?: string;
          createdBy?: string;
          forecastMethod?: string | null;
          forecastQuantity?: number;
          itemId?: string;
          locationId?: string;
          notes?: string | null;
          periodId?: string;
          updatedAt?: string;
          updatedBy?: string;
        };
        Relationships: [
          {
            foreignKeyName: "demandForecast_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "demandForecast_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "demandForecast_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "demandForecast_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_periodId_fkey";
            columns: ["periodId"];
            isOneToOne: false;
            referencedRelation: "period";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "demandForecast_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      department: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          parentDepartmentId: string | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          parentDepartmentId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          parentDepartmentId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "department_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "department_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "department_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "department_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "department_parentDepartmentId_fkey";
            columns: ["parentDepartmentId"];
            isOneToOne: false;
            referencedRelation: "department";
            referencedColumns: ["id"];
          }
        ];
      };
      document: {
        Row: {
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          description: string | null;
          extension: string | null;
          id: string;
          name: string;
          path: string;
          readGroups: string[] | null;
          size: number;
          sourceDocument:
            | Database["public"]["Enums"]["documentSourceType"]
            | null;
          sourceDocumentId: string | null;
          type: Database["public"]["Enums"]["documentType"];
          updatedAt: string | null;
          updatedBy: string | null;
          writeGroups: string[] | null;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          description?: string | null;
          extension?: string | null;
          id?: string;
          name: string;
          path: string;
          readGroups?: string[] | null;
          size: number;
          sourceDocument?:
            | Database["public"]["Enums"]["documentSourceType"]
            | null;
          sourceDocumentId?: string | null;
          type: Database["public"]["Enums"]["documentType"];
          updatedAt?: string | null;
          updatedBy?: string | null;
          writeGroups?: string[] | null;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          description?: string | null;
          extension?: string | null;
          id?: string;
          name?: string;
          path?: string;
          readGroups?: string[] | null;
          size?: number;
          sourceDocument?:
            | Database["public"]["Enums"]["documentSourceType"]
            | null;
          sourceDocumentId?: string | null;
          type?: Database["public"]["Enums"]["documentType"];
          updatedAt?: string | null;
          updatedBy?: string | null;
          writeGroups?: string[] | null;
        };
        Relationships: [
          {
            foreignKeyName: "document_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "document_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      documentFavorite: {
        Row: {
          documentId: string;
          userId: string;
        };
        Insert: {
          documentId: string;
          userId: string;
        };
        Update: {
          documentId?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "documentFavorites_documentId_fkey";
            columns: ["documentId"];
            isOneToOne: false;
            referencedRelation: "document";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentFavorites_documentId_fkey";
            columns: ["documentId"];
            isOneToOne: false;
            referencedRelation: "documents";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      documentLabel: {
        Row: {
          documentId: string;
          label: string;
          userId: string;
        };
        Insert: {
          documentId: string;
          label: string;
          userId: string;
        };
        Update: {
          documentId?: string;
          label?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "documentLabels_documentId_fkey";
            columns: ["documentId"];
            isOneToOne: false;
            referencedRelation: "document";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentLabels_documentId_fkey";
            columns: ["documentId"];
            isOneToOne: false;
            referencedRelation: "documents";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentLabels_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentLabels_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentLabels_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentLabels_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentLabels_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      documentTransaction: {
        Row: {
          createdAt: string;
          documentId: string;
          id: string;
          type: Database["public"]["Enums"]["documentTransactionType"];
          userId: string;
        };
        Insert: {
          createdAt?: string;
          documentId: string;
          id?: string;
          type: Database["public"]["Enums"]["documentTransactionType"];
          userId: string;
        };
        Update: {
          createdAt?: string;
          documentId?: string;
          id?: string;
          type?: Database["public"]["Enums"]["documentTransactionType"];
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "documentTransaction_documentId_fkey";
            columns: ["documentId"];
            isOneToOne: false;
            referencedRelation: "document";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentTransaction_documentId_fkey";
            columns: ["documentId"];
            isOneToOne: false;
            referencedRelation: "documents";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      employee: {
        Row: {
          active: boolean;
          companyId: string;
          employeeTypeId: string;
          id: string;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          employeeTypeId: string;
          id: string;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          employeeTypeId?: string;
          id?: string;
        };
        Relationships: [
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "employee_employeeTypeId_fkey";
            columns: ["employeeTypeId"];
            isOneToOne: false;
            referencedRelation: "employeeType";
            referencedColumns: ["id"];
          }
        ];
      };
      employeeAbility: {
        Row: {
          abilityId: string;
          active: boolean;
          companyId: string;
          employeeId: string;
          id: string;
          lastTrainingDate: string | null;
          trainingCompleted: boolean | null;
          trainingDays: number;
        };
        Insert: {
          abilityId: string;
          active?: boolean;
          companyId: string;
          employeeId: string;
          id?: string;
          lastTrainingDate?: string | null;
          trainingCompleted?: boolean | null;
          trainingDays?: number;
        };
        Update: {
          abilityId?: string;
          active?: boolean;
          companyId?: string;
          employeeId?: string;
          id?: string;
          lastTrainingDate?: string | null;
          trainingCompleted?: boolean | null;
          trainingDays?: number;
        };
        Relationships: [
          {
            foreignKeyName: "employeeAbilities_abilityId_fkey";
            columns: ["abilityId"];
            isOneToOne: false;
            referencedRelation: "ability";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeAbilities_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeAbilities_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeAbilities_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "employeeAbilities_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "employeeAbilities_employeeId_fkey";
            columns: ["employeeId", "companyId"];
            isOneToOne: false;
            referencedRelation: "employee";
            referencedColumns: ["id", "companyId"];
          },
          {
            foreignKeyName: "employeeAbility_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeAbility_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeAbility_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "employeeAbility_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      employeeJob: {
        Row: {
          companyId: string;
          customFields: Json | null;
          departmentId: string | null;
          id: string;
          locationId: string | null;
          managerId: string | null;
          shiftId: string | null;
          startDate: string | null;
          tags: string[] | null;
          title: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          customFields?: Json | null;
          departmentId?: string | null;
          id: string;
          locationId?: string | null;
          managerId?: string | null;
          shiftId?: string | null;
          startDate?: string | null;
          tags?: string[] | null;
          title?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          customFields?: Json | null;
          departmentId?: string | null;
          id?: string;
          locationId?: string | null;
          managerId?: string | null;
          shiftId?: string | null;
          startDate?: string | null;
          tags?: string[] | null;
          title?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "employeeJob_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "employeeJob_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "employeeJob_departmentId_fkey";
            columns: ["departmentId"];
            isOneToOne: false;
            referencedRelation: "department";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "employeeJob_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_managerId_fkey";
            columns: ["managerId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_managerId_fkey";
            columns: ["managerId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_managerId_fkey";
            columns: ["managerId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_managerId_fkey";
            columns: ["managerId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_managerId_fkey";
            columns: ["managerId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "employeeJob_shiftId_fkey";
            columns: ["shiftId"];
            isOneToOne: false;
            referencedRelation: "shift";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_shiftId_fkey";
            columns: ["shiftId"];
            isOneToOne: false;
            referencedRelation: "shifts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeJob_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      employeeShift: {
        Row: {
          employeeId: string;
          id: string;
          shiftId: string;
        };
        Insert: {
          employeeId: string;
          id?: string;
          shiftId: string;
        };
        Update: {
          employeeId?: string;
          id?: string;
          shiftId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "employeeShift_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeShift_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeShift_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeShift_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeShift_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "employeeShift_shiftId_fkey";
            columns: ["shiftId"];
            isOneToOne: false;
            referencedRelation: "shift";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeShift_shiftId_fkey";
            columns: ["shiftId"];
            isOneToOne: false;
            referencedRelation: "shifts";
            referencedColumns: ["id"];
          }
        ];
      };
      employeeType: {
        Row: {
          companyId: string;
          createdAt: string;
          id: string;
          name: string;
          protected: boolean;
          updatedAt: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          id?: string;
          name: string;
          protected?: boolean;
          updatedAt?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          id?: string;
          name?: string;
          protected?: boolean;
          updatedAt?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "employeeType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employeeType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "employeeType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      employeeTypePermission: {
        Row: {
          create: string[];
          createdAt: string;
          delete: string[];
          employeeTypeId: string;
          module: Database["public"]["Enums"]["module"];
          update: string[];
          updatedAt: string | null;
          view: string[];
        };
        Insert: {
          create?: string[];
          createdAt?: string;
          delete?: string[];
          employeeTypeId: string;
          module: Database["public"]["Enums"]["module"];
          update?: string[];
          updatedAt?: string | null;
          view?: string[];
        };
        Update: {
          create?: string[];
          createdAt?: string;
          delete?: string[];
          employeeTypeId?: string;
          module?: Database["public"]["Enums"]["module"];
          update?: string[];
          updatedAt?: string | null;
          view?: string[];
        };
        Relationships: [
          {
            foreignKeyName: "employeeTypePermission_new_employeeTypeId_fkey";
            columns: ["employeeTypeId"];
            isOneToOne: false;
            referencedRelation: "employeeType";
            referencedColumns: ["id"];
          }
        ];
      };
      externalLink: {
        Row: {
          companyId: string;
          createdAt: string;
          customerId: string | null;
          documentId: string;
          documentType: Database["public"]["Enums"]["externalLinkDocumentType"];
          expiresAt: string | null;
          id: string;
          supplierId: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          customerId?: string | null;
          documentId: string;
          documentType: Database["public"]["Enums"]["externalLinkDocumentType"];
          expiresAt?: string | null;
          id?: string;
          supplierId?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          customerId?: string | null;
          documentId?: string;
          documentType?: Database["public"]["Enums"]["externalLinkDocumentType"];
          expiresAt?: string | null;
          id?: string;
          supplierId?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "externalLink_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "externalLink_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "externalLink_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "externalLink_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "externalLink_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "externalLinks_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "externalLinks_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "externalLinks_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "externalLinks_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "externalLinks_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "externalLinks_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "externalLinks_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          }
        ];
      };
      feedback: {
        Row: {
          attachmentPath: string | null;
          feedback: string;
          id: string;
          location: string;
          userId: string | null;
        };
        Insert: {
          attachmentPath?: string | null;
          feedback: string;
          id?: string;
          location: string;
          userId?: string | null;
        };
        Update: {
          attachmentPath?: string | null;
          feedback?: string;
          id?: string;
          location?: string;
          userId?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "feedback_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "feedback_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "feedback_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "feedback_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "feedback_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      fiscalYearSettings: {
        Row: {
          companyId: string;
          startMonth: Database["public"]["Enums"]["month"];
          taxStartMonth: Database["public"]["Enums"]["month"];
          updatedBy: string;
        };
        Insert: {
          companyId: string;
          startMonth?: Database["public"]["Enums"]["month"];
          taxStartMonth?: Database["public"]["Enums"]["month"];
          updatedBy: string;
        };
        Update: {
          companyId?: string;
          startMonth?: Database["public"]["Enums"]["month"];
          taxStartMonth?: Database["public"]["Enums"]["month"];
          updatedBy?: string;
        };
        Relationships: [
          {
            foreignKeyName: "fiscalYearSettings_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: true;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fiscalYearSettings_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: true;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fiscalYearSettings_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: true;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "fiscalYearSettings_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: true;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "fiscalYearSettings_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fiscalYearSettings_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fiscalYearSettings_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fiscalYearSettings_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fiscalYearSettings_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      fixture: {
        Row: {
          approved: boolean;
          approvedBy: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customerId: string | null;
          customFields: Json | null;
          externalId: Json | null;
          id: string;
          itemId: string | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customerId?: string | null;
          customFields?: Json | null;
          externalId?: Json | null;
          id: string;
          itemId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customerId?: string | null;
          customFields?: Json | null;
          externalId?: Json | null;
          id?: string;
          itemId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "fixture_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "fixture_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "fixture_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "fixture_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "fixture_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fixture_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      fulfillment: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          jobId: string | null;
          quantity: number;
          salesOrderLineId: string;
          type: Database["public"]["Enums"]["fulfillmentType"];
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          jobId?: string | null;
          quantity: number;
          salesOrderLineId: string;
          type: Database["public"]["Enums"]["fulfillmentType"];
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          jobId?: string | null;
          quantity?: number;
          salesOrderLineId?: string;
          type?: Database["public"]["Enums"]["fulfillmentType"];
        };
        Relationships: [
          {
            foreignKeyName: "fulfillment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fulfillment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fulfillment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "fulfillment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "fulfillment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fulfillment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fulfillment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fulfillment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fulfillment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "fulfillment_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fulfillment_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fulfillment_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fulfillment_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "openSalesOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fulfillment_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "fulfillment_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLines";
            referencedColumns: ["id"];
          }
        ];
      };
      gauge: {
        Row: {
          calibrationIntervalInMonths: number;
          companyId: string | null;
          createdAt: string;
          createdBy: string;
          customFields: Json;
          dateAcquired: string | null;
          description: string | null;
          gaugeCalibrationStatus: Database["public"]["Enums"]["gaugeCalibrationStatus"];
          gaugeId: string;
          gaugeRole: Database["public"]["Enums"]["gaugeRole"];
          gaugeStatus: Database["public"]["Enums"]["gaugeStatus"];
          gaugeTypeId: string;
          id: string;
          lastCalibrationDate: string | null;
          locationId: string | null;
          modelNumber: string | null;
          nextCalibrationDate: string | null;
          serialNumber: string | null;
          shelfId: string | null;
          supplierId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          calibrationIntervalInMonths?: number;
          companyId?: string | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json;
          dateAcquired?: string | null;
          description?: string | null;
          gaugeCalibrationStatus?: Database["public"]["Enums"]["gaugeCalibrationStatus"];
          gaugeId: string;
          gaugeRole?: Database["public"]["Enums"]["gaugeRole"];
          gaugeStatus?: Database["public"]["Enums"]["gaugeStatus"];
          gaugeTypeId: string;
          id?: string;
          lastCalibrationDate?: string | null;
          locationId?: string | null;
          modelNumber?: string | null;
          nextCalibrationDate?: string | null;
          serialNumber?: string | null;
          shelfId?: string | null;
          supplierId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          calibrationIntervalInMonths?: number;
          companyId?: string | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json;
          dateAcquired?: string | null;
          description?: string | null;
          gaugeCalibrationStatus?: Database["public"]["Enums"]["gaugeCalibrationStatus"];
          gaugeId?: string;
          gaugeRole?: Database["public"]["Enums"]["gaugeRole"];
          gaugeStatus?: Database["public"]["Enums"]["gaugeStatus"];
          gaugeTypeId?: string;
          id?: string;
          lastCalibrationDate?: string | null;
          locationId?: string | null;
          modelNumber?: string | null;
          nextCalibrationDate?: string | null;
          serialNumber?: string | null;
          shelfId?: string | null;
          supplierId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "gauge_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "gauge_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "gauge_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "gauge_gaugeTypeId_fkey";
            columns: ["gaugeTypeId"];
            isOneToOne: false;
            referencedRelation: "gaugeType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "gauge_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "gauge_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      gaugeCalibrationRecord: {
        Row: {
          companyId: string | null;
          createdAt: string;
          createdBy: string;
          customFields: Json;
          dateCalibrated: string;
          gaugeId: string;
          id: string;
          inspectionStatus: Database["public"]["Enums"]["inspectionStatus"];
          notes: Json;
          requiresAction: boolean;
          requiresAdjustment: boolean;
          requiresRepair: boolean;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId?: string | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json;
          dateCalibrated: string;
          gaugeId: string;
          id?: string;
          inspectionStatus: Database["public"]["Enums"]["inspectionStatus"];
          notes?: Json;
          requiresAction?: boolean;
          requiresAdjustment?: boolean;
          requiresRepair?: boolean;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json;
          dateCalibrated?: string;
          gaugeId?: string;
          id?: string;
          inspectionStatus?: Database["public"]["Enums"]["inspectionStatus"];
          notes?: Json;
          requiresAction?: boolean;
          requiresAdjustment?: boolean;
          requiresRepair?: boolean;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "gaugeCalibrationRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_gaugeId_fkey";
            columns: ["gaugeId"];
            isOneToOne: false;
            referencedRelation: "gauge";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_gaugeId_fkey";
            columns: ["gaugeId"];
            isOneToOne: false;
            referencedRelation: "gauges";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      gaugeType: {
        Row: {
          companyId: string | null;
          createdAt: string;
          createdBy: string;
          customFields: Json;
          id: string;
          name: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId?: string | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json;
          id?: string;
          name: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json;
          id?: string;
          name?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "gaugeType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "gaugeType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "gaugeType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "gaugeType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      group: {
        Row: {
          companyId: string | null;
          createdAt: string;
          id: string;
          isCustomerOrgGroup: boolean;
          isCustomerTypeGroup: boolean;
          isEmployeeTypeGroup: boolean;
          isIdentityGroup: boolean;
          isSupplierOrgGroup: boolean;
          isSupplierTypeGroup: boolean;
          name: string;
          updatedAt: string | null;
        };
        Insert: {
          companyId?: string | null;
          createdAt?: string;
          id?: string;
          isCustomerOrgGroup?: boolean;
          isCustomerTypeGroup?: boolean;
          isEmployeeTypeGroup?: boolean;
          isIdentityGroup?: boolean;
          isSupplierOrgGroup?: boolean;
          isSupplierTypeGroup?: boolean;
          name: string;
          updatedAt?: string | null;
        };
        Update: {
          companyId?: string | null;
          createdAt?: string;
          id?: string;
          isCustomerOrgGroup?: boolean;
          isCustomerTypeGroup?: boolean;
          isEmployeeTypeGroup?: boolean;
          isIdentityGroup?: boolean;
          isSupplierOrgGroup?: boolean;
          isSupplierTypeGroup?: boolean;
          name?: string;
          updatedAt?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "group_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "group_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "group_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "group_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      holiday: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          date: string;
          id: string;
          name: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          year: number | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          date: string;
          id?: string;
          name: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          year?: number | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          date?: string;
          id?: string;
          name?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          year?: number | null;
        };
        Relationships: [
          {
            foreignKeyName: "holiday_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "holiday_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "holiday_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "holiday_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      integration: {
        Row: {
          id: string;
          jsonschema: Json;
        };
        Insert: {
          id: string;
          jsonschema: Json;
        };
        Update: {
          id?: string;
          jsonschema?: Json;
        };
        Relationships: [];
      };
      invite: {
        Row: {
          acceptedAt: string | null;
          code: string;
          companyId: string;
          createdAt: string;
          createdBy: string;
          email: string;
          id: string;
          permissions: Json;
          role: Database["public"]["Enums"]["role"];
        };
        Insert: {
          acceptedAt?: string | null;
          code: string;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          email: string;
          id?: string;
          permissions?: Json;
          role: Database["public"]["Enums"]["role"];
        };
        Update: {
          acceptedAt?: string | null;
          code?: string;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          email?: string;
          id?: string;
          permissions?: Json;
          role?: Database["public"]["Enums"]["role"];
        };
        Relationships: [
          {
            foreignKeyName: "invite_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "invite_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "invite_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "invite_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "invite_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "invite_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "invite_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "invite_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "invite_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      item: {
        Row: {
          active: boolean;
          assignee: string | null;
          companyId: string | null;
          createdAt: string;
          createdBy: string;
          defaultMethodType: Database["public"]["Enums"]["methodType"] | null;
          description: string | null;
          embedding: unknown | null;
          externalId: Json | null;
          id: string;
          itemTrackingType: Database["public"]["Enums"]["itemTrackingType"];
          modelUploadId: string | null;
          name: string;
          notes: Json | null;
          readableId: string;
          readableIdWithRevision: string | null;
          replenishmentSystem: Database["public"]["Enums"]["itemReplenishmentSystem"];
          revision: string | null;
          thumbnailPath: string | null;
          trackingMethod: string | null;
          type: Database["public"]["Enums"]["itemType"];
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          assignee?: string | null;
          companyId?: string | null;
          createdAt?: string;
          createdBy: string;
          defaultMethodType?: Database["public"]["Enums"]["methodType"] | null;
          description?: string | null;
          embedding?: unknown | null;
          externalId?: Json | null;
          id?: string;
          itemTrackingType: Database["public"]["Enums"]["itemTrackingType"];
          modelUploadId?: string | null;
          name: string;
          notes?: Json | null;
          readableId: string;
          readableIdWithRevision?: string | null;
          replenishmentSystem?: Database["public"]["Enums"]["itemReplenishmentSystem"];
          revision?: string | null;
          thumbnailPath?: string | null;
          trackingMethod?: string | null;
          type: Database["public"]["Enums"]["itemType"];
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          assignee?: string | null;
          companyId?: string | null;
          createdAt?: string;
          createdBy?: string;
          defaultMethodType?: Database["public"]["Enums"]["methodType"] | null;
          description?: string | null;
          embedding?: unknown | null;
          externalId?: Json | null;
          id?: string;
          itemTrackingType?: Database["public"]["Enums"]["itemTrackingType"];
          modelUploadId?: string | null;
          name?: string;
          notes?: Json | null;
          readableId?: string;
          readableIdWithRevision?: string | null;
          replenishmentSystem?: Database["public"]["Enums"]["itemReplenishmentSystem"];
          revision?: string | null;
          thumbnailPath?: string | null;
          trackingMethod?: string | null;
          type?: Database["public"]["Enums"]["itemType"];
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "item_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "item_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "item_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      itemCost: {
        Row: {
          companyId: string;
          costingMethod: Database["public"]["Enums"]["itemCostingMethod"];
          costIsAdjusted: boolean;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          itemId: string;
          itemPostingGroupId: string | null;
          standardCost: number;
          tags: string[] | null;
          unitCost: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          costingMethod: Database["public"]["Enums"]["itemCostingMethod"];
          costIsAdjusted?: boolean;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          itemId: string;
          itemPostingGroupId?: string | null;
          standardCost?: number;
          tags?: string[] | null;
          unitCost?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          costingMethod?: Database["public"]["Enums"]["itemCostingMethod"];
          costIsAdjusted?: boolean;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          itemId?: string;
          itemPostingGroupId?: string | null;
          standardCost?: number;
          tags?: string[] | null;
          unitCost?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "itemCost_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemCost_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemCost_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "itemCost_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "itemCost_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemCost_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemCost_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemCost_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemCost_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemCost_itemPostingGroupId_fkey";
            columns: ["itemPostingGroupId"];
            isOneToOne: false;
            referencedRelation: "itemPostingGroup";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "itemPostingGroup_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      itemLedger: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          documentId: string | null;
          documentLineId: string | null;
          documentType:
            | Database["public"]["Enums"]["itemLedgerDocumentType"]
            | null;
          entryNumber: number;
          entryType: Database["public"]["Enums"]["itemLedgerType"];
          externalDocumentId: string | null;
          id: string;
          itemId: string;
          itemReadableId: string | null;
          locationId: string | null;
          postingDate: string;
          quantity: number;
          shelfId: string | null;
          trackedEntityId: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy?: string;
          documentId?: string | null;
          documentLineId?: string | null;
          documentType?:
            | Database["public"]["Enums"]["itemLedgerDocumentType"]
            | null;
          entryNumber?: number;
          entryType: Database["public"]["Enums"]["itemLedgerType"];
          externalDocumentId?: string | null;
          id?: string;
          itemId: string;
          itemReadableId?: string | null;
          locationId?: string | null;
          postingDate?: string;
          quantity: number;
          shelfId?: string | null;
          trackedEntityId?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          documentId?: string | null;
          documentLineId?: string | null;
          documentType?:
            | Database["public"]["Enums"]["itemLedgerDocumentType"]
            | null;
          entryNumber?: number;
          entryType?: Database["public"]["Enums"]["itemLedgerType"];
          externalDocumentId?: string | null;
          id?: string;
          itemId?: string;
          itemReadableId?: string | null;
          locationId?: string | null;
          postingDate?: string;
          quantity?: number;
          shelfId?: string | null;
          trackedEntityId?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "itemLedger_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemLedger_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemLedger_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemLedger_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemLedger_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "itemLedger_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemLedger_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemLedger_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemLedger_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemLedger_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemLedger_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemLedger_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemLedger_trackedEntityId_fkey";
            columns: ["trackedEntityId"];
            isOneToOne: false;
            referencedRelation: "trackedEntity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partLeger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partLeger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partLeger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "partLeger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      itemPlanning: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          critical: boolean;
          customFields: Json | null;
          demandAccumulationIncludesInventory: boolean;
          demandAccumulationPeriod: number;
          demandAccumulationSafetyStock: number;
          itemId: string;
          locationId: string;
          maximumInventoryQuantity: number;
          maximumOrderQuantity: number;
          minimumOrderQuantity: number;
          orderMultiple: number;
          reorderingPolicy: Database["public"]["Enums"]["itemReorderingPolicy"];
          reorderPoint: number;
          reorderQuantity: number;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          critical?: boolean;
          customFields?: Json | null;
          demandAccumulationIncludesInventory?: boolean;
          demandAccumulationPeriod?: number;
          demandAccumulationSafetyStock?: number;
          itemId: string;
          locationId: string;
          maximumInventoryQuantity?: number;
          maximumOrderQuantity?: number;
          minimumOrderQuantity?: number;
          orderMultiple?: number;
          reorderingPolicy?: Database["public"]["Enums"]["itemReorderingPolicy"];
          reorderPoint?: number;
          reorderQuantity?: number;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          critical?: boolean;
          customFields?: Json | null;
          demandAccumulationIncludesInventory?: boolean;
          demandAccumulationPeriod?: number;
          demandAccumulationSafetyStock?: number;
          itemId?: string;
          locationId?: string;
          maximumInventoryQuantity?: number;
          maximumOrderQuantity?: number;
          minimumOrderQuantity?: number;
          orderMultiple?: number;
          reorderingPolicy?: Database["public"]["Enums"]["itemReorderingPolicy"];
          reorderPoint?: number;
          reorderQuantity?: number;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "itemPlanning_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "itemPlanning_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "itemPlanning_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "itemPlanning_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPlanning_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      itemPostingGroup: {
        Row: {
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          description: string | null;
          id: string;
          name: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          description?: string | null;
          id?: string;
          name: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          description?: string | null;
          id?: string;
          name?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "itemPostingGroup_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "itemPostingGroup_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "itemPostingGroup_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "itemPostingGroup_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemPostingGroup_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      itemReplenishment: {
        Row: {
          companyId: string;
          conversionFactor: number;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          itemId: string;
          leadTime: number;
          lotSize: number | null;
          manufacturingBlocked: boolean;
          preferredSupplierId: string | null;
          purchasingBlocked: boolean;
          purchasingUnitOfMeasureCode: string | null;
          requiresConfiguration: boolean;
          scrapPercentage: number;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          conversionFactor?: number;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          itemId: string;
          leadTime?: number;
          lotSize?: number | null;
          manufacturingBlocked?: boolean;
          preferredSupplierId?: string | null;
          purchasingBlocked?: boolean;
          purchasingUnitOfMeasureCode?: string | null;
          requiresConfiguration?: boolean;
          scrapPercentage?: number;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          conversionFactor?: number;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          itemId?: string;
          leadTime?: number;
          lotSize?: number | null;
          manufacturingBlocked?: boolean;
          preferredSupplierId?: string | null;
          purchasingBlocked?: boolean;
          purchasingUnitOfMeasureCode?: string | null;
          requiresConfiguration?: boolean;
          scrapPercentage?: number;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "itemReplenishment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "itemReplenishment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "itemReplenishment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "itemReplenishment_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: true;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: true;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: true;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: true;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: true;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_preferredSupplierId_fkey";
            columns: ["preferredSupplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "itemReplenishment_preferredSupplierId_fkey";
            columns: ["preferredSupplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "itemReplenishment_preferredSupplierId_fkey";
            columns: ["preferredSupplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_preferredSupplierId_fkey";
            columns: ["preferredSupplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_preferredSupplierId_fkey";
            columns: ["preferredSupplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_purchaseUnitOfMeasureCode_fkey";
            columns: ["purchasingUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "itemReplenishment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemReplenishment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      itemUnitSalePrice: {
        Row: {
          allowInvoiceDiscount: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          currencyCode: string;
          customFields: Json | null;
          itemId: string;
          priceIncludesTax: boolean;
          salesBlocked: boolean;
          salesUnitOfMeasureCode: string | null;
          tags: string[] | null;
          unitSalePrice: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          allowInvoiceDiscount?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          currencyCode: string;
          customFields?: Json | null;
          itemId: string;
          priceIncludesTax?: boolean;
          salesBlocked?: boolean;
          salesUnitOfMeasureCode?: string | null;
          tags?: string[] | null;
          unitSalePrice?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          allowInvoiceDiscount?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          currencyCode?: string;
          customFields?: Json | null;
          itemId?: string;
          priceIncludesTax?: boolean;
          salesBlocked?: boolean;
          salesUnitOfMeasureCode?: string | null;
          tags?: string[] | null;
          unitSalePrice?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "itemUnitSalePrice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_currencyCode_fkey";
            columns: ["currencyCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "currencies";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_currencyCode_fkey";
            columns: ["currencyCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "currency";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_salesUnitOfMeasureId_fkey";
            columns: ["salesUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "itemUnitSalePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      job: {
        Row: {
          actualTime: number | null;
          assignee: string | null;
          companyId: string;
          completedDate: string | null;
          configuration: Json | null;
          createdAt: string;
          createdBy: string;
          customerId: string | null;
          customFields: Json | null;
          deadlineType: Database["public"]["Enums"]["deadlineType"];
          dueDate: string | null;
          estimatedTime: number | null;
          id: string;
          itemId: string;
          jobId: string;
          locationId: string;
          modelUploadId: string | null;
          notes: Json | null;
          productionQuantity: number | null;
          quantity: number;
          quantityComplete: number;
          quantityReceivedToInventory: number;
          quantityShipped: number;
          quoteId: string | null;
          quoteLineId: string | null;
          releasedDate: string | null;
          salesOrderId: string | null;
          salesOrderLineId: string | null;
          scrapQuantity: number;
          secondsToComplete: number | null;
          startDate: string | null;
          status: Database["public"]["Enums"]["jobStatus"];
          tags: string[] | null;
          unitOfMeasureCode: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          actualTime?: number | null;
          assignee?: string | null;
          companyId: string;
          completedDate?: string | null;
          configuration?: Json | null;
          createdAt?: string;
          createdBy: string;
          customerId?: string | null;
          customFields?: Json | null;
          deadlineType?: Database["public"]["Enums"]["deadlineType"];
          dueDate?: string | null;
          estimatedTime?: number | null;
          id?: string;
          itemId: string;
          jobId: string;
          locationId: string;
          modelUploadId?: string | null;
          notes?: Json | null;
          productionQuantity?: number | null;
          quantity?: number;
          quantityComplete?: number;
          quantityReceivedToInventory?: number;
          quantityShipped?: number;
          quoteId?: string | null;
          quoteLineId?: string | null;
          releasedDate?: string | null;
          salesOrderId?: string | null;
          salesOrderLineId?: string | null;
          scrapQuantity?: number;
          secondsToComplete?: number | null;
          startDate?: string | null;
          status?: Database["public"]["Enums"]["jobStatus"];
          tags?: string[] | null;
          unitOfMeasureCode: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          actualTime?: number | null;
          assignee?: string | null;
          companyId?: string;
          completedDate?: string | null;
          configuration?: Json | null;
          createdAt?: string;
          createdBy?: string;
          customerId?: string | null;
          customFields?: Json | null;
          deadlineType?: Database["public"]["Enums"]["deadlineType"];
          dueDate?: string | null;
          estimatedTime?: number | null;
          id?: string;
          itemId?: string;
          jobId?: string;
          locationId?: string;
          modelUploadId?: string | null;
          notes?: Json | null;
          productionQuantity?: number | null;
          quantity?: number;
          quantityComplete?: number;
          quantityReceivedToInventory?: number;
          quantityShipped?: number;
          quoteId?: string | null;
          quoteLineId?: string | null;
          releasedDate?: string | null;
          salesOrderId?: string | null;
          salesOrderLineId?: string | null;
          scrapQuantity?: number;
          secondsToComplete?: number | null;
          startDate?: string | null;
          status?: Database["public"]["Enums"]["jobStatus"];
          tags?: string[] | null;
          unitOfMeasureCode?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "job_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "job_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "job_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "job_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "openSalesOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "job_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      jobFavorite: {
        Row: {
          jobId: string;
          userId: string;
        };
        Insert: {
          jobId: string;
          userId: string;
        };
        Update: {
          jobId?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "jobFavorites_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobFavorites_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobFavorites_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      jobMakeMethod: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          itemId: string;
          jobId: string;
          parentMaterialId: string | null;
          quantityPerParent: number;
          requiresBatchTracking: boolean;
          requiresSerialTracking: boolean;
          trackedEntityId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
          version: number;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          itemId: string;
          jobId: string;
          parentMaterialId?: string | null;
          quantityPerParent?: number;
          requiresBatchTracking?: boolean;
          requiresSerialTracking?: boolean;
          trackedEntityId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          version?: number;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          itemId?: string;
          jobId?: string;
          parentMaterialId?: string | null;
          quantityPerParent?: number;
          requiresBatchTracking?: boolean;
          requiresSerialTracking?: boolean;
          trackedEntityId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          version?: number;
        };
        Relationships: [
          {
            foreignKeyName: "jobMakeMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobMakeMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobMakeMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobMakeMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_parentMaterialId_fkey";
            columns: ["parentMaterialId"];
            isOneToOne: false;
            referencedRelation: "jobMaterial";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_parentMaterialId_fkey";
            columns: ["parentMaterialId"];
            isOneToOne: false;
            referencedRelation: "jobMaterialWithMakeMethodId";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_parentMaterialId_fkey";
            columns: ["parentMaterialId"];
            isOneToOne: false;
            referencedRelation: "openJobMaterialLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_trackedEntityId_fkey";
            columns: ["trackedEntityId"];
            isOneToOne: false;
            referencedRelation: "trackedEntity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      jobMaterial: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          defaultShelf: boolean | null;
          description: string;
          estimatedQuantity: number | null;
          id: string;
          itemId: string;
          itemReadableId: string;
          itemType: string;
          jobId: string;
          jobMakeMethodId: string;
          jobOperationId: string | null;
          kit: boolean;
          methodType: Database["public"]["Enums"]["methodType"];
          order: number;
          quantity: number;
          quantityIssued: number | null;
          quantityToIssue: number | null;
          requiresBatchTracking: boolean;
          requiresSerialTracking: boolean;
          scrapQuantity: number;
          shelfId: string | null;
          unitCost: number;
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          defaultShelf?: boolean | null;
          description: string;
          estimatedQuantity?: number | null;
          id?: string;
          itemId: string;
          itemReadableId: string;
          itemType?: string;
          jobId: string;
          jobMakeMethodId: string;
          jobOperationId?: string | null;
          kit?: boolean;
          methodType?: Database["public"]["Enums"]["methodType"];
          order?: number;
          quantity?: number;
          quantityIssued?: number | null;
          quantityToIssue?: number | null;
          requiresBatchTracking?: boolean;
          requiresSerialTracking?: boolean;
          scrapQuantity?: number;
          shelfId?: string | null;
          unitCost?: number;
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          defaultShelf?: boolean | null;
          description?: string;
          estimatedQuantity?: number | null;
          id?: string;
          itemId?: string;
          itemReadableId?: string;
          itemType?: string;
          jobId?: string;
          jobMakeMethodId?: string;
          jobOperationId?: string | null;
          kit?: boolean;
          methodType?: Database["public"]["Enums"]["methodType"];
          order?: number;
          quantity?: number;
          quantityIssued?: number | null;
          quantityToIssue?: number | null;
          requiresBatchTracking?: boolean;
          requiresSerialTracking?: boolean;
          scrapQuantity?: number;
          shelfId?: string | null;
          unitCost?: number;
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMakeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMaterialWithMakeMethodId";
            referencedColumns: ["jobMaterialMakeMethodId"];
          },
          {
            foreignKeyName: "jobMaterial_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "jobMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      jobOperation: {
        Row: {
          assignee: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          description: string | null;
          dueDate: string | null;
          id: string;
          jobId: string;
          jobMakeMethodId: string | null;
          laborRate: number;
          laborTime: number;
          laborUnit: Database["public"]["Enums"]["factor"];
          machineRate: number | null;
          machineTime: number;
          machineUnit: Database["public"]["Enums"]["factor"];
          operationLeadTime: number;
          operationMinimumCost: number;
          operationOrder: Database["public"]["Enums"]["methodOperationOrder"];
          operationQuantity: number | null;
          operationSupplierProcessId: string | null;
          operationType: Database["public"]["Enums"]["operationType"];
          operationUnitCost: number;
          order: number;
          overheadRate: number;
          priority: number;
          procedureId: string | null;
          processId: string;
          quantityComplete: number | null;
          quantityReworked: number | null;
          quantityScrapped: number | null;
          setupTime: number;
          setupUnit: Database["public"]["Enums"]["factor"];
          startDate: string | null;
          status: Database["public"]["Enums"]["jobOperationStatus"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          workCenterId: string | null;
          workInstruction: Json;
        };
        Insert: {
          assignee?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          description?: string | null;
          dueDate?: string | null;
          id?: string;
          jobId: string;
          jobMakeMethodId?: string | null;
          laborRate?: number;
          laborTime?: number;
          laborUnit?: Database["public"]["Enums"]["factor"];
          machineRate?: number | null;
          machineTime?: number;
          machineUnit?: Database["public"]["Enums"]["factor"];
          operationLeadTime?: number;
          operationMinimumCost?: number;
          operationOrder?: Database["public"]["Enums"]["methodOperationOrder"];
          operationQuantity?: number | null;
          operationSupplierProcessId?: string | null;
          operationType?: Database["public"]["Enums"]["operationType"];
          operationUnitCost?: number;
          order?: number;
          overheadRate?: number;
          priority?: number;
          procedureId?: string | null;
          processId: string;
          quantityComplete?: number | null;
          quantityReworked?: number | null;
          quantityScrapped?: number | null;
          setupTime?: number;
          setupUnit?: Database["public"]["Enums"]["factor"];
          startDate?: string | null;
          status?: Database["public"]["Enums"]["jobOperationStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId?: string | null;
          workInstruction?: Json;
        };
        Update: {
          assignee?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          description?: string | null;
          dueDate?: string | null;
          id?: string;
          jobId?: string;
          jobMakeMethodId?: string | null;
          laborRate?: number;
          laborTime?: number;
          laborUnit?: Database["public"]["Enums"]["factor"];
          machineRate?: number | null;
          machineTime?: number;
          machineUnit?: Database["public"]["Enums"]["factor"];
          operationLeadTime?: number;
          operationMinimumCost?: number;
          operationOrder?: Database["public"]["Enums"]["methodOperationOrder"];
          operationQuantity?: number | null;
          operationSupplierProcessId?: string | null;
          operationType?: Database["public"]["Enums"]["operationType"];
          operationUnitCost?: number;
          order?: number;
          overheadRate?: number;
          priority?: number;
          procedureId?: string | null;
          processId?: string;
          quantityComplete?: number | null;
          quantityReworked?: number | null;
          quantityScrapped?: number | null;
          setupTime?: number;
          setupUnit?: Database["public"]["Enums"]["factor"];
          startDate?: string | null;
          status?: Database["public"]["Enums"]["jobOperationStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId?: string | null;
          workInstruction?: Json;
        };
        Relationships: [
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMakeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMaterialWithMakeMethodId";
            referencedColumns: ["jobMaterialMakeMethodId"];
          },
          {
            foreignKeyName: "jobOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedure";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedures";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "process";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "processes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenter";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenters";
            referencedColumns: ["id"];
          }
        ];
      };
      jobOperationAttribute: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          description: Json | null;
          fileTypes: string[] | null;
          id: string;
          listValues: string[] | null;
          maxValue: number | null;
          minValue: number | null;
          name: string;
          operationId: string;
          required: boolean | null;
          sortOrder: number;
          type: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          description?: Json | null;
          fileTypes?: string[] | null;
          id?: string;
          listValues?: string[] | null;
          maxValue?: number | null;
          minValue?: number | null;
          name: string;
          operationId: string;
          required?: boolean | null;
          sortOrder?: number;
          type: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          description?: Json | null;
          fileTypes?: string[] | null;
          id?: string;
          listValues?: string[] | null;
          maxValue?: number | null;
          minValue?: number | null;
          name?: string;
          operationId?: string;
          required?: boolean | null;
          sortOrder?: number;
          type?: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "jobOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperationAttribute_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttribute_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttribute_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      jobOperationAttributeRecord: {
        Row: {
          booleanValue: boolean | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          jobOperationAttributeId: string;
          numericValue: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
          userValue: string | null;
          value: string | null;
        };
        Insert: {
          booleanValue?: boolean | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          jobOperationAttributeId: string;
          numericValue?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          userValue?: string | null;
          value?: string | null;
        };
        Update: {
          booleanValue?: boolean | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          jobOperationAttributeId?: string;
          numericValue?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          userValue?: string | null;
          value?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "jobOperationAttributeRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_jobOperationAttributeId_fkey";
            columns: ["jobOperationAttributeId"];
            isOneToOne: true;
            referencedRelation: "jobOperationAttribute";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_userValue_fkey";
            columns: ["userValue"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_userValue_fkey";
            columns: ["userValue"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_userValue_fkey";
            columns: ["userValue"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_userValue_fkey";
            columns: ["userValue"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationAttributeRecord_userValue_fkey";
            columns: ["userValue"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      jobOperationDependency: {
        Row: {
          companyId: string;
          createdAt: string;
          dependsOnId: string;
          jobId: string;
          operationId: string;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          dependsOnId: string;
          jobId: string;
          operationId: string;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          dependsOnId?: string;
          jobId?: string;
          operationId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "jobOperationDependency_companyId_fk";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationDependency_companyId_fk";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationDependency_companyId_fk";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperationDependency_companyId_fk";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperationDependency_dependsOnId_fk";
            columns: ["dependsOnId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationDependency_dependsOnId_fk";
            columns: ["dependsOnId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationDependency_dependsOnId_fk";
            columns: ["dependsOnId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationDependency_jobId_fk";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationDependency_jobId_fk";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationDependency_jobId_fk";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationDependency_operationId_fk";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationDependency_operationId_fk";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationDependency_operationId_fk";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          }
        ];
      };
      jobOperationNote: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          jobOperationId: string;
          note: string;
          productionQuantityId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          jobOperationId: string;
          note: string;
          productionQuantityId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          jobOperationId?: string;
          note?: string;
          productionQuantityId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "jobOperationNote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationNote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationNote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperationNote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperationNote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationNote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationNote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationNote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationNote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperationNote_productionQuantityId_fkey";
            columns: ["productionQuantityId"];
            isOneToOne: false;
            referencedRelation: "productionQuantity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationNote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationNote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationNote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationNote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationNote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      jobOperationParameter: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          key: string;
          operationId: string;
          updatedAt: string | null;
          updatedBy: string | null;
          value: string;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          key: string;
          operationId: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          value: string;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          key?: string;
          operationId?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          value?: string;
        };
        Relationships: [
          {
            foreignKeyName: "jobOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperationParameter_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationParameter_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationParameter_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      jobOperationTool: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          operationId: string;
          quantity: number;
          toolId: string;
          updatedAt: string;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          operationId: string;
          quantity?: number;
          toolId: string;
          updatedAt?: string;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          operationId?: string;
          quantity?: number;
          toolId?: string;
          updatedAt?: string;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "jobOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperationTool_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      journal: {
        Row: {
          accountingPeriodId: string | null;
          companyId: string;
          createdAt: string;
          customFields: Json | null;
          description: string | null;
          id: number;
          postingDate: string;
          tags: string[] | null;
        };
        Insert: {
          accountingPeriodId?: string | null;
          companyId: string;
          createdAt?: string;
          customFields?: Json | null;
          description?: string | null;
          id?: number;
          postingDate?: string;
          tags?: string[] | null;
        };
        Update: {
          accountingPeriodId?: string | null;
          companyId?: string;
          createdAt?: string;
          customFields?: Json | null;
          description?: string | null;
          id?: number;
          postingDate?: string;
          tags?: string[] | null;
        };
        Relationships: [
          {
            foreignKeyName: "journal_accountPeriodId_fkey";
            columns: ["accountingPeriodId"];
            isOneToOne: false;
            referencedRelation: "accountingPeriod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "journal_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "journal_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "journal_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "journal_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      journalLine: {
        Row: {
          accountNumber: string;
          accrual: boolean;
          amount: number;
          companyId: string;
          createdAt: string;
          customFields: Json | null;
          description: string | null;
          documentId: string | null;
          documentLineReference: string | null;
          documentType:
            | Database["public"]["Enums"]["journalLineDocumentType"]
            | null;
          externalDocumentId: string | null;
          id: string;
          journalId: number;
          journalLineReference: string;
          quantity: number;
          tags: string[] | null;
        };
        Insert: {
          accountNumber: string;
          accrual?: boolean;
          amount: number;
          companyId: string;
          createdAt?: string;
          customFields?: Json | null;
          description?: string | null;
          documentId?: string | null;
          documentLineReference?: string | null;
          documentType?:
            | Database["public"]["Enums"]["journalLineDocumentType"]
            | null;
          externalDocumentId?: string | null;
          id?: string;
          journalId: number;
          journalLineReference: string;
          quantity?: number;
          tags?: string[] | null;
        };
        Update: {
          accountNumber?: string;
          accrual?: boolean;
          amount?: number;
          companyId?: string;
          createdAt?: string;
          customFields?: Json | null;
          description?: string | null;
          documentId?: string | null;
          documentLineReference?: string | null;
          documentType?:
            | Database["public"]["Enums"]["journalLineDocumentType"]
            | null;
          externalDocumentId?: string | null;
          id?: string;
          journalId?: number;
          journalLineReference?: string;
          quantity?: number;
          tags?: string[] | null;
        };
        Relationships: [
          {
            foreignKeyName: "journalLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "journalLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "journalLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "journalLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "journalLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "journalLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      lessonCompletion: {
        Row: {
          courseId: string;
          createdAt: string;
          lessonId: string;
          userId: string;
        };
        Insert: {
          courseId: string;
          createdAt?: string;
          lessonId: string;
          userId: string;
        };
        Update: {
          courseId?: string;
          createdAt?: string;
          lessonId?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "lessonCompletion_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "lessonCompletion_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "lessonCompletion_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "lessonCompletion_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "lessonCompletion_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      location: {
        Row: {
          addressLine1: string;
          addressLine2: string | null;
          city: string;
          companyId: string;
          countryCode: string | null;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          latitude: number | null;
          longitude: number | null;
          name: string;
          postalCode: string;
          stateProvince: string;
          tags: string[] | null;
          timezone: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          addressLine1: string;
          addressLine2?: string | null;
          city: string;
          companyId: string;
          countryCode?: string | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          latitude?: number | null;
          longitude?: number | null;
          name: string;
          postalCode: string;
          stateProvince: string;
          tags?: string[] | null;
          timezone: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          addressLine1?: string;
          addressLine2?: string | null;
          city?: string;
          companyId?: string;
          countryCode?: string | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          latitude?: number | null;
          longitude?: number | null;
          name?: string;
          postalCode?: string;
          stateProvince?: string;
          tags?: string[] | null;
          timezone?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "location_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "location_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "location_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "location_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      makeMethod: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          itemId: string;
          status: Database["public"]["Enums"]["makeMethodStatus"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          version: number;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          itemId: string;
          status?: Database["public"]["Enums"]["makeMethodStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          version?: number;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          itemId?: string;
          status?: Database["public"]["Enums"]["makeMethodStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          version?: number;
        };
        Relationships: [
          {
            foreignKeyName: "method_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "method_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "method_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "method_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          }
        ];
      };
      material: {
        Row: {
          approved: boolean;
          approvedBy: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          dimensionId: string | null;
          externalId: Json | null;
          finishId: string | null;
          gradeId: string | null;
          id: string;
          materialFormId: string | null;
          materialSubstanceId: string | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          dimensionId?: string | null;
          externalId?: Json | null;
          finishId?: string | null;
          gradeId?: string | null;
          id: string;
          materialFormId?: string | null;
          materialSubstanceId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          dimensionId?: string | null;
          externalId?: Json | null;
          finishId?: string | null;
          gradeId?: string | null;
          id?: string;
          materialFormId?: string | null;
          materialSubstanceId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "material_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "material_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "material_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "material_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "material_dimensionId_fkey";
            columns: ["dimensionId"];
            isOneToOne: false;
            referencedRelation: "materialDimension";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_dimensionId_fkey";
            columns: ["dimensionId"];
            isOneToOne: false;
            referencedRelation: "materialDimensions";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_finishId_fkey";
            columns: ["finishId"];
            isOneToOne: false;
            referencedRelation: "materialFinish";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_finishId_fkey";
            columns: ["finishId"];
            isOneToOne: false;
            referencedRelation: "materialFinishes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_gradeId_fkey";
            columns: ["gradeId"];
            isOneToOne: false;
            referencedRelation: "materialGrade";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_gradeId_fkey";
            columns: ["gradeId"];
            isOneToOne: false;
            referencedRelation: "materialGrades";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_materialFormId_fkey";
            columns: ["materialFormId"];
            isOneToOne: false;
            referencedRelation: "materialForm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_dimensionId_fkey";
            columns: ["dimensionId"];
            isOneToOne: false;
            referencedRelation: "materialDimensions";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_finishId_fkey";
            columns: ["finishId"];
            isOneToOne: false;
            referencedRelation: "materialFinish";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_finishId_fkey";
            columns: ["finishId"];
            isOneToOne: false;
            referencedRelation: "materialFinishes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_gradeId_fkey";
            columns: ["gradeId"];
            isOneToOne: false;
            referencedRelation: "materialGrade";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_gradeId_fkey";
            columns: ["gradeId"];
            isOneToOne: false;
            referencedRelation: "materialGrades";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_materialFormId_fkey";
            columns: ["materialFormId"];
            isOneToOne: false;
            referencedRelation: "materialForm";
            referencedColumns: ["id"];
          }
        ];
      };
      materialDimension: {
        Row: {
          companyId: string | null;
          id: string;
          isMetric: boolean;
          materialFormId: string;
          name: string;
        };
        Insert: {
          companyId?: string | null;
          id?: string;
          isMetric?: boolean;
          materialFormId: string;
          name: string;
        };
        Update: {
          companyId?: string | null;
          id?: string;
          isMetric?: boolean;
          materialFormId?: string;
          name?: string;
        };
        Relationships: [
          {
            foreignKeyName: "materialDimensions_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialDimensions_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialDimensions_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialDimensions_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialDimensions_materialFormId_fkey";
            columns: ["materialFormId"];
            isOneToOne: false;
            referencedRelation: "materialForm";
            referencedColumns: ["id"];
          }
        ];
      };
      materialFinish: {
        Row: {
          companyId: string | null;
          id: string;
          materialSubstanceId: string;
          name: string;
        };
        Insert: {
          companyId?: string | null;
          id?: string;
          materialSubstanceId: string;
          name: string;
        };
        Update: {
          companyId?: string | null;
          id?: string;
          materialSubstanceId?: string;
          name?: string;
        };
        Relationships: [
          {
            foreignKeyName: "materialFinish_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialFinish_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialFinish_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialFinish_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialFinish_materialSubstanceId_fkey";
            columns: ["materialSubstanceId"];
            isOneToOne: false;
            referencedRelation: "materialSubstance";
            referencedColumns: ["id"];
          }
        ];
      };
      materialForm: {
        Row: {
          companyId: string | null;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId?: string | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "materialForm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialForm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialForm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialForm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialForm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialForm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialForm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialForm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialForm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "materialForm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialForm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialForm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialForm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialForm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      materialGrade: {
        Row: {
          companyId: string | null;
          id: string;
          materialSubstanceId: string;
          name: string;
        };
        Insert: {
          companyId?: string | null;
          id?: string;
          materialSubstanceId: string;
          name: string;
        };
        Update: {
          companyId?: string | null;
          id?: string;
          materialSubstanceId?: string;
          name?: string;
        };
        Relationships: [
          {
            foreignKeyName: "materialGrade_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialGrade_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialGrade_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialGrade_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialGrade_materialSubstanceId_fkey";
            columns: ["materialSubstanceId"];
            isOneToOne: false;
            referencedRelation: "materialSubstance";
            referencedColumns: ["id"];
          }
        ];
      };
      materialSubstance: {
        Row: {
          companyId: string | null;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId?: string | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "materialSubstance_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialSubstance_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialSubstance_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialSubstance_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialSubstance_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialSubstance_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialSubstance_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialSubstance_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialSubstance_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "materialSubstance_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialSubstance_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialSubstance_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialSubstance_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialSubstance_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      membership: {
        Row: {
          groupId: string;
          id: number;
          memberGroupId: string | null;
          memberUserId: string | null;
        };
        Insert: {
          groupId: string;
          id?: number;
          memberGroupId?: string | null;
          memberUserId?: string | null;
        };
        Update: {
          groupId?: string;
          id?: number;
          memberGroupId?: string | null;
          memberUserId?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "membership_groupId_fkey";
            columns: ["groupId"];
            isOneToOne: false;
            referencedRelation: "group";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberGroupId_fkey";
            columns: ["memberGroupId"];
            isOneToOne: false;
            referencedRelation: "group";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberUserId_fkey";
            columns: ["memberUserId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberUserId_fkey";
            columns: ["memberUserId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberUserId_fkey";
            columns: ["memberUserId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberUserId_fkey";
            columns: ["memberUserId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberUserId_fkey";
            columns: ["memberUserId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      methodMaterial: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          itemId: string;
          itemReadableId: string;
          itemType: string;
          kit: boolean;
          makeMethodId: string;
          materialMakeMethodId: string | null;
          methodOperationId: string | null;
          methodType: Database["public"]["Enums"]["methodType"];
          order: number;
          productionQuantity: number | null;
          quantity: number;
          scrapQuantity: number;
          tags: string[] | null;
          unitOfMeasureCode: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          itemId: string;
          itemReadableId: string;
          itemType?: string;
          kit?: boolean;
          makeMethodId: string;
          materialMakeMethodId?: string | null;
          methodOperationId?: string | null;
          methodType?: Database["public"]["Enums"]["methodType"];
          order?: number;
          productionQuantity?: number | null;
          quantity: number;
          scrapQuantity?: number;
          tags?: string[] | null;
          unitOfMeasureCode: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          itemId?: string;
          itemReadableId?: string;
          itemType?: string;
          kit?: boolean;
          makeMethodId?: string;
          materialMakeMethodId?: string | null;
          methodOperationId?: string | null;
          methodType?: Database["public"]["Enums"]["methodType"];
          order?: number;
          productionQuantity?: number | null;
          quantity?: number;
          scrapQuantity?: number;
          tags?: string[] | null;
          unitOfMeasureCode?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "methodMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "methodMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "methodMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "methodMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_materialMakeMethodId_fkey";
            columns: ["materialMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "activeMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_materialMakeMethodId_fkey";
            columns: ["materialMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["makeMethodId"];
          },
          {
            foreignKeyName: "methodMaterial_materialMakeMethodId_fkey";
            columns: ["materialMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "makeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_materialMakeMethodId_fkey";
            columns: ["materialMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "quoteOperationsWithMakeMethods";
            referencedColumns: ["makeMethodId"];
          },
          {
            foreignKeyName: "methodMaterial_methodId_fkey";
            columns: ["makeMethodId"];
            isOneToOne: false;
            referencedRelation: "activeMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_methodId_fkey";
            columns: ["makeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["makeMethodId"];
          },
          {
            foreignKeyName: "methodMaterial_methodId_fkey";
            columns: ["makeMethodId"];
            isOneToOne: false;
            referencedRelation: "makeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_methodId_fkey";
            columns: ["makeMethodId"];
            isOneToOne: false;
            referencedRelation: "quoteOperationsWithMakeMethods";
            referencedColumns: ["makeMethodId"];
          },
          {
            foreignKeyName: "methodMaterial_methodOperation_fkey";
            columns: ["methodOperationId"];
            isOneToOne: false;
            referencedRelation: "methodOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "methodMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      methodOperation: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          description: string;
          id: string;
          laborTime: number;
          laborUnit: Database["public"]["Enums"]["factor"];
          machineTime: number;
          machineUnit: Database["public"]["Enums"]["factor"];
          makeMethodId: string;
          operationLeadTime: number | null;
          operationMinimumCost: number | null;
          operationOrder: Database["public"]["Enums"]["methodOperationOrder"];
          operationSupplierProcessId: string | null;
          operationType: Database["public"]["Enums"]["operationType"];
          operationUnitCost: number | null;
          order: number;
          procedureId: string | null;
          processId: string;
          setupTime: number;
          setupUnit: Database["public"]["Enums"]["factor"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          workCenterId: string | null;
          workInstruction: Json;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          description: string;
          id?: string;
          laborTime?: number;
          laborUnit?: Database["public"]["Enums"]["factor"];
          machineTime?: number;
          machineUnit?: Database["public"]["Enums"]["factor"];
          makeMethodId: string;
          operationLeadTime?: number | null;
          operationMinimumCost?: number | null;
          operationOrder?: Database["public"]["Enums"]["methodOperationOrder"];
          operationSupplierProcessId?: string | null;
          operationType?: Database["public"]["Enums"]["operationType"];
          operationUnitCost?: number | null;
          order?: number;
          procedureId?: string | null;
          processId: string;
          setupTime?: number;
          setupUnit?: Database["public"]["Enums"]["factor"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId?: string | null;
          workInstruction?: Json;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          description?: string;
          id?: string;
          laborTime?: number;
          laborUnit?: Database["public"]["Enums"]["factor"];
          machineTime?: number;
          machineUnit?: Database["public"]["Enums"]["factor"];
          makeMethodId?: string;
          operationLeadTime?: number | null;
          operationMinimumCost?: number | null;
          operationOrder?: Database["public"]["Enums"]["methodOperationOrder"];
          operationSupplierProcessId?: string | null;
          operationType?: Database["public"]["Enums"]["operationType"];
          operationUnitCost?: number | null;
          order?: number;
          procedureId?: string | null;
          processId?: string;
          setupTime?: number;
          setupUnit?: Database["public"]["Enums"]["factor"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId?: string | null;
          workInstruction?: Json;
        };
        Relationships: [
          {
            foreignKeyName: "methodOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "methodOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "methodOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "methodOperation_methodId_fkey";
            columns: ["makeMethodId"];
            isOneToOne: false;
            referencedRelation: "activeMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_methodId_fkey";
            columns: ["makeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["makeMethodId"];
          },
          {
            foreignKeyName: "methodOperation_methodId_fkey";
            columns: ["makeMethodId"];
            isOneToOne: false;
            referencedRelation: "makeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_methodId_fkey";
            columns: ["makeMethodId"];
            isOneToOne: false;
            referencedRelation: "quoteOperationsWithMakeMethods";
            referencedColumns: ["makeMethodId"];
          },
          {
            foreignKeyName: "methodOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedure";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedures";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "process";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "processes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "methodOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenter";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenters";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_operationSupplierProcessId_fkey";
            columns: ["operationSupplierProcessId"];
            isOneToOne: false;
            referencedRelation: "supplierProcess";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_operationSupplierProcessId_fkey";
            columns: ["operationSupplierProcessId"];
            isOneToOne: false;
            referencedRelation: "supplierProcesses";
            referencedColumns: ["id"];
          }
        ];
      };
      methodOperationAttribute: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          description: Json | null;
          fileTypes: string[] | null;
          id: string;
          listValues: string[] | null;
          maxValue: number | null;
          minValue: number | null;
          name: string;
          operationId: string;
          required: boolean | null;
          sortOrder: number;
          type: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          description?: Json | null;
          fileTypes?: string[] | null;
          id?: string;
          listValues?: string[] | null;
          maxValue?: number | null;
          minValue?: number | null;
          name: string;
          operationId: string;
          required?: boolean | null;
          sortOrder?: number;
          type: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          description?: Json | null;
          fileTypes?: string[] | null;
          id?: string;
          listValues?: string[] | null;
          maxValue?: number | null;
          minValue?: number | null;
          name?: string;
          operationId?: string;
          required?: boolean | null;
          sortOrder?: number;
          type?: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "methodOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "methodOperationAttribute_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "methodOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      methodOperationParameter: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          key: string;
          operationId: string;
          updatedAt: string | null;
          updatedBy: string | null;
          value: string;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          key: string;
          operationId: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          value: string;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          key?: string;
          operationId?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          value?: string;
        };
        Relationships: [
          {
            foreignKeyName: "methodOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "methodOperationParameter_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "methodOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      methodOperationTool: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          operationId: string;
          quantity: number;
          toolId: string;
          updatedAt: string;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          operationId: string;
          quantity?: number;
          toolId: string;
          updatedAt?: string;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          operationId?: string;
          quantity?: number;
          toolId?: string;
          updatedAt?: string;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "methodOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "methodOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "methodOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "methodOperationTool_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "methodOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "methodOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      modelUpload: {
        Row: {
          autodeskUrn: string | null;
          companyId: string;
          createdAt: string | null;
          createdBy: string;
          id: string;
          modelPath: string;
          name: string | null;
          size: number | null;
          thumbnailPath: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          autodeskUrn?: string | null;
          companyId: string;
          createdAt?: string | null;
          createdBy: string;
          id?: string;
          modelPath: string;
          name?: string | null;
          size?: number | null;
          thumbnailPath?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          autodeskUrn?: string | null;
          companyId?: string;
          createdAt?: string | null;
          createdBy?: string;
          id?: string;
          modelPath?: string;
          name?: string | null;
          size?: number | null;
          thumbnailPath?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "modelUpload_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "modelUpload_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "modelUpload_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "modelUpload_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "modelUpload_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "modelUpload_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "modelUpload_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "modelUpload_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "modelUpload_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "modelUpload_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "modelUpload_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "modelUpload_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "modelUpload_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "modelUpload_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformance: {
        Row: {
          approvalRequirements:
            | Database["public"]["Enums"]["nonConformanceApproval"][]
            | null;
          assignee: string | null;
          closeDate: string | null;
          companyId: string | null;
          content: Json;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          description: string | null;
          dueDate: string | null;
          id: string;
          investigationTypes:
            | Database["public"]["Enums"]["nonConformanceInvestigation"][]
            | null;
          itemId: string | null;
          locationId: string;
          name: string;
          nonConformanceId: string;
          nonConformanceTypeId: string;
          nonConformanceWorkflowId: string | null;
          openDate: string;
          priority:
            | Database["public"]["Enums"]["nonConformancePriority"]
            | null;
          quantity: number;
          requiredActions:
            | Database["public"]["Enums"]["nonConformanceAction"][]
            | null;
          source: Database["public"]["Enums"]["nonConformanceSource"];
          status: Database["public"]["Enums"]["nonConformanceStatus"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          approvalRequirements?:
            | Database["public"]["Enums"]["nonConformanceApproval"][]
            | null;
          assignee?: string | null;
          closeDate?: string | null;
          companyId?: string | null;
          content?: Json;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          description?: string | null;
          dueDate?: string | null;
          id?: string;
          investigationTypes?:
            | Database["public"]["Enums"]["nonConformanceInvestigation"][]
            | null;
          itemId?: string | null;
          locationId: string;
          name: string;
          nonConformanceId: string;
          nonConformanceTypeId: string;
          nonConformanceWorkflowId?: string | null;
          openDate: string;
          priority?:
            | Database["public"]["Enums"]["nonConformancePriority"]
            | null;
          quantity?: number;
          requiredActions?:
            | Database["public"]["Enums"]["nonConformanceAction"][]
            | null;
          source: Database["public"]["Enums"]["nonConformanceSource"];
          status?: Database["public"]["Enums"]["nonConformanceStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          approvalRequirements?:
            | Database["public"]["Enums"]["nonConformanceApproval"][]
            | null;
          assignee?: string | null;
          closeDate?: string | null;
          companyId?: string | null;
          content?: Json;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          description?: string | null;
          dueDate?: string | null;
          id?: string;
          investigationTypes?:
            | Database["public"]["Enums"]["nonConformanceInvestigation"][]
            | null;
          itemId?: string | null;
          locationId?: string;
          name?: string;
          nonConformanceId?: string;
          nonConformanceTypeId?: string;
          nonConformanceWorkflowId?: string | null;
          openDate?: string;
          priority?:
            | Database["public"]["Enums"]["nonConformancePriority"]
            | null;
          quantity?: number;
          requiredActions?:
            | Database["public"]["Enums"]["nonConformanceAction"][]
            | null;
          source?: Database["public"]["Enums"]["nonConformanceSource"];
          status?: Database["public"]["Enums"]["nonConformanceStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformance_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformance_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformance_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformance_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformance_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_nonConformanceTypeId_fkey";
            columns: ["nonConformanceTypeId"];
            isOneToOne: false;
            referencedRelation: "nonConformanceType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_nonConformanceWorkflowId_fkey";
            columns: ["nonConformanceWorkflowId"];
            isOneToOne: false;
            referencedRelation: "nonConformanceWorkflow";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceActionTask: {
        Row: {
          actionType:
            | Database["public"]["Enums"]["nonConformanceAction"]
            | null;
          assignee: string | null;
          companyId: string;
          completedDate: string | null;
          createdAt: string;
          createdBy: string;
          dueDate: string | null;
          id: string;
          nonConformanceId: string;
          notes: Json;
          sortOrder: number;
          status: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          actionType?:
            | Database["public"]["Enums"]["nonConformanceAction"]
            | null;
          assignee?: string | null;
          companyId: string;
          completedDate?: string | null;
          createdAt?: string;
          createdBy: string;
          dueDate?: string | null;
          id?: string;
          nonConformanceId: string;
          notes?: Json;
          sortOrder?: number;
          status?: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          actionType?:
            | Database["public"]["Enums"]["nonConformanceAction"]
            | null;
          assignee?: string | null;
          companyId?: string;
          completedDate?: string | null;
          createdAt?: string;
          createdBy?: string;
          dueDate?: string | null;
          id?: string;
          nonConformanceId?: string;
          notes?: Json;
          sortOrder?: number;
          status?: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceActionTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceApprovalTask: {
        Row: {
          approvalType:
            | Database["public"]["Enums"]["nonConformanceApproval"]
            | null;
          assignee: string | null;
          companyId: string;
          completedDate: string | null;
          createdAt: string;
          createdBy: string;
          dueDate: string | null;
          id: string;
          nonConformanceId: string;
          notes: Json;
          sortOrder: number;
          status: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          approvalType?:
            | Database["public"]["Enums"]["nonConformanceApproval"]
            | null;
          assignee?: string | null;
          companyId: string;
          completedDate?: string | null;
          createdAt?: string;
          createdBy: string;
          dueDate?: string | null;
          id?: string;
          nonConformanceId: string;
          notes?: Json;
          sortOrder?: number;
          status?: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          approvalType?:
            | Database["public"]["Enums"]["nonConformanceApproval"]
            | null;
          assignee?: string | null;
          companyId?: string;
          completedDate?: string | null;
          createdAt?: string;
          createdBy?: string;
          dueDate?: string | null;
          id?: string;
          nonConformanceId?: string;
          notes?: Json;
          sortOrder?: number;
          status?: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceApprovalTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceApprovalTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceCustomer: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customerId: string;
          id: string;
          nonConformanceId: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customerId: string;
          id?: string;
          nonConformanceId: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customerId?: string;
          id?: string;
          nonConformanceId?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceCustomer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceCustomer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceInvestigationTask: {
        Row: {
          assignee: string | null;
          companyId: string;
          completedDate: string | null;
          createdAt: string;
          createdBy: string;
          dueDate: string | null;
          id: string;
          investigationType:
            | Database["public"]["Enums"]["nonConformanceInvestigation"]
            | null;
          nonConformanceId: string;
          notes: Json;
          sortOrder: number;
          status: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          companyId: string;
          completedDate?: string | null;
          createdAt?: string;
          createdBy: string;
          dueDate?: string | null;
          id?: string;
          investigationType?:
            | Database["public"]["Enums"]["nonConformanceInvestigation"]
            | null;
          nonConformanceId: string;
          notes?: Json;
          sortOrder?: number;
          status?: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          companyId?: string;
          completedDate?: string | null;
          createdAt?: string;
          createdBy?: string;
          dueDate?: string | null;
          id?: string;
          investigationType?:
            | Database["public"]["Enums"]["nonConformanceInvestigation"]
            | null;
          nonConformanceId?: string;
          notes?: Json;
          sortOrder?: number;
          status?: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceInvestigationTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceInvestigationTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceJobOperation: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          jobId: string | null;
          jobOperationId: string;
          jobReadableId: string | null;
          nonConformanceId: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          jobId?: string | null;
          jobOperationId: string;
          jobReadableId?: string | null;
          nonConformanceId: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          jobId?: string | null;
          jobOperationId?: string;
          jobReadableId?: string | null;
          nonConformanceId?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceJobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceJobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformancePurchaseOrderLine: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          nonConformanceId: string;
          purchaseOrderId: string | null;
          purchaseOrderLineId: string;
          purchaseOrderReadableId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          nonConformanceId: string;
          purchaseOrderId?: string | null;
          purchaseOrderLineId: string;
          purchaseOrderReadableId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          nonConformanceId?: string;
          purchaseOrderId?: string | null;
          purchaseOrderLineId?: string;
          purchaseOrderReadableId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_purchaseOrderLineId_fkey";
            columns: ["purchaseOrderLineId"];
            isOneToOne: false;
            referencedRelation: "openPurchaseOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_purchaseOrderLineId_fkey";
            columns: ["purchaseOrderLineId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_purchaseOrderLineId_fkey";
            columns: ["purchaseOrderLineId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformancePurchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceReceiptLine: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          nonConformanceId: string;
          receiptId: string | null;
          receiptLineId: string;
          receiptReadableId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          nonConformanceId: string;
          receiptId?: string | null;
          receiptLineId: string;
          receiptReadableId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          nonConformanceId?: string;
          receiptId?: string | null;
          receiptLineId?: string;
          receiptReadableId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceReceiptLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_receiptId_fkey";
            columns: ["receiptId"];
            isOneToOne: false;
            referencedRelation: "receipt";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_receiptLineId_fkey";
            columns: ["receiptLineId"];
            isOneToOne: false;
            referencedRelation: "receiptLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_receiptLineId_fkey";
            columns: ["receiptLineId"];
            isOneToOne: false;
            referencedRelation: "receiptLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReceiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceReviewer: {
        Row: {
          assignee: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          nonConformanceId: string;
          notes: Json;
          status: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          title: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          nonConformanceId: string;
          notes?: Json;
          status?: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          title: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          nonConformanceId?: string;
          notes?: Json;
          status?: Database["public"]["Enums"]["nonConformanceTaskStatus"];
          title?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceReviewer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceReviewer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceSalesOrderLine: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          nonConformanceId: string;
          salesOrderId: string | null;
          salesOrderLineId: string;
          salesOrderReadableId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          nonConformanceId: string;
          salesOrderId?: string | null;
          salesOrderLineId: string;
          salesOrderReadableId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          nonConformanceId?: string;
          salesOrderId?: string | null;
          salesOrderLineId?: string;
          salesOrderReadableId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceSalesOrderLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "openSalesOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSalesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceShipmentLine: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          nonConformanceId: string;
          shipmentId: string | null;
          shipmentLineId: string;
          shipmentReadableId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          nonConformanceId: string;
          shipmentId?: string | null;
          shipmentLineId: string;
          shipmentReadableId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          nonConformanceId?: string;
          shipmentId?: string | null;
          shipmentLineId?: string;
          shipmentReadableId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceShipmentLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_shipmentId_fkey";
            columns: ["shipmentId"];
            isOneToOne: false;
            referencedRelation: "shipment";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_shipmentLineId_fkey";
            columns: ["shipmentLineId"];
            isOneToOne: false;
            referencedRelation: "shipmentLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_shipmentLineId_fkey";
            columns: ["shipmentLineId"];
            isOneToOne: false;
            referencedRelation: "shipmentLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceShipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceSupplier: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          nonConformanceId: string;
          supplierId: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          nonConformanceId: string;
          supplierId: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          nonConformanceId?: string;
          supplierId?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceSupplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceSupplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceTrackedEntity: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          nonConformanceId: string;
          trackedEntityId: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          nonConformanceId: string;
          trackedEntityId: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          nonConformanceId?: string;
          trackedEntityId?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceTrackedEntity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_trackedEntityId_fkey";
            columns: ["trackedEntityId"];
            isOneToOne: false;
            referencedRelation: "trackedEntity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceTrackedEntity_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceType: {
        Row: {
          companyId: string | null;
          createdAt: string;
          createdBy: string;
          customFields: Json;
          id: string;
          name: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId?: string | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json;
          id?: string;
          name: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json;
          id?: string;
          name?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      nonConformanceWorkflow: {
        Row: {
          active: boolean;
          approvalRequirements:
            | Database["public"]["Enums"]["nonConformanceApproval"][]
            | null;
          companyId: string;
          content: Json;
          createdAt: string;
          createdBy: string;
          description: string | null;
          id: string;
          investigationTypes:
            | Database["public"]["Enums"]["nonConformanceInvestigation"][]
            | null;
          name: string;
          priority: Database["public"]["Enums"]["nonConformancePriority"];
          requiredActions:
            | Database["public"]["Enums"]["nonConformanceAction"][]
            | null;
          source: Database["public"]["Enums"]["nonConformanceSource"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          approvalRequirements?:
            | Database["public"]["Enums"]["nonConformanceApproval"][]
            | null;
          companyId: string;
          content?: Json;
          createdAt?: string;
          createdBy: string;
          description?: string | null;
          id?: string;
          investigationTypes?:
            | Database["public"]["Enums"]["nonConformanceInvestigation"][]
            | null;
          name: string;
          priority?: Database["public"]["Enums"]["nonConformancePriority"];
          requiredActions?:
            | Database["public"]["Enums"]["nonConformanceAction"][]
            | null;
          source?: Database["public"]["Enums"]["nonConformanceSource"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          approvalRequirements?:
            | Database["public"]["Enums"]["nonConformanceApproval"][]
            | null;
          companyId?: string;
          content?: Json;
          createdAt?: string;
          createdBy?: string;
          description?: string | null;
          id?: string;
          investigationTypes?:
            | Database["public"]["Enums"]["nonConformanceInvestigation"][]
            | null;
          name?: string;
          priority?: Database["public"]["Enums"]["nonConformancePriority"];
          requiredActions?:
            | Database["public"]["Enums"]["nonConformanceAction"][]
            | null;
          source?: Database["public"]["Enums"]["nonConformanceSource"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformanceWorkflow_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceWorkflow_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      noQuoteReason: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "noQuoteReason_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "noQuoteReason_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "noQuoteReason_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "noQuoteReason_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "noQuoteReason_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "noQuoteReason_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "noQuoteReason_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "noQuoteReason_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "noQuoteReason_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "noQuoteReason_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "noQuoteReason_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "noQuoteReason_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "noQuoteReason_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "noQuoteReason_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      note: {
        Row: {
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          documentId: string;
          id: string;
          note: string;
          noteRichText: Json;
          updatedAt: string | null;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          documentId: string;
          id?: string;
          note: string;
          noteRichText?: Json;
          updatedAt?: string | null;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          documentId?: string;
          id?: string;
          note?: string;
          noteRichText?: Json;
          updatedAt?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "notes_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "notes_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "notes_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "notes_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "notes_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "notes_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "notes_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "notes_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "notes_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      oauthClient: {
        Row: {
          clientId: string;
          clientSecret: string;
          companyId: string;
          createdAt: string | null;
          id: string;
          name: string;
          redirectUris: string[];
          updatedAt: string | null;
        };
        Insert: {
          clientId: string;
          clientSecret: string;
          companyId: string;
          createdAt?: string | null;
          id?: string;
          name: string;
          redirectUris?: string[];
          updatedAt?: string | null;
        };
        Update: {
          clientId?: string;
          clientSecret?: string;
          companyId?: string;
          createdAt?: string | null;
          id?: string;
          name?: string;
          redirectUris?: string[];
          updatedAt?: string | null;
        };
        Relationships: [];
      };
      oauthCode: {
        Row: {
          clientId: string;
          code: string;
          companyId: string;
          createdAt: string | null;
          expiresAt: string;
          id: string;
          redirectUri: string;
          userId: string;
        };
        Insert: {
          clientId: string;
          code: string;
          companyId: string;
          createdAt?: string | null;
          expiresAt: string;
          id?: string;
          redirectUri: string;
          userId: string;
        };
        Update: {
          clientId?: string;
          code?: string;
          companyId?: string;
          createdAt?: string | null;
          expiresAt?: string;
          id?: string;
          redirectUri?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "oauthCode_clientId_fkey";
            columns: ["clientId"];
            isOneToOne: false;
            referencedRelation: "oauthClient";
            referencedColumns: ["clientId"];
          },
          {
            foreignKeyName: "oauthCode_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthCode_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthCode_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "oauthCode_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "oauthCode_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthCode_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthCode_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthCode_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthCode_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      oauthToken: {
        Row: {
          accessToken: string;
          clientId: string;
          companyId: string;
          createdAt: string | null;
          expiresAt: string;
          id: string;
          refreshToken: string;
          userId: string;
        };
        Insert: {
          accessToken: string;
          clientId: string;
          companyId: string;
          createdAt?: string | null;
          expiresAt: string;
          id?: string;
          refreshToken: string;
          userId: string;
        };
        Update: {
          accessToken?: string;
          clientId?: string;
          companyId?: string;
          createdAt?: string | null;
          expiresAt?: string;
          id?: string;
          refreshToken?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "oauthToken_clientId_fkey";
            columns: ["clientId"];
            isOneToOne: false;
            referencedRelation: "oauthClient";
            referencedColumns: ["clientId"];
          },
          {
            foreignKeyName: "oauthToken_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthToken_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthToken_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "oauthToken_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "oauthToken_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthToken_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthToken_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthToken_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "oauthToken_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      opportunity: {
        Row: {
          companyId: string;
          customerId: string;
          id: string;
          purchaseOrderDocumentPath: string | null;
          requestForQuoteDocumentPath: string | null;
        };
        Insert: {
          companyId: string;
          customerId: string;
          id?: string;
          purchaseOrderDocumentPath?: string | null;
          requestForQuoteDocumentPath?: string | null;
        };
        Update: {
          companyId?: string;
          customerId?: string;
          id?: string;
          purchaseOrderDocumentPath?: string | null;
          requestForQuoteDocumentPath?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "opportunity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "opportunity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "opportunity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "opportunity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "opportunity_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "opportunity_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "opportunity_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          }
        ];
      };
      part: {
        Row: {
          approved: boolean;
          approvedBy: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          externalId: Json | null;
          fromDate: string | null;
          id: string;
          tags: string[] | null;
          toDate: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          externalId?: Json | null;
          fromDate?: string | null;
          id: string;
          tags?: string[] | null;
          toDate?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          externalId?: Json | null;
          fromDate?: string | null;
          id?: string;
          tags?: string[] | null;
          toDate?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "part_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "part_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "part_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "part_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "part_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "part_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      partner: {
        Row: {
          abilityId: string;
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          hoursPerWeek: number;
          id: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          abilityId: string;
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          hoursPerWeek?: number;
          id: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          abilityId?: string;
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          hoursPerWeek?: number;
          id?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "partner_abilityId_fkey";
            columns: ["abilityId"];
            isOneToOne: false;
            referencedRelation: "ability";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "partner_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "partner_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "partner_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      paymentTerm: {
        Row: {
          active: boolean;
          calculationMethod: Database["public"]["Enums"]["paymentTermCalculationMethod"];
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          daysDiscount: number;
          daysDue: number;
          discountPercentage: number;
          id: string;
          name: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          calculationMethod?: Database["public"]["Enums"]["paymentTermCalculationMethod"];
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          daysDiscount?: number;
          daysDue?: number;
          discountPercentage?: number;
          id?: string;
          name: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          calculationMethod?: Database["public"]["Enums"]["paymentTermCalculationMethod"];
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          daysDiscount?: number;
          daysDue?: number;
          discountPercentage?: number;
          id?: string;
          name?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "paymentTerm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "paymentTerm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "paymentTerm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "paymentTerm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "paymentTerm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "paymentTerm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "paymentTerm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "paymentTerm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "paymentTerm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "paymentTerm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "paymentTerm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "paymentTerm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "paymentTerm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "paymentTerm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      period: {
        Row: {
          createdAt: string;
          endDate: string;
          id: string;
          periodType: Database["public"]["Enums"]["periodType"];
          startDate: string;
        };
        Insert: {
          createdAt?: string;
          endDate: string;
          id?: string;
          periodType: Database["public"]["Enums"]["periodType"];
          startDate: string;
        };
        Update: {
          createdAt?: string;
          endDate?: string;
          id?: string;
          periodType?: Database["public"]["Enums"]["periodType"];
          startDate?: string;
        };
        Relationships: [];
      };
      pickMethod: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          defaultShelfId: string | null;
          itemId: string;
          locationId: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          defaultShelfId?: string | null;
          itemId: string;
          locationId: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          defaultShelfId?: string | null;
          itemId?: string;
          locationId?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "pickMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "pickMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "pickMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "pickMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_shelfId_fkey";
            columns: ["defaultShelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "pickMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      plan: {
        Row: {
          aiTokensLimit: number;
          createdAt: string;
          id: string;
          name: string;
          public: boolean;
          stripePriceId: string;
          stripeTrialPeriodDays: number;
          tasksLimit: number;
          updatedAt: string;
          userBasedPricing: boolean;
        };
        Insert: {
          aiTokensLimit?: number;
          createdAt?: string;
          id?: string;
          name: string;
          public?: boolean;
          stripePriceId: string;
          stripeTrialPeriodDays?: number;
          tasksLimit?: number;
          updatedAt?: string;
          userBasedPricing?: boolean;
        };
        Update: {
          aiTokensLimit?: number;
          createdAt?: string;
          id?: string;
          name?: string;
          public?: boolean;
          stripePriceId?: string;
          stripeTrialPeriodDays?: number;
          tasksLimit?: number;
          updatedAt?: string;
          userBasedPricing?: boolean;
        };
        Relationships: [];
      };
      postingGroupInventory: {
        Row: {
          capacityVarianceAccount: string;
          companyId: string;
          costOfGoodsSoldAccount: string;
          directCostAppliedAccount: string;
          id: string;
          inventoryAccount: string;
          inventoryAdjustmentVarianceAccount: string;
          inventoryInterimAccrualAccount: string;
          inventoryInvoicedNotReceivedAccount: string;
          inventoryReceivedNotInvoicedAccount: string;
          inventoryShippedNotInvoicedAccount: string;
          itemPostingGroupId: string | null;
          locationId: string | null;
          materialVarianceAccount: string;
          overheadAccount: string;
          overheadCostAppliedAccount: string;
          purchaseVarianceAccount: string;
          updatedBy: string | null;
          workInProgressAccount: string;
        };
        Insert: {
          capacityVarianceAccount: string;
          companyId: string;
          costOfGoodsSoldAccount: string;
          directCostAppliedAccount: string;
          id?: string;
          inventoryAccount: string;
          inventoryAdjustmentVarianceAccount: string;
          inventoryInterimAccrualAccount: string;
          inventoryInvoicedNotReceivedAccount: string;
          inventoryReceivedNotInvoicedAccount: string;
          inventoryShippedNotInvoicedAccount: string;
          itemPostingGroupId?: string | null;
          locationId?: string | null;
          materialVarianceAccount: string;
          overheadAccount: string;
          overheadCostAppliedAccount: string;
          purchaseVarianceAccount: string;
          updatedBy?: string | null;
          workInProgressAccount: string;
        };
        Update: {
          capacityVarianceAccount?: string;
          companyId?: string;
          costOfGoodsSoldAccount?: string;
          directCostAppliedAccount?: string;
          id?: string;
          inventoryAccount?: string;
          inventoryAdjustmentVarianceAccount?: string;
          inventoryInterimAccrualAccount?: string;
          inventoryInvoicedNotReceivedAccount?: string;
          inventoryReceivedNotInvoicedAccount?: string;
          inventoryShippedNotInvoicedAccount?: string;
          itemPostingGroupId?: string | null;
          locationId?: string | null;
          materialVarianceAccount?: string;
          overheadAccount?: string;
          overheadCostAppliedAccount?: string;
          purchaseVarianceAccount?: string;
          updatedBy?: string | null;
          workInProgressAccount?: string;
        };
        Relationships: [
          {
            foreignKeyName: "postingGroupInventory_capacityVarianceAccount_fkey";
            columns: ["capacityVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_capacityVarianceAccount_fkey";
            columns: ["capacityVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_costOfGoodsSoldAccount_fkey";
            columns: ["costOfGoodsSoldAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_costOfGoodsSoldAccount_fkey";
            columns: ["costOfGoodsSoldAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_directCostAppliedAccount_fkey";
            columns: ["directCostAppliedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_directCostAppliedAccount_fkey";
            columns: ["directCostAppliedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryAccount_fkey";
            columns: ["inventoryAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryAccount_fkey";
            columns: ["inventoryAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryAdjustmentVarianceAccount_fkey";
            columns: ["inventoryAdjustmentVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryAdjustmentVarianceAccount_fkey";
            columns: ["inventoryAdjustmentVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryInterimAccrualAccount_fkey";
            columns: ["inventoryInterimAccrualAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryInterimAccrualAccount_fkey";
            columns: ["inventoryInterimAccrualAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryInvoicedNotReceivedAccount_fkey";
            columns: ["inventoryInvoicedNotReceivedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryInvoicedNotReceivedAccount_fkey";
            columns: ["inventoryInvoicedNotReceivedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryReceivedNotInvoicedAccount_fkey";
            columns: ["inventoryReceivedNotInvoicedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryReceivedNotInvoicedAccount_fkey";
            columns: ["inventoryReceivedNotInvoicedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryShippedNotInvoicedAccount_fkey";
            columns: ["inventoryShippedNotInvoicedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_inventoryShippedNotInvoicedAccount_fkey";
            columns: ["inventoryShippedNotInvoicedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_itemPostingGroupId_fkey";
            columns: ["itemPostingGroupId"];
            isOneToOne: false;
            referencedRelation: "itemPostingGroup";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupInventory_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupInventory_materialVarianceAccount_fkey";
            columns: ["materialVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_materialVarianceAccount_fkey";
            columns: ["materialVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_overheadAccount_fkey";
            columns: ["overheadAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_overheadAccount_fkey";
            columns: ["overheadAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_overheadCostAppliedAccount_fkey";
            columns: ["overheadCostAppliedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_overheadCostAppliedAccount_fkey";
            columns: ["overheadCostAppliedAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_purchaseVarianceAccount_fkey";
            columns: ["purchaseVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_purchaseVarianceAccount_fkey";
            columns: ["purchaseVarianceAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupInventory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupInventory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupInventory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupInventory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "postingGroupInventory_workInProgressAccount_fkey";
            columns: ["workInProgressAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupInventory_workInProgressAccount_fkey";
            columns: ["workInProgressAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          }
        ];
      };
      postingGroupPurchasing: {
        Row: {
          companyId: string;
          id: string;
          itemPostingGroupId: string | null;
          payablesAccount: string;
          purchaseAccount: string;
          purchaseCreditAccount: string;
          purchaseDiscountAccount: string;
          purchasePrepaymentAccount: string;
          purchaseTaxPayableAccount: string;
          supplierTypeId: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          id?: string;
          itemPostingGroupId?: string | null;
          payablesAccount: string;
          purchaseAccount: string;
          purchaseCreditAccount: string;
          purchaseDiscountAccount: string;
          purchasePrepaymentAccount: string;
          purchaseTaxPayableAccount: string;
          supplierTypeId?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          id?: string;
          itemPostingGroupId?: string | null;
          payablesAccount?: string;
          purchaseAccount?: string;
          purchaseCreditAccount?: string;
          purchaseDiscountAccount?: string;
          purchasePrepaymentAccount?: string;
          purchaseTaxPayableAccount?: string;
          supplierTypeId?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "postingGroupPurchasing_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_itemPostingGroupId_fkey";
            columns: ["itemPostingGroupId"];
            isOneToOne: false;
            referencedRelation: "itemPostingGroup";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_payablesAccount_fkey";
            columns: ["payablesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_payablesAccount_fkey";
            columns: ["payablesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_purchaseAccount_fkey";
            columns: ["purchaseAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_purchaseAccount_fkey";
            columns: ["purchaseAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_purchaseCreditAccount_fkey";
            columns: ["purchaseCreditAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_purchaseCreditAccount_fkey";
            columns: ["purchaseCreditAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_purchaseDiscountAccount_fkey";
            columns: ["purchaseDiscountAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_purchaseDiscountAccount_fkey";
            columns: ["purchaseDiscountAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_purchasePrepaymentAccount_fkey";
            columns: ["purchasePrepaymentAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_purchasePrepaymentAccount_fkey";
            columns: ["purchasePrepaymentAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_purchaseTaxPayableAccount_fkey";
            columns: ["purchaseTaxPayableAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_purchaseTaxPayableAccount_fkey";
            columns: ["purchaseTaxPayableAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_supplierTypeId_fkey";
            columns: ["supplierTypeId"];
            isOneToOne: false;
            referencedRelation: "supplierType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupPurchasing_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      postingGroupSales: {
        Row: {
          companyId: string;
          customerTypeId: string | null;
          id: string;
          itemPostingGroupId: string | null;
          receivablesAccount: string;
          salesAccount: string;
          salesCreditAccount: string;
          salesDiscountAccount: string;
          salesPrepaymentAccount: string;
          salesTaxPayableAccount: string;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          customerTypeId?: string | null;
          id?: string;
          itemPostingGroupId?: string | null;
          receivablesAccount: string;
          salesAccount: string;
          salesCreditAccount: string;
          salesDiscountAccount: string;
          salesPrepaymentAccount: string;
          salesTaxPayableAccount: string;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          customerTypeId?: string | null;
          id?: string;
          itemPostingGroupId?: string | null;
          receivablesAccount?: string;
          salesAccount?: string;
          salesCreditAccount?: string;
          salesDiscountAccount?: string;
          salesPrepaymentAccount?: string;
          salesTaxPayableAccount?: string;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "postingGroupSales_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupSales_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupSales_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_customerTypeId_fkey";
            columns: ["customerTypeId"];
            isOneToOne: false;
            referencedRelation: "customerType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupSales_itemPostingGroupId_fkey";
            columns: ["itemPostingGroupId"];
            isOneToOne: false;
            referencedRelation: "itemPostingGroup";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupSales_receivablesAccount_fkey";
            columns: ["receivablesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_receivablesAccount_fkey";
            columns: ["receivablesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_salesAccount_fkey";
            columns: ["salesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_salesAccount_fkey";
            columns: ["salesAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_salesCreditAccount_fkey";
            columns: ["salesCreditAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_salesCreditAccount_fkey";
            columns: ["salesCreditAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_salesDiscountAccount_fkey";
            columns: ["salesDiscountAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_salesDiscountAccount_fkey";
            columns: ["salesDiscountAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_salesPrepaymentAccount_fkey";
            columns: ["salesPrepaymentAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_salesPrepaymentAccount_fkey";
            columns: ["salesPrepaymentAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_salesTaxPayableAccount_fkey";
            columns: ["salesTaxPayableAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_salesTaxPayableAccount_fkey";
            columns: ["salesTaxPayableAccount", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "postingGroupSales_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupSales_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupSales_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupSales_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "postingGroupSales_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      procedure: {
        Row: {
          assignee: string | null;
          companyId: string | null;
          content: Json | null;
          createdAt: string;
          createdBy: string;
          description: string | null;
          id: string;
          name: string;
          processId: string | null;
          status: Database["public"]["Enums"]["procedureStatus"];
          updatedAt: string | null;
          updatedBy: string | null;
          version: number;
        };
        Insert: {
          assignee?: string | null;
          companyId?: string | null;
          content?: Json | null;
          createdAt?: string;
          createdBy: string;
          description?: string | null;
          id?: string;
          name: string;
          processId?: string | null;
          status?: Database["public"]["Enums"]["procedureStatus"];
          updatedAt?: string | null;
          updatedBy?: string | null;
          version?: number;
        };
        Update: {
          assignee?: string | null;
          companyId?: string | null;
          content?: Json | null;
          createdAt?: string;
          createdBy?: string;
          description?: string | null;
          id?: string;
          name?: string;
          processId?: string | null;
          status?: Database["public"]["Enums"]["procedureStatus"];
          updatedAt?: string | null;
          updatedBy?: string | null;
          version?: number;
        };
        Relationships: [
          {
            foreignKeyName: "procedure_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "procedure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "procedure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "procedure_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "procedure_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "process";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "processes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      procedureAttribute: {
        Row: {
          companyId: string | null;
          createdAt: string;
          createdBy: string;
          description: Json | null;
          fileTypes: string[] | null;
          id: string;
          listValues: string[] | null;
          maxValue: number | null;
          minValue: number | null;
          name: string;
          procedureId: string;
          required: boolean | null;
          sortOrder: number;
          type: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId?: string | null;
          createdAt?: string;
          createdBy: string;
          description?: Json | null;
          fileTypes?: string[] | null;
          id?: string;
          listValues?: string[] | null;
          maxValue?: number | null;
          minValue?: number | null;
          name: string;
          procedureId: string;
          required?: boolean | null;
          sortOrder?: number;
          type: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string | null;
          createdAt?: string;
          createdBy?: string;
          description?: Json | null;
          fileTypes?: string[] | null;
          id?: string;
          listValues?: string[] | null;
          maxValue?: number | null;
          minValue?: number | null;
          name?: string;
          procedureId?: string;
          required?: boolean | null;
          sortOrder?: number;
          type?: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "procedureAttribute_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "procedureAttribute_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "procedureAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "procedureAttribute_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedure";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedures";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "procedureAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      procedureParameter: {
        Row: {
          companyId: string | null;
          createdAt: string;
          createdBy: string;
          id: string;
          key: string;
          procedureId: string;
          updatedAt: string | null;
          updatedBy: string | null;
          value: string;
        };
        Insert: {
          companyId?: string | null;
          createdAt?: string;
          createdBy: string;
          id?: string;
          key: string;
          procedureId: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          value: string;
        };
        Update: {
          companyId?: string | null;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          key?: string;
          procedureId?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          value?: string;
        };
        Relationships: [
          {
            foreignKeyName: "procedureParameter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "procedureParameter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "procedureParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "procedureParameter_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedure";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedures";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedureParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      process: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          defaultStandardFactor: Database["public"]["Enums"]["factor"];
          id: string;
          name: string;
          processType: Database["public"]["Enums"]["processType"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          defaultStandardFactor: Database["public"]["Enums"]["factor"];
          id?: string;
          name: string;
          processType?: Database["public"]["Enums"]["processType"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          defaultStandardFactor?: Database["public"]["Enums"]["factor"];
          id?: string;
          name?: string;
          processType?: Database["public"]["Enums"]["processType"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "process_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "process_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "process_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "process_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      productionEvent: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          duration: number | null;
          employeeId: string | null;
          endTime: string | null;
          id: string;
          jobOperationId: string;
          notes: string | null;
          startTime: string;
          type: Database["public"]["Enums"]["productionEventType"] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          workCenterId: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          duration?: number | null;
          employeeId?: string | null;
          endTime?: string | null;
          id?: string;
          jobOperationId: string;
          notes?: string | null;
          startTime?: string;
          type?: Database["public"]["Enums"]["productionEventType"] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          duration?: number | null;
          employeeId?: string | null;
          endTime?: string | null;
          id?: string;
          jobOperationId?: string;
          notes?: string | null;
          startTime?: string;
          type?: Database["public"]["Enums"]["productionEventType"] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "productionEvent_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "productionEvent_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "productionEvent_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "productionEvent_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "productionEvent_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "productionEvent_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenter";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionEvent_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenters";
            referencedColumns: ["id"];
          }
        ];
      };
      productionQuantity: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          jobOperationId: string;
          laborProductionEventId: string | null;
          machineProductionEventId: string | null;
          notes: string | null;
          quantity: number;
          scrapReasonId: string | null;
          setupProductionEventId: string | null;
          type: Database["public"]["Enums"]["productionQuantityType"];
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          jobOperationId: string;
          laborProductionEventId?: string | null;
          machineProductionEventId?: string | null;
          notes?: string | null;
          quantity: number;
          scrapReasonId?: string | null;
          setupProductionEventId?: string | null;
          type?: Database["public"]["Enums"]["productionQuantityType"];
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          jobOperationId?: string;
          laborProductionEventId?: string | null;
          machineProductionEventId?: string | null;
          notes?: string | null;
          quantity?: number;
          scrapReasonId?: string | null;
          setupProductionEventId?: string | null;
          type?: Database["public"]["Enums"]["productionQuantityType"];
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "productionQuantity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionQuantity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionQuantity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "productionQuantity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "productionQuantity_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionQuantity_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionQuantity_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionQuantity_laborProductionEventId_fkey";
            columns: ["laborProductionEventId"];
            isOneToOne: false;
            referencedRelation: "productionEvent";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionQuantity_machineProductionEventId_fkey";
            columns: ["machineProductionEventId"];
            isOneToOne: false;
            referencedRelation: "productionEvent";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionQuantity_scrapReasonId_fkey";
            columns: ["scrapReasonId"];
            isOneToOne: false;
            referencedRelation: "scrapReason";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "productionQuantity_setupProductionEventId_fkey";
            columns: ["setupProductionEventId"];
            isOneToOne: false;
            referencedRelation: "productionEvent";
            referencedColumns: ["id"];
          }
        ];
      };
      purchaseInvoice: {
        Row: {
          assignee: string | null;
          balance: number;
          companyId: string;
          createdAt: string;
          createdBy: string;
          currencyCode: string;
          customFields: Json | null;
          dateDue: string | null;
          dateIssued: string | null;
          datePaid: string | null;
          exchangeRate: number;
          exchangeRateUpdatedAt: string | null;
          id: string;
          internalNotes: Json | null;
          invoiceId: string;
          invoiceSupplierContactId: string | null;
          invoiceSupplierId: string | null;
          invoiceSupplierLocationId: string | null;
          locationId: string | null;
          paymentTermId: string | null;
          postingDate: string | null;
          status: Database["public"]["Enums"]["purchaseInvoiceStatus"];
          subtotal: number;
          supplierId: string | null;
          supplierInteractionId: string;
          supplierReference: string | null;
          tags: string[] | null;
          totalAmount: number;
          totalDiscount: number;
          totalTax: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          balance?: number;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          currencyCode: string;
          customFields?: Json | null;
          dateDue?: string | null;
          dateIssued?: string | null;
          datePaid?: string | null;
          exchangeRate?: number;
          exchangeRateUpdatedAt?: string | null;
          id?: string;
          internalNotes?: Json | null;
          invoiceId: string;
          invoiceSupplierContactId?: string | null;
          invoiceSupplierId?: string | null;
          invoiceSupplierLocationId?: string | null;
          locationId?: string | null;
          paymentTermId?: string | null;
          postingDate?: string | null;
          status?: Database["public"]["Enums"]["purchaseInvoiceStatus"];
          subtotal?: number;
          supplierId?: string | null;
          supplierInteractionId: string;
          supplierReference?: string | null;
          tags?: string[] | null;
          totalAmount?: number;
          totalDiscount?: number;
          totalTax?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          balance?: number;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          currencyCode?: string;
          customFields?: Json | null;
          dateDue?: string | null;
          dateIssued?: string | null;
          datePaid?: string | null;
          exchangeRate?: number;
          exchangeRateUpdatedAt?: string | null;
          id?: string;
          internalNotes?: Json | null;
          invoiceId?: string;
          invoiceSupplierContactId?: string | null;
          invoiceSupplierId?: string | null;
          invoiceSupplierLocationId?: string | null;
          locationId?: string | null;
          paymentTermId?: string | null;
          postingDate?: string | null;
          status?: Database["public"]["Enums"]["purchaseInvoiceStatus"];
          subtotal?: number;
          supplierId?: string | null;
          supplierInteractionId?: string;
          supplierReference?: string | null;
          tags?: string[] | null;
          totalAmount?: number;
          totalDiscount?: number;
          totalTax?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseInvoice_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseInvoice_currencyCode_fkey";
            columns: ["currencyCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "currencies";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoice_currencyCode_fkey";
            columns: ["currencyCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "currency";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierContactId_fkey";
            columns: ["invoiceSupplierContactId"];
            isOneToOne: false;
            referencedRelation: "supplierContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierLocationId_fkey";
            columns: ["invoiceSupplierLocationId"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_paymentTermId_fkey";
            columns: ["paymentTermId"];
            isOneToOne: false;
            referencedRelation: "paymentTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierInteractionId_fkey";
            columns: ["supplierInteractionId"];
            isOneToOne: false;
            referencedRelation: "supplierInteraction";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseInvoiceDelivery: {
        Row: {
          companyId: string;
          customFields: Json | null;
          id: string;
          locationId: string | null;
          shippingMethodId: string | null;
          shippingTermId: string | null;
          supplierShippingCost: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          customFields?: Json | null;
          id: string;
          locationId?: string | null;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          supplierShippingCost?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          customFields?: Json | null;
          id?: string;
          locationId?: string | null;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          supplierShippingCost?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseInvoiceDelivery_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "purchaseInvoice";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceDelivery_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "purchaseInvoices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceDelivery_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceDelivery_shippingMethodId_fkey";
            columns: ["shippingMethodId"];
            isOneToOne: false;
            referencedRelation: "shippingMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceDelivery_shippingTermId_fkey";
            columns: ["shippingTermId"];
            isOneToOne: false;
            referencedRelation: "shippingTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceDelivery_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceDelivery_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceDelivery_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceDelivery_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceDelivery_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseInvoiceLine: {
        Row: {
          accountNumber: string | null;
          assetId: string | null;
          companyId: string;
          conversionFactor: number | null;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          description: string | null;
          exchangeRate: number;
          extendedPrice: number | null;
          id: string;
          internalNotes: Json | null;
          inventoryUnitOfMeasureCode: string | null;
          invoiceId: string;
          invoiceLineType: Database["public"]["Enums"]["payableLineType"];
          itemId: string | null;
          itemReadableId: string | null;
          jobOperationId: string | null;
          locationId: string | null;
          modelUploadId: string | null;
          purchaseOrderId: string | null;
          purchaseOrderLineId: string | null;
          purchaseUnitOfMeasureCode: string | null;
          quantity: number;
          serviceId: string | null;
          shelfId: string | null;
          shippingCost: number | null;
          supplierExtendedPrice: number | null;
          supplierShippingCost: number;
          supplierTaxAmount: number;
          supplierUnitPrice: number;
          tags: string[] | null;
          taxAmount: number | null;
          taxPercent: number | null;
          totalAmount: number | null;
          unitPrice: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          accountNumber?: string | null;
          assetId?: string | null;
          companyId: string;
          conversionFactor?: number | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          description?: string | null;
          exchangeRate?: number;
          extendedPrice?: number | null;
          id?: string;
          internalNotes?: Json | null;
          inventoryUnitOfMeasureCode?: string | null;
          invoiceId: string;
          invoiceLineType: Database["public"]["Enums"]["payableLineType"];
          itemId?: string | null;
          itemReadableId?: string | null;
          jobOperationId?: string | null;
          locationId?: string | null;
          modelUploadId?: string | null;
          purchaseOrderId?: string | null;
          purchaseOrderLineId?: string | null;
          purchaseUnitOfMeasureCode?: string | null;
          quantity?: number;
          serviceId?: string | null;
          shelfId?: string | null;
          shippingCost?: number | null;
          supplierExtendedPrice?: number | null;
          supplierShippingCost?: number;
          supplierTaxAmount?: number;
          supplierUnitPrice?: number;
          tags?: string[] | null;
          taxAmount?: number | null;
          taxPercent?: number | null;
          totalAmount?: number | null;
          unitPrice?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          accountNumber?: string | null;
          assetId?: string | null;
          companyId?: string;
          conversionFactor?: number | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          description?: string | null;
          exchangeRate?: number;
          extendedPrice?: number | null;
          id?: string;
          internalNotes?: Json | null;
          inventoryUnitOfMeasureCode?: string | null;
          invoiceId?: string;
          invoiceLineType?: Database["public"]["Enums"]["payableLineType"];
          itemId?: string | null;
          itemReadableId?: string | null;
          jobOperationId?: string | null;
          locationId?: string | null;
          modelUploadId?: string | null;
          purchaseOrderId?: string | null;
          purchaseOrderLineId?: string | null;
          purchaseUnitOfMeasureCode?: string | null;
          quantity?: number;
          serviceId?: string | null;
          shelfId?: string | null;
          shippingCost?: number | null;
          supplierExtendedPrice?: number | null;
          supplierShippingCost?: number;
          supplierTaxAmount?: number;
          supplierUnitPrice?: number;
          tags?: string[] | null;
          taxAmount?: number | null;
          taxPercent?: number | null;
          totalAmount?: number | null;
          unitPrice?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseInvoiceLine_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLine_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLine_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_inventoryUnitOfMeasureCode_fkey";
            columns: ["inventoryUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoice";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderLineId_fkey";
            columns: ["purchaseOrderLineId"];
            isOneToOne: false;
            referencedRelation: "openPurchaseOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderLineId_fkey";
            columns: ["purchaseOrderLineId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderLineId_fkey";
            columns: ["purchaseOrderLineId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseUnitOfMeasureCode_fkey";
            columns: ["purchaseUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseInvoicePaymentRelation: {
        Row: {
          id: string;
          invoiceId: string;
          paymentId: string;
        };
        Insert: {
          id?: string;
          invoiceId: string;
          paymentId: string;
        };
        Update: {
          id?: string;
          invoiceId?: string;
          paymentId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "purchasePayments_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoice";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayments_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayments_paymentId_fkey";
            columns: ["paymentId"];
            isOneToOne: false;
            referencedRelation: "purchasePayment";
            referencedColumns: ["id"];
          }
        ];
      };
      purchaseInvoicePriceChange: {
        Row: {
          id: string;
          invoiceId: string;
          invoiceLineId: string;
          newPrice: number;
          newQuantity: number;
          previousPrice: number;
          previousQuantity: number;
          updatedBy: string;
        };
        Insert: {
          id?: string;
          invoiceId: string;
          invoiceLineId: string;
          newPrice?: number;
          newQuantity?: number;
          previousPrice?: number;
          previousQuantity?: number;
          updatedBy: string;
        };
        Update: {
          id?: string;
          invoiceId?: string;
          invoiceLineId?: string;
          newPrice?: number;
          newQuantity?: number;
          previousPrice?: number;
          previousQuantity?: number;
          updatedBy?: string;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseInvoicePriceChange_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoice";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoicePriceChange_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoicePriceChange_invoiceLineId_fkey";
            columns: ["invoiceLineId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoiceLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoicePriceChange_invoiceLineId_fkey";
            columns: ["invoiceLineId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoiceLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoicePriceChange_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoicePriceChange_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoicePriceChange_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoicePriceChange_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoicePriceChange_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseInvoiceStatusHistory: {
        Row: {
          createdAt: string;
          id: string;
          invoiceId: string;
          status: Database["public"]["Enums"]["purchaseInvoiceStatus"];
        };
        Insert: {
          createdAt?: string;
          id?: string;
          invoiceId: string;
          status: Database["public"]["Enums"]["purchaseInvoiceStatus"];
        };
        Update: {
          createdAt?: string;
          id?: string;
          invoiceId?: string;
          status?: Database["public"]["Enums"]["purchaseInvoiceStatus"];
        };
        Relationships: [
          {
            foreignKeyName: "purchaseInvoiceStatusHistory_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoice";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceStatusHistory_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoices";
            referencedColumns: ["id"];
          }
        ];
      };
      purchaseOrder: {
        Row: {
          assignee: string | null;
          closedAt: string | null;
          closedBy: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          currencyCode: string | null;
          customFields: Json | null;
          exchangeRate: number | null;
          exchangeRateUpdatedAt: string | null;
          externalNotes: Json | null;
          id: string;
          internalNotes: Json | null;
          jobId: string | null;
          jobReadableId: string | null;
          orderDate: string | null;
          purchaseOrderId: string;
          purchaseOrderType: Database["public"]["Enums"]["purchaseOrderType"];
          revisionId: number;
          status: Database["public"]["Enums"]["purchaseOrderStatus"];
          supplierContactId: string | null;
          supplierId: string;
          supplierInteractionId: string;
          supplierLocationId: string | null;
          supplierReference: string | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          closedAt?: string | null;
          closedBy?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          currencyCode?: string | null;
          customFields?: Json | null;
          exchangeRate?: number | null;
          exchangeRateUpdatedAt?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          jobId?: string | null;
          jobReadableId?: string | null;
          orderDate?: string | null;
          purchaseOrderId: string;
          purchaseOrderType?: Database["public"]["Enums"]["purchaseOrderType"];
          revisionId?: number;
          status?: Database["public"]["Enums"]["purchaseOrderStatus"];
          supplierContactId?: string | null;
          supplierId: string;
          supplierInteractionId: string;
          supplierLocationId?: string | null;
          supplierReference?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          closedAt?: string | null;
          closedBy?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          currencyCode?: string | null;
          customFields?: Json | null;
          exchangeRate?: number | null;
          exchangeRateUpdatedAt?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          jobId?: string | null;
          jobReadableId?: string | null;
          orderDate?: string | null;
          purchaseOrderId?: string;
          purchaseOrderType?: Database["public"]["Enums"]["purchaseOrderType"];
          revisionId?: number;
          status?: Database["public"]["Enums"]["purchaseOrderStatus"];
          supplierContactId?: string | null;
          supplierId?: string;
          supplierInteractionId?: string;
          supplierLocationId?: string | null;
          supplierReference?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseOrder_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "purchaseOrder_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierContactId_fkey";
            columns: ["supplierContactId"];
            isOneToOne: false;
            referencedRelation: "supplierContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierInteractionId_fkey";
            columns: ["supplierInteractionId"];
            isOneToOne: false;
            referencedRelation: "supplierInteraction";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierLocationId_fkey";
            columns: ["supplierLocationId"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseOrderDelivery: {
        Row: {
          companyId: string;
          customerId: string | null;
          customerLocationId: string | null;
          customFields: Json | null;
          deliveryDate: string | null;
          dropShipment: boolean;
          id: string;
          locationId: string | null;
          notes: string | null;
          receiptPromisedDate: string | null;
          receiptRequestedDate: string | null;
          shippingMethodId: string | null;
          shippingTermId: string | null;
          supplierShippingCost: number;
          tags: string[] | null;
          trackingNumber: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          customerId?: string | null;
          customerLocationId?: string | null;
          customFields?: Json | null;
          deliveryDate?: string | null;
          dropShipment?: boolean;
          id: string;
          locationId?: string | null;
          notes?: string | null;
          receiptPromisedDate?: string | null;
          receiptRequestedDate?: string | null;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          supplierShippingCost?: number;
          tags?: string[] | null;
          trackingNumber?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          customerId?: string | null;
          customerLocationId?: string | null;
          customFields?: Json | null;
          deliveryDate?: string | null;
          dropShipment?: boolean;
          id?: string;
          locationId?: string | null;
          notes?: string | null;
          receiptPromisedDate?: string | null;
          receiptRequestedDate?: string | null;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          supplierShippingCost?: number;
          tags?: string[] | null;
          trackingNumber?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseOrderDelivery_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_customerLocationId_fkey";
            columns: ["customerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "purchaseOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "purchaseOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "purchaseOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_shippingMethodId_fkey";
            columns: ["shippingMethodId"];
            isOneToOne: false;
            referencedRelation: "shippingMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_shippingTermId_fkey";
            columns: ["shippingTermId"];
            isOneToOne: false;
            referencedRelation: "shippingTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseOrderFavorite: {
        Row: {
          purchaseOrderId: string;
          userId: string;
        };
        Insert: {
          purchaseOrderId: string;
          userId: string;
        };
        Update: {
          purchaseOrderId?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseOrderFavorites_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderFavorites_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderFavorites_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseOrderLine: {
        Row: {
          accountNumber: string | null;
          assetId: string | null;
          companyId: string;
          conversionFactor: number | null;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          description: string | null;
          exchangeRate: number;
          extendedPrice: number | null;
          externalNotes: Json | null;
          id: string;
          internalNotes: Json | null;
          inventoryUnitOfMeasureCode: string | null;
          invoicedComplete: boolean;
          itemId: string | null;
          itemReadableId: string | null;
          jobId: string | null;
          jobOperationId: string | null;
          locationId: string | null;
          modelUploadId: string | null;
          promisedDate: string | null;
          purchaseOrderId: string;
          purchaseOrderLineType: Database["public"]["Enums"]["purchaseOrderLineType"];
          purchaseQuantity: number | null;
          purchaseUnitOfMeasureCode: string | null;
          quantityInvoiced: number | null;
          quantityReceived: number | null;
          quantityShipped: number | null;
          quantityToInvoice: number | null;
          quantityToReceive: number | null;
          receivedComplete: boolean;
          requiresInspection: boolean;
          setupPrice: number | null;
          shelfId: string | null;
          shippingCost: number | null;
          supplierExtendedPrice: number | null;
          supplierShippingCost: number;
          supplierTaxAmount: number;
          supplierUnitPrice: number | null;
          tags: string[] | null;
          taxAmount: number | null;
          taxPercent: number | null;
          unitPrice: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          accountNumber?: string | null;
          assetId?: string | null;
          companyId: string;
          conversionFactor?: number | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          description?: string | null;
          exchangeRate?: number;
          extendedPrice?: number | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          inventoryUnitOfMeasureCode?: string | null;
          invoicedComplete?: boolean;
          itemId?: string | null;
          itemReadableId?: string | null;
          jobId?: string | null;
          jobOperationId?: string | null;
          locationId?: string | null;
          modelUploadId?: string | null;
          promisedDate?: string | null;
          purchaseOrderId: string;
          purchaseOrderLineType: Database["public"]["Enums"]["purchaseOrderLineType"];
          purchaseQuantity?: number | null;
          purchaseUnitOfMeasureCode?: string | null;
          quantityInvoiced?: number | null;
          quantityReceived?: number | null;
          quantityShipped?: number | null;
          quantityToInvoice?: number | null;
          quantityToReceive?: number | null;
          receivedComplete?: boolean;
          requiresInspection?: boolean;
          setupPrice?: number | null;
          shelfId?: string | null;
          shippingCost?: number | null;
          supplierExtendedPrice?: number | null;
          supplierShippingCost?: number;
          supplierTaxAmount?: number;
          supplierUnitPrice?: number | null;
          tags?: string[] | null;
          taxAmount?: number | null;
          taxPercent?: number | null;
          unitPrice?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          accountNumber?: string | null;
          assetId?: string | null;
          companyId?: string;
          conversionFactor?: number | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          description?: string | null;
          exchangeRate?: number;
          extendedPrice?: number | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          inventoryUnitOfMeasureCode?: string | null;
          invoicedComplete?: boolean;
          itemId?: string | null;
          itemReadableId?: string | null;
          jobId?: string | null;
          jobOperationId?: string | null;
          locationId?: string | null;
          modelUploadId?: string | null;
          promisedDate?: string | null;
          purchaseOrderId?: string;
          purchaseOrderLineType?: Database["public"]["Enums"]["purchaseOrderLineType"];
          purchaseQuantity?: number | null;
          purchaseUnitOfMeasureCode?: string | null;
          quantityInvoiced?: number | null;
          quantityReceived?: number | null;
          quantityShipped?: number | null;
          quantityToInvoice?: number | null;
          quantityToReceive?: number | null;
          receivedComplete?: boolean;
          requiresInspection?: boolean;
          setupPrice?: number | null;
          shelfId?: string | null;
          shippingCost?: number | null;
          supplierExtendedPrice?: number | null;
          supplierShippingCost?: number;
          supplierTaxAmount?: number;
          supplierUnitPrice?: number | null;
          tags?: string[] | null;
          taxAmount?: number | null;
          taxPercent?: number | null;
          unitPrice?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseOrderLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_inventoryUnitOfMeasureCode_fkey";
            columns: ["inventoryUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_purchaseUnitOfMeasureCode_fkey";
            columns: ["purchaseUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseOrderPayment: {
        Row: {
          companyId: string;
          customFields: Json | null;
          id: string;
          invoiceSupplierContactId: string | null;
          invoiceSupplierId: string | null;
          invoiceSupplierLocationId: string | null;
          paymentComplete: boolean;
          paymentTermId: string | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          customFields?: Json | null;
          id: string;
          invoiceSupplierContactId?: string | null;
          invoiceSupplierId?: string | null;
          invoiceSupplierLocationId?: string | null;
          paymentComplete?: boolean;
          paymentTermId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          customFields?: Json | null;
          id?: string;
          invoiceSupplierContactId?: string | null;
          invoiceSupplierId?: string | null;
          invoiceSupplierLocationId?: string | null;
          paymentComplete?: boolean;
          paymentTermId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseOrderPayment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "purchaseOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderPayment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "purchaseOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderPayment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "purchaseOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderPayment_invoiceSupplierContactId_fkey";
            columns: ["invoiceSupplierContactId"];
            isOneToOne: false;
            referencedRelation: "supplierContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderPayment_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseOrderPayment_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseOrderPayment_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderPayment_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderPayment_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderPayment_invoiceSupplierLocationId_fkey";
            columns: ["invoiceSupplierLocationId"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderPayment_paymentTermId_fkey";
            columns: ["paymentTermId"];
            isOneToOne: false;
            referencedRelation: "paymentTerm";
            referencedColumns: ["id"];
          }
        ];
      };
      purchaseOrderStatusHistory: {
        Row: {
          createdAt: string;
          createdBy: string;
          id: string;
          purchaseOrderId: string;
          status: Database["public"]["Enums"]["purchaseOrderStatus"];
        };
        Insert: {
          createdAt?: string;
          createdBy: string;
          id?: string;
          purchaseOrderId: string;
          status: Database["public"]["Enums"]["purchaseOrderStatus"];
        };
        Update: {
          createdAt?: string;
          createdBy?: string;
          id?: string;
          purchaseOrderId?: string;
          status?: Database["public"]["Enums"]["purchaseOrderStatus"];
        };
        Relationships: [
          {
            foreignKeyName: "purchaseOrderStatusHistory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderStatusHistory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderStatusHistory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderStatusHistory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderStatusHistory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseOrderStatusHistory_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderStatusHistory_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderStatusHistory_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrders";
            referencedColumns: ["id"];
          }
        ];
      };
      purchaseOrderTransaction: {
        Row: {
          createdAt: string;
          id: string;
          purchaseOrderId: string;
          type: Database["public"]["Enums"]["purchaseOrderTransactionType"];
          userId: string;
        };
        Insert: {
          createdAt?: string;
          id?: string;
          purchaseOrderId: string;
          type: Database["public"]["Enums"]["purchaseOrderTransactionType"];
          userId: string;
        };
        Update: {
          createdAt?: string;
          id?: string;
          purchaseOrderId?: string;
          type?: Database["public"]["Enums"]["purchaseOrderTransactionType"];
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseOrderTransaction_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderTransaction_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderTransaction_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchasePayment: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          currencyCode: string;
          customFields: Json | null;
          exchangeRate: number;
          id: string;
          paymentDate: string | null;
          paymentId: string;
          supplierId: string;
          totalAmount: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          currencyCode: string;
          customFields?: Json | null;
          exchangeRate?: number;
          id?: string;
          paymentDate?: string | null;
          paymentId: string;
          supplierId: string;
          totalAmount?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          currencyCode?: string;
          customFields?: Json | null;
          exchangeRate?: number;
          id?: string;
          paymentDate?: string | null;
          paymentId?: string;
          supplierId?: string;
          totalAmount?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchasePayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchasePayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchasePayment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchasePayment_currencyCode_fkey";
            columns: ["currencyCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "currencies";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchasePayment_currencyCode_fkey";
            columns: ["currencyCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "currency";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchasePayment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchasePayment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchasePayment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchasePayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quote: {
        Row: {
          assignee: string | null;
          companyId: string;
          completedDate: string | null;
          createdAt: string;
          createdBy: string;
          currencyCode: string | null;
          customerContactId: string | null;
          customerEngineeringContactId: string | null;
          customerId: string;
          customerLocationId: string | null;
          customerReference: string | null;
          customFields: Json | null;
          digitalQuoteAcceptedBy: string | null;
          digitalQuoteAcceptedByEmail: string | null;
          digitalQuoteRejectedBy: string | null;
          digitalQuoteRejectedByEmail: string | null;
          dueDate: string | null;
          estimatorId: string | null;
          exchangeRate: number | null;
          exchangeRateUpdatedAt: string | null;
          expirationDate: string | null;
          externalLinkId: string | null;
          externalNotes: Json | null;
          id: string;
          internalNotes: Json | null;
          locationId: string | null;
          opportunityId: string | null;
          quoteId: string;
          revisionId: number;
          salesPersonId: string | null;
          status: Database["public"]["Enums"]["quoteStatus"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          companyId: string;
          completedDate?: string | null;
          createdAt?: string;
          createdBy: string;
          currencyCode?: string | null;
          customerContactId?: string | null;
          customerEngineeringContactId?: string | null;
          customerId: string;
          customerLocationId?: string | null;
          customerReference?: string | null;
          customFields?: Json | null;
          digitalQuoteAcceptedBy?: string | null;
          digitalQuoteAcceptedByEmail?: string | null;
          digitalQuoteRejectedBy?: string | null;
          digitalQuoteRejectedByEmail?: string | null;
          dueDate?: string | null;
          estimatorId?: string | null;
          exchangeRate?: number | null;
          exchangeRateUpdatedAt?: string | null;
          expirationDate?: string | null;
          externalLinkId?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          locationId?: string | null;
          opportunityId?: string | null;
          quoteId: string;
          revisionId?: number;
          salesPersonId?: string | null;
          status?: Database["public"]["Enums"]["quoteStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          companyId?: string;
          completedDate?: string | null;
          createdAt?: string;
          createdBy?: string;
          currencyCode?: string | null;
          customerContactId?: string | null;
          customerEngineeringContactId?: string | null;
          customerId?: string;
          customerLocationId?: string | null;
          customerReference?: string | null;
          customFields?: Json | null;
          digitalQuoteAcceptedBy?: string | null;
          digitalQuoteAcceptedByEmail?: string | null;
          digitalQuoteRejectedBy?: string | null;
          digitalQuoteRejectedByEmail?: string | null;
          dueDate?: string | null;
          estimatorId?: string | null;
          exchangeRate?: number | null;
          exchangeRateUpdatedAt?: string | null;
          expirationDate?: string | null;
          externalLinkId?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          locationId?: string | null;
          opportunityId?: string | null;
          quoteId?: string;
          revisionId?: number;
          salesPersonId?: string | null;
          status?: Database["public"]["Enums"]["quoteStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "quote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quote_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "quote_customerContactId_fkey";
            columns: ["customerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerEngineeringContactId_fkey";
            columns: ["customerEngineeringContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerLocationId_fkey";
            columns: ["customerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quote_externalLinkId_fkey";
            columns: ["externalLinkId"];
            isOneToOne: false;
            referencedRelation: "externalLink";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_opportunityId_fkey";
            columns: ["opportunityId"];
            isOneToOne: false;
            referencedRelation: "opportunity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_salesPersonId_fkey";
            columns: ["salesPersonId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_salesPersonId_fkey";
            columns: ["salesPersonId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_salesPersonId_fkey";
            columns: ["salesPersonId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_salesPersonId_fkey";
            columns: ["salesPersonId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_salesPersonId_fkey";
            columns: ["salesPersonId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteFavorite: {
        Row: {
          quoteId: string;
          userId: string;
        };
        Insert: {
          quoteId: string;
          userId: string;
        };
        Update: {
          quoteId?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "quoteFavorites_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteFavorites_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quoteFavorites_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteLine: {
        Row: {
          additionalCharges: Json | null;
          companyId: string;
          configuration: Json | null;
          createdBy: string;
          customerPartId: string | null;
          customerPartRevision: string | null;
          customFields: Json | null;
          description: string;
          estimatorId: string | null;
          externalNotes: Json | null;
          id: string;
          internalNotes: Json | null;
          itemId: string;
          itemReadableId: string | null;
          itemType: string;
          locationId: string | null;
          methodType: Database["public"]["Enums"]["methodType"];
          modelUploadId: string | null;
          noQuoteReason: string | null;
          quantity: number[] | null;
          quoteId: string;
          quoteRevisionId: number;
          status: Database["public"]["Enums"]["quoteLineStatus"];
          tags: string[] | null;
          taxPercent: number;
          unitOfMeasureCode: string | null;
          unitPricePrecision: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          additionalCharges?: Json | null;
          companyId: string;
          configuration?: Json | null;
          createdBy: string;
          customerPartId?: string | null;
          customerPartRevision?: string | null;
          customFields?: Json | null;
          description: string;
          estimatorId?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          itemId: string;
          itemReadableId?: string | null;
          itemType?: string;
          locationId?: string | null;
          methodType?: Database["public"]["Enums"]["methodType"];
          modelUploadId?: string | null;
          noQuoteReason?: string | null;
          quantity?: number[] | null;
          quoteId: string;
          quoteRevisionId?: number;
          status?: Database["public"]["Enums"]["quoteLineStatus"];
          tags?: string[] | null;
          taxPercent?: number;
          unitOfMeasureCode?: string | null;
          unitPricePrecision?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          additionalCharges?: Json | null;
          companyId?: string;
          configuration?: Json | null;
          createdBy?: string;
          customerPartId?: string | null;
          customerPartRevision?: string | null;
          customFields?: Json | null;
          description?: string;
          estimatorId?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          itemId?: string;
          itemReadableId?: string | null;
          itemType?: string;
          locationId?: string | null;
          methodType?: Database["public"]["Enums"]["methodType"];
          modelUploadId?: string | null;
          noQuoteReason?: string | null;
          quantity?: number[] | null;
          quoteId?: string;
          quoteRevisionId?: number;
          status?: Database["public"]["Enums"]["quoteLineStatus"];
          tags?: string[] | null;
          taxPercent?: number;
          unitOfMeasureCode?: string | null;
          unitPricePrecision?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "quoteLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "quoteLine_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quoteLine_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteLinePrice: {
        Row: {
          convertedNetExtendedPrice: number | null;
          convertedNetUnitPrice: number | null;
          convertedShippingCost: number | null;
          convertedUnitPrice: number | null;
          createdAt: string;
          createdBy: string;
          discountPercent: number;
          exchangeRate: number | null;
          leadTime: number;
          netExtendedPrice: number | null;
          netUnitPrice: number | null;
          quantity: number;
          quoteId: string;
          quoteLineId: string;
          shippingCost: number;
          unitPrice: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          convertedNetExtendedPrice?: number | null;
          convertedNetUnitPrice?: number | null;
          convertedShippingCost?: number | null;
          convertedUnitPrice?: number | null;
          createdAt?: string;
          createdBy: string;
          discountPercent?: number;
          exchangeRate?: number | null;
          leadTime?: number;
          netExtendedPrice?: number | null;
          netUnitPrice?: number | null;
          quantity?: number;
          quoteId: string;
          quoteLineId: string;
          shippingCost?: number;
          unitPrice?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          convertedNetExtendedPrice?: number | null;
          convertedNetUnitPrice?: number | null;
          convertedShippingCost?: number | null;
          convertedUnitPrice?: number | null;
          createdAt?: string;
          createdBy?: string;
          discountPercent?: number;
          exchangeRate?: number | null;
          leadTime?: number;
          netExtendedPrice?: number | null;
          netUnitPrice?: number | null;
          quantity?: number;
          quoteId?: string;
          quoteLineId?: string;
          shippingCost?: number;
          unitPrice?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "quoteLinePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteLinePrice_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quoteLinePrice_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLinePrices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLinePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteMakeMethod: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          itemId: string;
          parentMaterialId: string | null;
          quantityPerParent: number;
          quoteId: string;
          quoteLineId: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          version: number;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          itemId: string;
          parentMaterialId?: string | null;
          quantityPerParent?: number;
          quoteId: string;
          quoteLineId: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          version?: number;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          itemId?: string;
          parentMaterialId?: string | null;
          quantityPerParent?: number;
          quoteId?: string;
          quoteLineId?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          version?: number;
        };
        Relationships: [
          {
            foreignKeyName: "quoteMakeMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteMakeMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteMakeMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteMakeMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_parentMaterialId_fkey";
            columns: ["parentMaterialId"];
            isOneToOne: false;
            referencedRelation: "quoteMaterial";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_parentMaterialId_fkey";
            columns: ["parentMaterialId"];
            isOneToOne: false;
            referencedRelation: "quoteMaterialWithMakeMethodId";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quoteMakeMethod_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLinePrices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMakeMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteMaterial: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          description: string;
          id: string;
          itemId: string;
          itemReadableId: string;
          itemType: string;
          kit: boolean;
          methodType: Database["public"]["Enums"]["methodType"];
          order: number;
          productionQuantity: number | null;
          quantity: number;
          quoteId: string;
          quoteLineId: string;
          quoteMakeMethodId: string;
          quoteOperationId: string | null;
          scrapQuantity: number;
          tags: string[] | null;
          unitCost: number;
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          description: string;
          id?: string;
          itemId: string;
          itemReadableId: string;
          itemType?: string;
          kit?: boolean;
          methodType?: Database["public"]["Enums"]["methodType"];
          order?: number;
          productionQuantity?: number | null;
          quantity?: number;
          quoteId: string;
          quoteLineId: string;
          quoteMakeMethodId: string;
          quoteOperationId?: string | null;
          scrapQuantity?: number;
          tags?: string[] | null;
          unitCost?: number;
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          description?: string;
          id?: string;
          itemId?: string;
          itemReadableId?: string;
          itemType?: string;
          kit?: boolean;
          methodType?: Database["public"]["Enums"]["methodType"];
          order?: number;
          productionQuantity?: number | null;
          quantity?: number;
          quoteId?: string;
          quoteLineId?: string;
          quoteMakeMethodId?: string;
          quoteOperationId?: string | null;
          scrapQuantity?: number;
          tags?: string[] | null;
          unitCost?: number;
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "quoteMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLinePrices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteMakeMethodId_fkey";
            columns: ["quoteMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "quoteMakeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteMakeMethodId_fkey";
            columns: ["quoteMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "quoteMaterialWithMakeMethodId";
            referencedColumns: ["quoteMaterialMakeMethodId"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteOperationId_fkey";
            columns: ["quoteOperationId"];
            isOneToOne: false;
            referencedRelation: "quoteOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteOperationId_fkey";
            columns: ["quoteOperationId"];
            isOneToOne: false;
            referencedRelation: "quoteOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "quoteMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteOperation: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          description: string | null;
          id: string;
          laborRate: number;
          laborTime: number;
          laborUnit: Database["public"]["Enums"]["factor"];
          machineRate: number | null;
          machineTime: number;
          machineUnit: Database["public"]["Enums"]["factor"];
          operationLeadTime: number;
          operationMinimumCost: number;
          operationOrder: Database["public"]["Enums"]["methodOperationOrder"];
          operationSupplierProcessId: string | null;
          operationType: Database["public"]["Enums"]["operationType"];
          operationUnitCost: number;
          order: number;
          overheadRate: number;
          procedureId: string | null;
          processId: string;
          quoteId: string;
          quoteLineId: string;
          quoteMakeMethodId: string | null;
          setupTime: number;
          setupUnit: Database["public"]["Enums"]["factor"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          workCenterId: string | null;
          workInstruction: Json;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          description?: string | null;
          id?: string;
          laborRate?: number;
          laborTime?: number;
          laborUnit?: Database["public"]["Enums"]["factor"];
          machineRate?: number | null;
          machineTime?: number;
          machineUnit?: Database["public"]["Enums"]["factor"];
          operationLeadTime?: number;
          operationMinimumCost?: number;
          operationOrder?: Database["public"]["Enums"]["methodOperationOrder"];
          operationSupplierProcessId?: string | null;
          operationType?: Database["public"]["Enums"]["operationType"];
          operationUnitCost?: number;
          order?: number;
          overheadRate?: number;
          procedureId?: string | null;
          processId: string;
          quoteId: string;
          quoteLineId: string;
          quoteMakeMethodId?: string | null;
          setupTime?: number;
          setupUnit?: Database["public"]["Enums"]["factor"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId?: string | null;
          workInstruction?: Json;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          description?: string | null;
          id?: string;
          laborRate?: number;
          laborTime?: number;
          laborUnit?: Database["public"]["Enums"]["factor"];
          machineRate?: number | null;
          machineTime?: number;
          machineUnit?: Database["public"]["Enums"]["factor"];
          operationLeadTime?: number;
          operationMinimumCost?: number;
          operationOrder?: Database["public"]["Enums"]["methodOperationOrder"];
          operationSupplierProcessId?: string | null;
          operationType?: Database["public"]["Enums"]["operationType"];
          operationUnitCost?: number;
          order?: number;
          overheadRate?: number;
          procedureId?: string | null;
          processId?: string;
          quoteId?: string;
          quoteLineId?: string;
          quoteMakeMethodId?: string | null;
          setupTime?: number;
          setupUnit?: Database["public"]["Enums"]["factor"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId?: string | null;
          workInstruction?: Json;
        };
        Relationships: [
          {
            foreignKeyName: "quoteOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteOperation_operationSupplierProcessId_fkey";
            columns: ["operationSupplierProcessId"];
            isOneToOne: false;
            referencedRelation: "supplierProcess";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_operationSupplierProcessId_fkey";
            columns: ["operationSupplierProcessId"];
            isOneToOne: false;
            referencedRelation: "supplierProcesses";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedure";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedures";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "process";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "processes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quoteOperation_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLinePrices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteMakeMethodId_fkey";
            columns: ["quoteMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "quoteMakeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteMakeMethodId_fkey";
            columns: ["quoteMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "quoteMaterialWithMakeMethodId";
            referencedColumns: ["quoteMaterialMakeMethodId"];
          },
          {
            foreignKeyName: "quoteOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenter";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenters";
            referencedColumns: ["id"];
          }
        ];
      };
      quoteOperationAttribute: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          description: Json | null;
          fileTypes: string[] | null;
          id: string;
          listValues: string[] | null;
          maxValue: number | null;
          minValue: number | null;
          name: string;
          operationId: string;
          required: boolean | null;
          sortOrder: number;
          type: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          description?: Json | null;
          fileTypes?: string[] | null;
          id?: string;
          listValues?: string[] | null;
          maxValue?: number | null;
          minValue?: number | null;
          name: string;
          operationId: string;
          required?: boolean | null;
          sortOrder?: number;
          type: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          description?: Json | null;
          fileTypes?: string[] | null;
          id?: string;
          listValues?: string[] | null;
          maxValue?: number | null;
          minValue?: number | null;
          name?: string;
          operationId?: string;
          required?: boolean | null;
          sortOrder?: number;
          type?: Database["public"]["Enums"]["procedureAttributeType"];
          unitOfMeasureCode?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "quoteOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteOperationAttribute_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "quoteOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationAttribute_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "quoteOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteOperationParameter: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          key: string;
          operationId: string;
          updatedAt: string | null;
          updatedBy: string | null;
          value: string;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          key: string;
          operationId: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          value: string;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          key?: string;
          operationId?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          value?: string;
        };
        Relationships: [
          {
            foreignKeyName: "quoteOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationParameter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteOperationParameter_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "quoteOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationParameter_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "quoteOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationParameter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteOperationTool: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          operationId: string;
          quantity: number;
          toolId: string;
          updatedAt: string;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          operationId: string;
          quantity?: number;
          toolId: string;
          updatedAt?: string;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          operationId?: string;
          quantity?: number;
          toolId?: string;
          updatedAt?: string;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "quoteOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteOperationTool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteOperationTool_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "quoteOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_operationId_fkey";
            columns: ["operationId"];
            isOneToOne: false;
            referencedRelation: "quoteOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_toolId_fkey";
            columns: ["toolId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperationTool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quotePayment: {
        Row: {
          companyId: string;
          customFields: Json | null;
          id: string;
          invoiceCustomerContactId: string | null;
          invoiceCustomerId: string | null;
          invoiceCustomerLocationId: string | null;
          paymentTermId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          customFields?: Json | null;
          id: string;
          invoiceCustomerContactId?: string | null;
          invoiceCustomerId?: string | null;
          invoiceCustomerLocationId?: string | null;
          paymentTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          customFields?: Json | null;
          id?: string;
          invoiceCustomerContactId?: string | null;
          invoiceCustomerId?: string | null;
          invoiceCustomerLocationId?: string | null;
          paymentTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "quotePayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quotePayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quotePayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quotePayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quotePayment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quotePayment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quotePayment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quotePayment_invoiceCustomerContactId_fkey";
            columns: ["invoiceCustomerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quotePayment_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quotePayment_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quotePayment_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quotePayment_invoiceCustomerLocationId_fkey";
            columns: ["invoiceCustomerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quotePayment_paymentTermId_fkey";
            columns: ["paymentTermId"];
            isOneToOne: false;
            referencedRelation: "paymentTerm";
            referencedColumns: ["id"];
          }
        ];
      };
      quoteShipment: {
        Row: {
          companyId: string;
          id: string;
          locationId: string | null;
          receiptRequestedDate: string | null;
          shippingCost: number | null;
          shippingMethodId: string | null;
          shippingTermId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          id: string;
          locationId?: string | null;
          receiptRequestedDate?: string | null;
          shippingCost?: number | null;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          id?: string;
          locationId?: string | null;
          receiptRequestedDate?: string | null;
          shippingCost?: number | null;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "quoteShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteShipment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteShipment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quoteShipment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteShipment_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteShipment_shippingMethodId_fkey";
            columns: ["shippingMethodId"];
            isOneToOne: false;
            referencedRelation: "shippingMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteShipment_shippingTermId_fkey";
            columns: ["shippingTermId"];
            isOneToOne: false;
            referencedRelation: "shippingTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      receipt: {
        Row: {
          assignee: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          externalDocumentId: string | null;
          id: string;
          internalNotes: Json | null;
          invoiced: boolean | null;
          locationId: string | null;
          postedBy: string | null;
          postingDate: string | null;
          receiptId: string;
          sourceDocument:
            | Database["public"]["Enums"]["receiptSourceDocument"]
            | null;
          sourceDocumentId: string | null;
          sourceDocumentReadableId: string | null;
          status: Database["public"]["Enums"]["receiptStatus"];
          supplierId: string | null;
          supplierInteractionId: string | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          externalDocumentId?: string | null;
          id?: string;
          internalNotes?: Json | null;
          invoiced?: boolean | null;
          locationId?: string | null;
          postedBy?: string | null;
          postingDate?: string | null;
          receiptId: string;
          sourceDocument?:
            | Database["public"]["Enums"]["receiptSourceDocument"]
            | null;
          sourceDocumentId?: string | null;
          sourceDocumentReadableId?: string | null;
          status?: Database["public"]["Enums"]["receiptStatus"];
          supplierId?: string | null;
          supplierInteractionId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          externalDocumentId?: string | null;
          id?: string;
          internalNotes?: Json | null;
          invoiced?: boolean | null;
          locationId?: string | null;
          postedBy?: string | null;
          postingDate?: string | null;
          receiptId?: string;
          sourceDocument?:
            | Database["public"]["Enums"]["receiptSourceDocument"]
            | null;
          sourceDocumentId?: string | null;
          sourceDocumentReadableId?: string | null;
          status?: Database["public"]["Enums"]["receiptStatus"];
          supplierId?: string | null;
          supplierInteractionId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "receipt_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "receipt_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "receipt_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "receipt_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "receipt_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_postedBy_fkey";
            columns: ["postedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_postedBy_fkey";
            columns: ["postedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_postedBy_fkey";
            columns: ["postedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_postedBy_fkey";
            columns: ["postedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_postedBy_fkey";
            columns: ["postedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "receipt_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "receipt_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "receipt_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_supplierInteractionId_fkey";
            columns: ["supplierInteractionId"];
            isOneToOne: false;
            referencedRelation: "supplierInteraction";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receipt_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      receiptLine: {
        Row: {
          companyId: string;
          conversionFactor: number | null;
          createdAt: string;
          createdBy: string;
          id: string;
          itemId: string;
          itemReadableId: string | null;
          lineId: string | null;
          locationId: string | null;
          orderQuantity: number;
          outstandingQuantity: number;
          receiptId: string;
          receivedQuantity: number;
          requiresBatchTracking: boolean;
          requiresSerialTracking: boolean;
          shelfId: string | null;
          unitOfMeasure: string;
          unitPrice: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          conversionFactor?: number | null;
          createdAt?: string;
          createdBy: string;
          id?: string;
          itemId: string;
          itemReadableId?: string | null;
          lineId?: string | null;
          locationId?: string | null;
          orderQuantity: number;
          outstandingQuantity?: number;
          receiptId: string;
          receivedQuantity?: number;
          requiresBatchTracking?: boolean;
          requiresSerialTracking?: boolean;
          shelfId?: string | null;
          unitOfMeasure: string;
          unitPrice: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          conversionFactor?: number | null;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          itemId?: string;
          itemReadableId?: string | null;
          lineId?: string | null;
          locationId?: string | null;
          orderQuantity?: number;
          outstandingQuantity?: number;
          receiptId?: string;
          receivedQuantity?: number;
          requiresBatchTracking?: boolean;
          requiresSerialTracking?: boolean;
          shelfId?: string | null;
          unitOfMeasure?: string;
          unitPrice?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "receiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "receiptLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_receiptId_fkey";
            columns: ["receiptId"];
            isOneToOne: false;
            referencedRelation: "receipt";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesInvoice: {
        Row: {
          assignee: string | null;
          balance: number;
          companyId: string;
          createdAt: string;
          createdBy: string;
          currencyCode: string;
          customerId: string;
          customerReference: string | null;
          customFields: Json;
          dateDue: string | null;
          dateIssued: string | null;
          datePaid: string | null;
          exchangeRate: number;
          exchangeRateUpdatedAt: string | null;
          externalNotes: Json;
          id: string;
          internalNotes: Json;
          invoiceCustomerContactId: string | null;
          invoiceCustomerId: string | null;
          invoiceCustomerLocationId: string | null;
          invoiceId: string;
          locationId: string | null;
          opportunityId: string | null;
          paymentTermId: string | null;
          postingDate: string | null;
          shipmentId: string | null;
          status: Database["public"]["Enums"]["salesInvoiceStatus"];
          subtotal: number;
          tags: string[] | null;
          totalAmount: number;
          totalDiscount: number;
          totalTax: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          balance?: number;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          currencyCode: string;
          customerId: string;
          customerReference?: string | null;
          customFields?: Json;
          dateDue?: string | null;
          dateIssued?: string | null;
          datePaid?: string | null;
          exchangeRate?: number;
          exchangeRateUpdatedAt?: string | null;
          externalNotes?: Json;
          id?: string;
          internalNotes?: Json;
          invoiceCustomerContactId?: string | null;
          invoiceCustomerId?: string | null;
          invoiceCustomerLocationId?: string | null;
          invoiceId: string;
          locationId?: string | null;
          opportunityId?: string | null;
          paymentTermId?: string | null;
          postingDate?: string | null;
          shipmentId?: string | null;
          status?: Database["public"]["Enums"]["salesInvoiceStatus"];
          subtotal?: number;
          tags?: string[] | null;
          totalAmount?: number;
          totalDiscount?: number;
          totalTax?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          balance?: number;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          currencyCode?: string;
          customerId?: string;
          customerReference?: string | null;
          customFields?: Json;
          dateDue?: string | null;
          dateIssued?: string | null;
          datePaid?: string | null;
          exchangeRate?: number;
          exchangeRateUpdatedAt?: string | null;
          externalNotes?: Json;
          id?: string;
          internalNotes?: Json;
          invoiceCustomerContactId?: string | null;
          invoiceCustomerId?: string | null;
          invoiceCustomerLocationId?: string | null;
          invoiceId?: string;
          locationId?: string | null;
          opportunityId?: string | null;
          paymentTermId?: string | null;
          postingDate?: string | null;
          shipmentId?: string | null;
          status?: Database["public"]["Enums"]["salesInvoiceStatus"];
          subtotal?: number;
          tags?: string[] | null;
          totalAmount?: number;
          totalDiscount?: number;
          totalTax?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesInvoice_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "salesInvoice_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_invoiceCustomerContactId_fkey";
            columns: ["invoiceCustomerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_invoiceCustomerLocationId_fkey";
            columns: ["invoiceCustomerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_opportunityId_fkey";
            columns: ["opportunityId"];
            isOneToOne: false;
            referencedRelation: "opportunity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_paymentTermId_fkey";
            columns: ["paymentTermId"];
            isOneToOne: false;
            referencedRelation: "paymentTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_shipmentId_fkey";
            columns: ["shipmentId"];
            isOneToOne: false;
            referencedRelation: "shipment";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesInvoiceLine: {
        Row: {
          accountNumber: string | null;
          addOnCost: number;
          assetId: string | null;
          companyId: string;
          convertedAddOnCost: number | null;
          convertedSetupPrice: number | null;
          convertedShippingCost: number | null;
          convertedUnitPrice: number | null;
          createdAt: string;
          createdBy: string;
          customFields: Json;
          description: string | null;
          exchangeRate: number;
          externalNotes: Json;
          id: string;
          internalNotes: Json;
          invoiceId: string;
          invoiceLineType: Database["public"]["Enums"]["salesInvoiceLineType"];
          itemId: string | null;
          itemReadableId: string | null;
          locationId: string | null;
          methodType: Database["public"]["Enums"]["methodType"];
          modelUploadId: string | null;
          opportunityId: string | null;
          quantity: number;
          salesOrderId: string | null;
          salesOrderLineId: string | null;
          setupPrice: number;
          shelfId: string | null;
          shippingCost: number;
          taxPercent: number;
          unitOfMeasureCode: string;
          unitPrice: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          accountNumber?: string | null;
          addOnCost?: number;
          assetId?: string | null;
          companyId: string;
          convertedAddOnCost?: number | null;
          convertedSetupPrice?: number | null;
          convertedShippingCost?: number | null;
          convertedUnitPrice?: number | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json;
          description?: string | null;
          exchangeRate?: number;
          externalNotes?: Json;
          id?: string;
          internalNotes?: Json;
          invoiceId: string;
          invoiceLineType: Database["public"]["Enums"]["salesInvoiceLineType"];
          itemId?: string | null;
          itemReadableId?: string | null;
          locationId?: string | null;
          methodType?: Database["public"]["Enums"]["methodType"];
          modelUploadId?: string | null;
          opportunityId?: string | null;
          quantity?: number;
          salesOrderId?: string | null;
          salesOrderLineId?: string | null;
          setupPrice?: number;
          shelfId?: string | null;
          shippingCost?: number;
          taxPercent?: number;
          unitOfMeasureCode: string;
          unitPrice?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          accountNumber?: string | null;
          addOnCost?: number;
          assetId?: string | null;
          companyId?: string;
          convertedAddOnCost?: number | null;
          convertedSetupPrice?: number | null;
          convertedShippingCost?: number | null;
          convertedUnitPrice?: number | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json;
          description?: string | null;
          exchangeRate?: number;
          externalNotes?: Json;
          id?: string;
          internalNotes?: Json;
          invoiceId?: string;
          invoiceLineType?: Database["public"]["Enums"]["salesInvoiceLineType"];
          itemId?: string | null;
          itemReadableId?: string | null;
          locationId?: string | null;
          methodType?: Database["public"]["Enums"]["methodType"];
          modelUploadId?: string | null;
          opportunityId?: string | null;
          quantity?: number;
          salesOrderId?: string | null;
          salesOrderLineId?: string | null;
          setupPrice?: number;
          shelfId?: string | null;
          shippingCost?: number;
          taxPercent?: number;
          unitOfMeasureCode?: string;
          unitPrice?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesInvoiceLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "salesInvoice";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "salesInvoiceLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "salesInvoices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_opportunityId_fkey";
            columns: ["opportunityId"];
            isOneToOne: false;
            referencedRelation: "opportunity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "openSalesOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesInvoiceShipment: {
        Row: {
          companyId: string | null;
          createdAt: string;
          createdBy: string;
          customFields: Json;
          id: string;
          locationId: string | null;
          shippingCost: number;
          shippingMethodId: string | null;
          shippingTermId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId?: string | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json;
          id: string;
          locationId?: string | null;
          shippingCost?: number;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json;
          id?: string;
          locationId?: string | null;
          shippingCost?: number;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesInvoiceShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "salesInvoice";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "salesInvoiceLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "salesInvoices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesOrder: {
        Row: {
          assignee: string | null;
          closedAt: string | null;
          closedBy: string | null;
          companyId: string;
          completedDate: string | null;
          createdAt: string;
          createdBy: string;
          currencyCode: string;
          customerContactId: string | null;
          customerEngineeringContactId: string | null;
          customerId: string;
          customerLocationId: string | null;
          customerReference: string | null;
          customFields: Json | null;
          exchangeRate: number | null;
          exchangeRateUpdatedAt: string | null;
          externalNotes: Json | null;
          id: string;
          internalNotes: Json | null;
          locationId: string | null;
          opportunityId: string | null;
          orderDate: string;
          revisionId: number;
          salesOrderId: string;
          salesPersonId: string | null;
          sentCompleteDate: string | null;
          status: Database["public"]["Enums"]["salesOrderStatus"];
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          closedAt?: string | null;
          closedBy?: string | null;
          companyId: string;
          completedDate?: string | null;
          createdAt?: string;
          createdBy: string;
          currencyCode: string;
          customerContactId?: string | null;
          customerEngineeringContactId?: string | null;
          customerId: string;
          customerLocationId?: string | null;
          customerReference?: string | null;
          customFields?: Json | null;
          exchangeRate?: number | null;
          exchangeRateUpdatedAt?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          locationId?: string | null;
          opportunityId?: string | null;
          orderDate?: string;
          revisionId?: number;
          salesOrderId: string;
          salesPersonId?: string | null;
          sentCompleteDate?: string | null;
          status?: Database["public"]["Enums"]["salesOrderStatus"];
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          closedAt?: string | null;
          closedBy?: string | null;
          companyId?: string;
          completedDate?: string | null;
          createdAt?: string;
          createdBy?: string;
          currencyCode?: string;
          customerContactId?: string | null;
          customerEngineeringContactId?: string | null;
          customerId?: string;
          customerLocationId?: string | null;
          customerReference?: string | null;
          customFields?: Json | null;
          exchangeRate?: number | null;
          exchangeRateUpdatedAt?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          locationId?: string | null;
          opportunityId?: string | null;
          orderDate?: string;
          revisionId?: number;
          salesOrderId?: string;
          salesPersonId?: string | null;
          sentCompleteDate?: string | null;
          status?: Database["public"]["Enums"]["salesOrderStatus"];
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrder_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "salesOrder_customerContactId_fkey";
            columns: ["customerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_customerEngineeringContactId_fkey";
            columns: ["customerEngineeringContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_opportunityId_fkey";
            columns: ["opportunityId"];
            isOneToOne: false;
            referencedRelation: "opportunity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrderLine_customerLocationId_fkey";
            columns: ["customerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          }
        ];
      };
      salesOrderFavorite: {
        Row: {
          salesOrderId: string;
          userId: string;
        };
        Insert: {
          salesOrderId: string;
          userId: string;
        };
        Update: {
          salesOrderId?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "salesOrderFavorites_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderFavorites_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderFavorites_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesOrderLine: {
        Row: {
          accountNumber: string | null;
          addOnCost: number;
          assetId: string | null;
          companyId: string;
          convertedAddOnCost: number | null;
          convertedShippingCost: number | null;
          convertedUnitPrice: number | null;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          description: string | null;
          exchangeRate: number | null;
          externalNotes: Json | null;
          id: string;
          internalNotes: Json | null;
          invoicedComplete: boolean;
          itemId: string | null;
          itemReadableId: string | null;
          locationId: string | null;
          methodType: Database["public"]["Enums"]["methodType"];
          modelUploadId: string | null;
          promisedDate: string | null;
          quantityInvoiced: number | null;
          quantitySent: number | null;
          quantityToInvoice: number | null;
          quantityToSend: number | null;
          requiresInspection: boolean;
          saleQuantity: number | null;
          salesOrderId: string;
          salesOrderLineType: Database["public"]["Enums"]["salesOrderLineType"];
          sentComplete: boolean;
          sentDate: string | null;
          setupPrice: number | null;
          shelfId: string | null;
          shippingCost: number;
          status: Database["public"]["Enums"]["salesOrderLineStatus"];
          taxPercent: number;
          unitOfMeasureCode: string | null;
          unitPrice: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          accountNumber?: string | null;
          addOnCost?: number;
          assetId?: string | null;
          companyId: string;
          convertedAddOnCost?: number | null;
          convertedShippingCost?: number | null;
          convertedUnitPrice?: number | null;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          description?: string | null;
          exchangeRate?: number | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          invoicedComplete?: boolean;
          itemId?: string | null;
          itemReadableId?: string | null;
          locationId?: string | null;
          methodType?: Database["public"]["Enums"]["methodType"];
          modelUploadId?: string | null;
          promisedDate?: string | null;
          quantityInvoiced?: number | null;
          quantitySent?: number | null;
          quantityToInvoice?: number | null;
          quantityToSend?: number | null;
          requiresInspection?: boolean;
          saleQuantity?: number | null;
          salesOrderId: string;
          salesOrderLineType: Database["public"]["Enums"]["salesOrderLineType"];
          sentComplete?: boolean;
          sentDate?: string | null;
          setupPrice?: number | null;
          shelfId?: string | null;
          shippingCost?: number;
          status?: Database["public"]["Enums"]["salesOrderLineStatus"];
          taxPercent?: number;
          unitOfMeasureCode?: string | null;
          unitPrice?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          accountNumber?: string | null;
          addOnCost?: number;
          assetId?: string | null;
          companyId?: string;
          convertedAddOnCost?: number | null;
          convertedShippingCost?: number | null;
          convertedUnitPrice?: number | null;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          description?: string | null;
          exchangeRate?: number | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          invoicedComplete?: boolean;
          itemId?: string | null;
          itemReadableId?: string | null;
          locationId?: string | null;
          methodType?: Database["public"]["Enums"]["methodType"];
          modelUploadId?: string | null;
          promisedDate?: string | null;
          quantityInvoiced?: number | null;
          quantitySent?: number | null;
          quantityToInvoice?: number | null;
          quantityToSend?: number | null;
          requiresInspection?: boolean;
          saleQuantity?: number | null;
          salesOrderId?: string;
          salesOrderLineType?: Database["public"]["Enums"]["salesOrderLineType"];
          sentComplete?: boolean;
          sentDate?: string | null;
          setupPrice?: number | null;
          shelfId?: string | null;
          shippingCost?: number;
          status?: Database["public"]["Enums"]["salesOrderLineStatus"];
          taxPercent?: number;
          unitOfMeasureCode?: string | null;
          unitPrice?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesOrderLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "salesOrderLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "salesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "salesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesOrderPayment: {
        Row: {
          companyId: string;
          customFields: Json | null;
          id: string;
          invoiceCustomerContactId: string | null;
          invoiceCustomerId: string | null;
          invoiceCustomerLocationId: string | null;
          paymentComplete: boolean;
          paymentTermId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          customFields?: Json | null;
          id: string;
          invoiceCustomerContactId?: string | null;
          invoiceCustomerId?: string | null;
          invoiceCustomerLocationId?: string | null;
          paymentComplete?: boolean;
          paymentTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          customFields?: Json | null;
          id?: string;
          invoiceCustomerContactId?: string | null;
          invoiceCustomerId?: string | null;
          invoiceCustomerLocationId?: string | null;
          paymentComplete?: boolean;
          paymentTermId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesOrderPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesOrderPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesOrderPayment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderPayment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderPayment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderPayment_invoiceCustomerContactId_fkey";
            columns: ["invoiceCustomerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderPayment_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderPayment_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderPayment_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderPayment_invoiceCustomerLocationId_fkey";
            columns: ["invoiceCustomerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderPayment_paymentTermId_fkey";
            columns: ["paymentTermId"];
            isOneToOne: false;
            referencedRelation: "paymentTerm";
            referencedColumns: ["id"];
          }
        ];
      };
      salesOrderShipment: {
        Row: {
          assignee: string | null;
          companyId: string;
          customerId: string | null;
          customerLocationId: string | null;
          customFields: Json | null;
          deliveryDate: string | null;
          dropShipment: boolean;
          id: string;
          locationId: string | null;
          notes: string | null;
          receiptPromisedDate: string | null;
          receiptRequestedDate: string | null;
          shippingCost: number | null;
          shippingMethodId: string | null;
          shippingTermId: string | null;
          supplierId: string | null;
          supplierLocationId: string | null;
          trackingNumber: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          companyId: string;
          customerId?: string | null;
          customerLocationId?: string | null;
          customFields?: Json | null;
          deliveryDate?: string | null;
          dropShipment?: boolean;
          id: string;
          locationId?: string | null;
          notes?: string | null;
          receiptPromisedDate?: string | null;
          receiptRequestedDate?: string | null;
          shippingCost?: number | null;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          supplierId?: string | null;
          supplierLocationId?: string | null;
          trackingNumber?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          companyId?: string;
          customerId?: string | null;
          customerLocationId?: string | null;
          customFields?: Json | null;
          deliveryDate?: string | null;
          dropShipment?: boolean;
          id?: string;
          locationId?: string | null;
          notes?: string | null;
          receiptPromisedDate?: string | null;
          receiptRequestedDate?: string | null;
          shippingCost?: number | null;
          shippingMethodId?: string | null;
          shippingTermId?: string | null;
          supplierId?: string | null;
          supplierLocationId?: string | null;
          trackingNumber?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesOrderShipment_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrderShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesOrderShipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesOrderShipment_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_customerLocationId_fkey";
            columns: ["customerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_shippingMethodId_fkey";
            columns: ["shippingMethodId"];
            isOneToOne: false;
            referencedRelation: "shippingMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_shippingTermId_fkey";
            columns: ["shippingTermId"];
            isOneToOne: false;
            referencedRelation: "shippingTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesOrderStatusHistory: {
        Row: {
          createdAt: string;
          createdBy: string;
          id: string;
          salesOrderId: string;
          status: Database["public"]["Enums"]["salesOrderStatus"];
        };
        Insert: {
          createdAt?: string;
          createdBy: string;
          id?: string;
          salesOrderId: string;
          status: Database["public"]["Enums"]["salesOrderStatus"];
        };
        Update: {
          createdAt?: string;
          createdBy?: string;
          id?: string;
          salesOrderId?: string;
          status?: Database["public"]["Enums"]["salesOrderStatus"];
        };
        Relationships: [
          {
            foreignKeyName: "salesOrderStatusHistory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderStatusHistory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderStatusHistory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderStatusHistory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderStatusHistory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrderStatusHistory_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderStatusHistory_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderStatusHistory_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          }
        ];
      };
      salesOrderTransaction: {
        Row: {
          createdAt: string;
          id: string;
          salesOrderId: string;
          type: Database["public"]["Enums"]["salesOrderTransactionType"];
          userId: string;
        };
        Insert: {
          createdAt?: string;
          id?: string;
          salesOrderId: string;
          type: Database["public"]["Enums"]["salesOrderTransactionType"];
          userId: string;
        };
        Update: {
          createdAt?: string;
          id?: string;
          salesOrderId?: string;
          type?: Database["public"]["Enums"]["salesOrderTransactionType"];
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "salesOrderTransaction_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderTransaction_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderTransaction_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderTransaction_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesRfq: {
        Row: {
          assignee: string | null;
          companyId: string;
          completedDate: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customerContactId: string | null;
          customerEngineeringContactId: string | null;
          customerId: string | null;
          customerLocationId: string | null;
          customerReference: string | null;
          customFields: Json | null;
          employeeId: string | null;
          expirationDate: string | null;
          externalNotes: Json | null;
          id: string;
          internalNotes: Json | null;
          locationId: string | null;
          noQuoteReasonId: string | null;
          opportunityId: string | null;
          revisionId: number;
          rfqDate: string;
          rfqId: string;
          salesPersonId: string | null;
          status: Database["public"]["Enums"]["salesRfqStatus"];
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          companyId: string;
          completedDate?: string | null;
          createdAt?: string | null;
          createdBy?: string | null;
          customerContactId?: string | null;
          customerEngineeringContactId?: string | null;
          customerId?: string | null;
          customerLocationId?: string | null;
          customerReference?: string | null;
          customFields?: Json | null;
          employeeId?: string | null;
          expirationDate?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          locationId?: string | null;
          noQuoteReasonId?: string | null;
          opportunityId?: string | null;
          revisionId?: number;
          rfqDate?: string;
          rfqId: string;
          salesPersonId?: string | null;
          status?: Database["public"]["Enums"]["salesRfqStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          companyId?: string;
          completedDate?: string | null;
          createdAt?: string | null;
          createdBy?: string | null;
          customerContactId?: string | null;
          customerEngineeringContactId?: string | null;
          customerId?: string | null;
          customerLocationId?: string | null;
          customerReference?: string | null;
          customFields?: Json | null;
          employeeId?: string | null;
          expirationDate?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          locationId?: string | null;
          noQuoteReasonId?: string | null;
          opportunityId?: string | null;
          revisionId?: number;
          rfqDate?: string;
          rfqId?: string;
          salesPersonId?: string | null;
          status?: Database["public"]["Enums"]["salesRfqStatus"];
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesRfq_assigneeId_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_assigneeId_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_assigneeId_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_assigneeId_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_assigneeId_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesRfq_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesRfq_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesRfq_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesRfq_customerContactId_fkey";
            columns: ["customerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_customerEngineeringContactId_fkey";
            columns: ["customerEngineeringContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_customerLocationId_fkey";
            columns: ["customerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesRfq_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_noQuoteReasonId_fkey";
            columns: ["noQuoteReasonId"];
            isOneToOne: false;
            referencedRelation: "noQuoteReason";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_opportunityId_fkey";
            columns: ["opportunityId"];
            isOneToOne: false;
            referencedRelation: "opportunity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesRfqFavorite: {
        Row: {
          rfqId: string;
          userId: string;
        };
        Insert: {
          rfqId: string;
          userId: string;
        };
        Update: {
          rfqId?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "salesRfqFavorites_salesRfqId_fkey";
            columns: ["rfqId"];
            isOneToOne: false;
            referencedRelation: "salesRfq";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqFavorites_salesRfqId_fkey";
            columns: ["rfqId"];
            isOneToOne: false;
            referencedRelation: "salesRfqs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesRfqLine: {
        Row: {
          companyId: string;
          createdAt: string | null;
          createdBy: string;
          customerPartId: string;
          customerPartRevision: string | null;
          customFields: Json | null;
          description: string | null;
          externalNotes: Json | null;
          id: string;
          internalNotes: Json | null;
          itemId: string | null;
          modelUploadId: string | null;
          order: number;
          quantity: number[] | null;
          salesRfqId: string;
          tags: string[] | null;
          unitOfMeasureCode: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string | null;
          createdBy: string;
          customerPartId: string;
          customerPartRevision?: string | null;
          customFields?: Json | null;
          description?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          itemId?: string | null;
          modelUploadId?: string | null;
          order?: number;
          quantity?: number[] | null;
          salesRfqId: string;
          tags?: string[] | null;
          unitOfMeasureCode: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string | null;
          createdBy?: string;
          customerPartId?: string;
          customerPartRevision?: string | null;
          customFields?: Json | null;
          description?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          itemId?: string | null;
          modelUploadId?: string | null;
          order?: number;
          quantity?: number[] | null;
          salesRfqId?: string;
          tags?: string[] | null;
          unitOfMeasureCode?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesRfqLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesRfqLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesRfqLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesRfqLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "salesRfqLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "salesRfqLine_salesRfqId_fkey";
            columns: ["salesRfqId"];
            isOneToOne: false;
            referencedRelation: "salesRfq";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_salesRfqId_fkey";
            columns: ["salesRfqId"];
            isOneToOne: false;
            referencedRelation: "salesRfqs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "salesRfqLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      scrapReason: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "scrapReason_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "scrapReason_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "scrapReason_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "scrapReason_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "scrapReason_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "scrapReason_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "scrapReason_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "scrapReason_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "scrapReason_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "scrapReason_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "scrapReason_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "scrapReason_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "scrapReason_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "scrapReason_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      search: {
        Row: {
          companyId: string | null;
          description: string | null;
          entity: Database["public"]["Enums"]["searchEntity"] | null;
          fts: unknown | null;
          id: number;
          link: string;
          name: string;
          uuid: string | null;
        };
        Insert: {
          companyId?: string | null;
          description?: string | null;
          entity?: Database["public"]["Enums"]["searchEntity"] | null;
          fts?: unknown | null;
          id?: number;
          link: string;
          name: string;
          uuid?: string | null;
        };
        Update: {
          companyId?: string | null;
          description?: string | null;
          entity?: Database["public"]["Enums"]["searchEntity"] | null;
          fts?: unknown | null;
          id?: number;
          link?: string;
          name?: string;
          uuid?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "search_companyid_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "search_companyid_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "search_companyid_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "search_companyid_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      sequence: {
        Row: {
          companyId: string;
          id: string;
          name: string;
          next: number;
          prefix: string | null;
          size: number;
          step: number;
          suffix: string | null;
          table: string;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          id?: string;
          name: string;
          next?: number;
          prefix?: string | null;
          size?: number;
          step?: number;
          suffix?: string | null;
          table: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          id?: string;
          name?: string;
          next?: number;
          prefix?: string | null;
          size?: number;
          step?: number;
          suffix?: string | null;
          table?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "sequence_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "sequence_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "sequence_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "sequence_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "sequence_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "sequence_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "sequence_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "sequence_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "sequence_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      service: {
        Row: {
          approved: boolean;
          approvedBy: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          fromDate: string | null;
          id: string;
          itemId: string | null;
          serviceType: Database["public"]["Enums"]["serviceType"];
          tags: string[] | null;
          toDate: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          fromDate?: string | null;
          id: string;
          itemId?: string | null;
          serviceType: Database["public"]["Enums"]["serviceType"];
          tags?: string[] | null;
          toDate?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          fromDate?: string | null;
          id?: string;
          itemId?: string | null;
          serviceType?: Database["public"]["Enums"]["serviceType"];
          tags?: string[] | null;
          toDate?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "service_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "service_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "service_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "service_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "service_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "service_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      shelf: {
        Row: {
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          locationId: string;
          name: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          warehouseId: string | null;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id: string;
          locationId: string;
          name: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          warehouseId?: string | null;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          locationId?: string;
          name?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          warehouseId?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "shelf_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shelf_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shelf_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shelf_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shelf_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shelf_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shelf_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shelf_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shelf_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "shelf_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shelf_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shelf_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shelf_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shelf_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shelf_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "shelf_warehouseId_fkey";
            columns: ["warehouseId"];
            isOneToOne: false;
            referencedRelation: "warehouse";
            referencedColumns: ["id"];
          }
        ];
      };
      shift: {
        Row: {
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          endTime: string;
          friday: boolean;
          id: string;
          locationId: string;
          monday: boolean;
          name: string;
          saturday: boolean;
          startTime: string;
          sunday: boolean;
          tags: string[] | null;
          thursday: boolean;
          tuesday: boolean;
          updatedAt: string | null;
          updatedBy: string | null;
          wednesday: boolean;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          endTime: string;
          friday?: boolean;
          id?: string;
          locationId: string;
          monday?: boolean;
          name: string;
          saturday?: boolean;
          startTime: string;
          sunday?: boolean;
          tags?: string[] | null;
          thursday?: boolean;
          tuesday?: boolean;
          updatedAt?: string | null;
          updatedBy?: string | null;
          wednesday?: boolean;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          endTime?: string;
          friday?: boolean;
          id?: string;
          locationId?: string;
          monday?: boolean;
          name?: string;
          saturday?: boolean;
          startTime?: string;
          sunday?: boolean;
          tags?: string[] | null;
          thursday?: boolean;
          tuesday?: boolean;
          updatedAt?: string | null;
          updatedBy?: string | null;
          wednesday?: boolean;
        };
        Relationships: [
          {
            foreignKeyName: "shifts_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shifts_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shifts_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "shifts_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      shipment: {
        Row: {
          assignee: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customerId: string | null;
          customFields: Json | null;
          externalDocumentId: string | null;
          externalNotes: Json | null;
          id: string;
          internalNotes: Json | null;
          invoiced: boolean | null;
          locationId: string | null;
          opportunityId: string | null;
          postedBy: string | null;
          postingDate: string | null;
          shipmentId: string;
          shippingMethodId: string | null;
          sourceDocument:
            | Database["public"]["Enums"]["shipmentSourceDocument"]
            | null;
          sourceDocumentId: string | null;
          sourceDocumentReadableId: string | null;
          status: Database["public"]["Enums"]["shipmentStatus"];
          supplierId: string | null;
          supplierInteractionId: string | null;
          tags: string[] | null;
          trackingNumber: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customerId?: string | null;
          customFields?: Json | null;
          externalDocumentId?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          invoiced?: boolean | null;
          locationId?: string | null;
          opportunityId?: string | null;
          postedBy?: string | null;
          postingDate?: string | null;
          shipmentId: string;
          shippingMethodId?: string | null;
          sourceDocument?:
            | Database["public"]["Enums"]["shipmentSourceDocument"]
            | null;
          sourceDocumentId?: string | null;
          sourceDocumentReadableId?: string | null;
          status?: Database["public"]["Enums"]["shipmentStatus"];
          supplierId?: string | null;
          supplierInteractionId?: string | null;
          tags?: string[] | null;
          trackingNumber?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customerId?: string | null;
          customFields?: Json | null;
          externalDocumentId?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          invoiced?: boolean | null;
          locationId?: string | null;
          opportunityId?: string | null;
          postedBy?: string | null;
          postingDate?: string | null;
          shipmentId?: string;
          shippingMethodId?: string | null;
          sourceDocument?:
            | Database["public"]["Enums"]["shipmentSourceDocument"]
            | null;
          sourceDocumentId?: string | null;
          sourceDocumentReadableId?: string | null;
          status?: Database["public"]["Enums"]["shipmentStatus"];
          supplierId?: string | null;
          supplierInteractionId?: string | null;
          tags?: string[] | null;
          trackingNumber?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "shipment_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "shipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shipment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shipment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "shipment_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_opportunityId_fkey";
            columns: ["opportunityId"];
            isOneToOne: false;
            referencedRelation: "opportunity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_postedBy_fkey";
            columns: ["postedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_postedBy_fkey";
            columns: ["postedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_postedBy_fkey";
            columns: ["postedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_postedBy_fkey";
            columns: ["postedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_postedBy_fkey";
            columns: ["postedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "shipment_shippingMethodId_fkey";
            columns: ["shippingMethodId"];
            isOneToOne: false;
            referencedRelation: "shippingMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "shipment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "shipment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_supplierInteractionId_fkey";
            columns: ["supplierInteractionId"];
            isOneToOne: false;
            referencedRelation: "supplierInteraction";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      shipmentLine: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          fulfillmentId: string | null;
          id: string;
          itemId: string;
          itemReadableId: string | null;
          lineId: string | null;
          locationId: string | null;
          orderQuantity: number;
          outstandingQuantity: number;
          requiresBatchTracking: boolean;
          requiresSerialTracking: boolean;
          shelfId: string | null;
          shipmentId: string;
          shippedQuantity: number;
          unitOfMeasure: string;
          unitPrice: number;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          fulfillmentId?: string | null;
          id?: string;
          itemId: string;
          itemReadableId?: string | null;
          lineId?: string | null;
          locationId?: string | null;
          orderQuantity?: number;
          outstandingQuantity?: number;
          requiresBatchTracking?: boolean;
          requiresSerialTracking?: boolean;
          shelfId?: string | null;
          shipmentId: string;
          shippedQuantity?: number;
          unitOfMeasure: string;
          unitPrice: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          fulfillmentId?: string | null;
          id?: string;
          itemId?: string;
          itemReadableId?: string | null;
          lineId?: string | null;
          locationId?: string | null;
          orderQuantity?: number;
          outstandingQuantity?: number;
          requiresBatchTracking?: boolean;
          requiresSerialTracking?: boolean;
          shelfId?: string | null;
          shipmentId?: string;
          shippedQuantity?: number;
          unitOfMeasure?: string;
          unitPrice?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "shipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "shipmentLine_fulfillmentId_fkey";
            columns: ["fulfillmentId"];
            isOneToOne: false;
            referencedRelation: "fulfillment";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_shipmentId_fkey";
            columns: ["shipmentId"];
            isOneToOne: false;
            referencedRelation: "shipment";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      shippingMethod: {
        Row: {
          active: boolean;
          carrier: Database["public"]["Enums"]["shippingCarrier"];
          carrierAccountId: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          tags: string[] | null;
          trackingUrl: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          carrier?: Database["public"]["Enums"]["shippingCarrier"];
          carrierAccountId?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          tags?: string[] | null;
          trackingUrl?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          carrier?: Database["public"]["Enums"]["shippingCarrier"];
          carrierAccountId?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          tags?: string[] | null;
          trackingUrl?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "shippingMethod_carrierAccountId_fkey";
            columns: ["carrierAccountId", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "shippingMethod_carrierAccountId_fkey";
            columns: ["carrierAccountId", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "shippingMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shippingMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shippingMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "shippingMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      shippingTerm: {
        Row: {
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          name: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          name: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          name?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "shippingTerm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingTerm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingTerm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shippingTerm_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shippingTerm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingTerm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingTerm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingTerm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingTerm_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "shippingTerm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingTerm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingTerm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingTerm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shippingTerm_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplier: {
        Row: {
          accountManagerId: string | null;
          assignee: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string | null;
          currencyCode: string | null;
          customFields: Json | null;
          embedding: unknown | null;
          externalId: Json | null;
          fax: string | null;
          id: string;
          logo: string | null;
          name: string;
          phone: string | null;
          supplierStatusId: string | null;
          supplierTypeId: string | null;
          tags: string[] | null;
          taxId: string | null;
          taxPercent: number;
          updatedAt: string | null;
          updatedBy: string | null;
          website: string | null;
        };
        Insert: {
          accountManagerId?: string | null;
          assignee?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy?: string | null;
          currencyCode?: string | null;
          customFields?: Json | null;
          embedding?: unknown | null;
          externalId?: Json | null;
          fax?: string | null;
          id?: string;
          logo?: string | null;
          name: string;
          phone?: string | null;
          supplierStatusId?: string | null;
          supplierTypeId?: string | null;
          tags?: string[] | null;
          taxId?: string | null;
          taxPercent?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
          website?: string | null;
        };
        Update: {
          accountManagerId?: string | null;
          assignee?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string | null;
          currencyCode?: string | null;
          customFields?: Json | null;
          embedding?: unknown | null;
          externalId?: Json | null;
          fax?: string | null;
          id?: string;
          logo?: string | null;
          name?: string;
          phone?: string | null;
          supplierStatusId?: string | null;
          supplierTypeId?: string | null;
          tags?: string[] | null;
          taxId?: string | null;
          taxPercent?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
          website?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplier_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplier_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplier_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "supplier_supplierStatusId_fkey";
            columns: ["supplierStatusId"];
            isOneToOne: false;
            referencedRelation: "supplierStatus";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_supplierTypeId_fkey";
            columns: ["supplierTypeId"];
            isOneToOne: false;
            referencedRelation: "supplierType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierAccount: {
        Row: {
          active: boolean;
          companyId: string;
          id: string;
          supplierId: string;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          id: string;
          supplierId: string;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          id?: string;
          supplierId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "supplierAccount_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierAccount_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierAccount_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierAccount_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierAccount_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierAccount_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierAccount_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierAccount_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierAccount_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierAccount_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierAccount_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierAccount_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierAccount_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierAccount_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          }
        ];
      };
      supplierContact: {
        Row: {
          contactId: string;
          customFields: Json | null;
          id: string;
          supplierId: string;
          supplierLocationId: string | null;
          tags: string[] | null;
          userId: string | null;
        };
        Insert: {
          contactId: string;
          customFields?: Json | null;
          id?: string;
          supplierId: string;
          supplierLocationId?: string | null;
          tags?: string[] | null;
          userId?: string | null;
        };
        Update: {
          contactId?: string;
          customFields?: Json | null;
          id?: string;
          supplierId?: string;
          supplierLocationId?: string | null;
          tags?: string[] | null;
          userId?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierContact_contactId_fkey";
            columns: ["contactId"];
            isOneToOne: false;
            referencedRelation: "contact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierContact_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierContact_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierContact_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierContact_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierContact_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierContact_supplierLocationId_fkey";
            columns: ["supplierLocationId"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierContact_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierContact_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierContact_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierContact_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierContact_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierInteraction: {
        Row: {
          companyId: string;
          id: string;
          supplierId: string;
        };
        Insert: {
          companyId: string;
          id?: string;
          supplierId: string;
        };
        Update: {
          companyId?: string;
          id?: string;
          supplierId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "supplierInteraction_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierInteraction_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierInteraction_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierInteraction_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierInteraction_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierInteraction_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierInteraction_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierInteraction_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierInteraction_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          }
        ];
      };
      supplierLedger: {
        Row: {
          amount: number;
          companyId: string;
          createdAt: string;
          documentId: string | null;
          documentType:
            | Database["public"]["Enums"]["supplierLedgerDocumentType"]
            | null;
          entryNumber: number;
          externalDocumentId: string | null;
          id: string;
          postingDate: string;
          supplierId: string;
        };
        Insert: {
          amount: number;
          companyId: string;
          createdAt?: string;
          documentId?: string | null;
          documentType?:
            | Database["public"]["Enums"]["supplierLedgerDocumentType"]
            | null;
          entryNumber?: number;
          externalDocumentId?: string | null;
          id?: string;
          postingDate?: string;
          supplierId: string;
        };
        Update: {
          amount?: number;
          companyId?: string;
          createdAt?: string;
          documentId?: string | null;
          documentType?:
            | Database["public"]["Enums"]["supplierLedgerDocumentType"]
            | null;
          entryNumber?: number;
          externalDocumentId?: string | null;
          id?: string;
          postingDate?: string;
          supplierId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "supplierLedger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierLedger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierLedger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierLedger_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierLedger_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierLedger_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierLedger_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierLedger_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierLedger_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          }
        ];
      };
      supplierLocation: {
        Row: {
          addressId: string;
          customFields: Json | null;
          id: string;
          name: string;
          supplierId: string;
          tags: string[] | null;
        };
        Insert: {
          addressId: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          supplierId: string;
          tags?: string[] | null;
        };
        Update: {
          addressId?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          supplierId?: string;
          tags?: string[] | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierLocation_addressId_fkey";
            columns: ["addressId"];
            isOneToOne: false;
            referencedRelation: "address";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierLocation_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierLocation_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierLocation_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierLocation_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierLocation_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          }
        ];
      };
      supplierPart: {
        Row: {
          active: boolean;
          companyId: string;
          conversionFactor: number;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          itemId: string;
          minimumOrderQuantity: number | null;
          supplierId: string;
          supplierPartId: string | null;
          supplierUnitOfMeasureCode: string | null;
          tags: string[] | null;
          unitPrice: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          conversionFactor?: number;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          itemId: string;
          minimumOrderQuantity?: number | null;
          supplierId: string;
          supplierPartId?: string | null;
          supplierUnitOfMeasureCode?: string | null;
          tags?: string[] | null;
          unitPrice?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          conversionFactor?: number;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          itemId?: string;
          minimumOrderQuantity?: number | null;
          supplierId?: string;
          supplierPartId?: string | null;
          supplierUnitOfMeasureCode?: string | null;
          tags?: string[] | null;
          unitPrice?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "buyMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "buyMethod_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "buyMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "buyMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "buyMethod_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "buyMethod_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "buyMethod_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierPayment: {
        Row: {
          companyId: string;
          customFields: Json | null;
          invoiceSupplierContactId: string | null;
          invoiceSupplierId: string | null;
          invoiceSupplierLocationId: string | null;
          paymentTermId: string | null;
          supplierId: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          customFields?: Json | null;
          invoiceSupplierContactId?: string | null;
          invoiceSupplierId?: string | null;
          invoiceSupplierLocationId?: string | null;
          paymentTermId?: string | null;
          supplierId: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          customFields?: Json | null;
          invoiceSupplierContactId?: string | null;
          invoiceSupplierId?: string | null;
          invoiceSupplierLocationId?: string | null;
          paymentTermId?: string | null;
          supplierId?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierPayment_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierPayment_invoiceSupplierContactId_fkey";
            columns: ["invoiceSupplierContactId"];
            isOneToOne: false;
            referencedRelation: "supplierContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierPayment_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierPayment_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_invoiceSupplierLocationId_fkey";
            columns: ["invoiceSupplierLocationId"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_paymentTermId_fkey";
            columns: ["paymentTermId"];
            isOneToOne: false;
            referencedRelation: "paymentTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: true;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierPayment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: true;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierPayment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: true;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: true;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: true;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierPayment_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierProcess: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          leadTime: number;
          minimumCost: number;
          processId: string;
          supplierId: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          leadTime?: number;
          minimumCost?: number;
          processId: string;
          supplierId: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          leadTime?: number;
          minimumCost?: number;
          processId?: string;
          supplierId?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierProcess_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "process";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "processes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierProcess_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierProcess_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierQuote: {
        Row: {
          assignee: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          currencyCode: string | null;
          customFields: Json | null;
          exchangeRate: number | null;
          exchangeRateUpdatedAt: string | null;
          expirationDate: string | null;
          externalNotes: Json | null;
          id: string;
          internalNotes: Json | null;
          quotedDate: string;
          revisionId: number;
          status: Database["public"]["Enums"]["supplierQuoteStatus"];
          supplierContactId: string | null;
          supplierId: string;
          supplierInteractionId: string;
          supplierLocationId: string | null;
          supplierQuoteId: string;
          supplierReference: string | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          assignee?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          currencyCode?: string | null;
          customFields?: Json | null;
          exchangeRate?: number | null;
          exchangeRateUpdatedAt?: string | null;
          expirationDate?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          quotedDate?: string;
          revisionId?: number;
          status?: Database["public"]["Enums"]["supplierQuoteStatus"];
          supplierContactId?: string | null;
          supplierId: string;
          supplierInteractionId: string;
          supplierLocationId?: string | null;
          supplierQuoteId: string;
          supplierReference?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          assignee?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          currencyCode?: string | null;
          customFields?: Json | null;
          exchangeRate?: number | null;
          exchangeRateUpdatedAt?: string | null;
          expirationDate?: string | null;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          quotedDate?: string;
          revisionId?: number;
          status?: Database["public"]["Enums"]["supplierQuoteStatus"];
          supplierContactId?: string | null;
          supplierId?: string;
          supplierInteractionId?: string;
          supplierLocationId?: string | null;
          supplierQuoteId?: string;
          supplierReference?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierQuote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierQuote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierQuote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierQuote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierQuote_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "supplierQuote_supplierContactId_fkey";
            columns: ["supplierContactId"];
            isOneToOne: false;
            referencedRelation: "supplierContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierQuote_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierQuote_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_supplierInteractionId_fkey";
            columns: ["supplierInteractionId"];
            isOneToOne: false;
            referencedRelation: "supplierInteraction";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_supplierLocationId_fkey";
            columns: ["supplierLocationId"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierQuoteFavorite: {
        Row: {
          supplierQuoteId: string;
          userId: string;
        };
        Insert: {
          supplierQuoteId: string;
          userId: string;
        };
        Update: {
          supplierQuoteId?: string;
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "supplierQuoteFavorites_supplierQuoteId_fkey";
            columns: ["supplierQuoteId"];
            isOneToOne: false;
            referencedRelation: "supplierQuote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteFavorites_supplierQuoteId_fkey";
            columns: ["supplierQuoteId"];
            isOneToOne: false;
            referencedRelation: "supplierQuotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteFavorites_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierQuoteLine: {
        Row: {
          companyId: string;
          conversionFactor: number;
          createdBy: string;
          customFields: Json | null;
          description: string;
          externalNotes: Json | null;
          id: string;
          internalNotes: Json | null;
          inventoryUnitOfMeasureCode: string | null;
          itemId: string;
          itemReadableId: string | null;
          purchaseUnitOfMeasureCode: string | null;
          quantity: number[] | null;
          supplierPartId: string | null;
          supplierPartRevision: string | null;
          supplierQuoteId: string;
          supplierQuoteRevisionId: number;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          conversionFactor?: number;
          createdBy: string;
          customFields?: Json | null;
          description: string;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          inventoryUnitOfMeasureCode?: string | null;
          itemId: string;
          itemReadableId?: string | null;
          purchaseUnitOfMeasureCode?: string | null;
          quantity?: number[] | null;
          supplierPartId?: string | null;
          supplierPartRevision?: string | null;
          supplierQuoteId: string;
          supplierQuoteRevisionId?: number;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          conversionFactor?: number;
          createdBy?: string;
          customFields?: Json | null;
          description?: string;
          externalNotes?: Json | null;
          id?: string;
          internalNotes?: Json | null;
          inventoryUnitOfMeasureCode?: string | null;
          itemId?: string;
          itemReadableId?: string | null;
          purchaseUnitOfMeasureCode?: string | null;
          quantity?: number[] | null;
          supplierPartId?: string | null;
          supplierPartRevision?: string | null;
          supplierQuoteId?: string;
          supplierQuoteRevisionId?: number;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierQuoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierQuoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierQuoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierQuoteLine_inventoryUnitOfMeasureCode_fkey";
            columns: ["inventoryUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "supplierQuoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_purchaseUnitOfMeasureCode_fkey";
            columns: ["purchaseUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "supplierQuoteLine_supplierQuoteId_fkey";
            columns: ["supplierQuoteId"];
            isOneToOne: false;
            referencedRelation: "supplierQuote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_supplierQuoteId_fkey";
            columns: ["supplierQuoteId"];
            isOneToOne: false;
            referencedRelation: "supplierQuotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierQuoteLinePrice: {
        Row: {
          createdAt: string;
          createdBy: string;
          exchangeRate: number | null;
          extendedPrice: number | null;
          leadTime: number;
          quantity: number;
          shippingCost: number | null;
          supplierExtendedPrice: number | null;
          supplierQuoteId: string;
          supplierQuoteLineId: string;
          supplierShippingCost: number;
          supplierTaxAmount: number;
          supplierUnitPrice: number;
          taxAmount: number | null;
          taxPercent: number | null;
          unitPrice: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          createdAt?: string;
          createdBy: string;
          exchangeRate?: number | null;
          extendedPrice?: number | null;
          leadTime?: number;
          quantity?: number;
          shippingCost?: number | null;
          supplierExtendedPrice?: number | null;
          supplierQuoteId: string;
          supplierQuoteLineId: string;
          supplierShippingCost?: number;
          supplierTaxAmount?: number;
          supplierUnitPrice?: number;
          taxAmount?: number | null;
          taxPercent?: number | null;
          unitPrice?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          createdAt?: string;
          createdBy?: string;
          exchangeRate?: number | null;
          extendedPrice?: number | null;
          leadTime?: number;
          quantity?: number;
          shippingCost?: number | null;
          supplierExtendedPrice?: number | null;
          supplierQuoteId?: string;
          supplierQuoteLineId?: string;
          supplierShippingCost?: number;
          supplierTaxAmount?: number;
          supplierUnitPrice?: number;
          taxAmount?: number | null;
          taxPercent?: number | null;
          unitPrice?: number | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierQuoteLinePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_supplierQuoteId_fkey";
            columns: ["supplierQuoteId"];
            isOneToOne: false;
            referencedRelation: "supplierQuote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_supplierQuoteId_fkey";
            columns: ["supplierQuoteId"];
            isOneToOne: false;
            referencedRelation: "supplierQuotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_supplierQuoteLineId_fkey";
            columns: ["supplierQuoteLineId"];
            isOneToOne: false;
            referencedRelation: "supplierQuoteLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_supplierQuoteLineId_fkey";
            columns: ["supplierQuoteLineId"];
            isOneToOne: false;
            referencedRelation: "supplierQuoteLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLinePrice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierShipping: {
        Row: {
          companyId: string;
          customFields: Json | null;
          shippingMethodId: string | null;
          shippingSupplierContactId: string | null;
          shippingSupplierId: string | null;
          shippingSupplierLocationId: string | null;
          shippingTermId: string | null;
          supplierId: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          customFields?: Json | null;
          shippingMethodId?: string | null;
          shippingSupplierContactId?: string | null;
          shippingSupplierId?: string | null;
          shippingSupplierLocationId?: string | null;
          shippingTermId?: string | null;
          supplierId: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          customFields?: Json | null;
          shippingMethodId?: string | null;
          shippingSupplierContactId?: string | null;
          shippingSupplierId?: string | null;
          shippingSupplierLocationId?: string | null;
          shippingTermId?: string | null;
          supplierId?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierShipping_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierShipping_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierShipping_shippingMethodId_fkey";
            columns: ["shippingMethodId"];
            isOneToOne: false;
            referencedRelation: "shippingMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_shippingSupplierContactId_fkey";
            columns: ["shippingSupplierContactId"];
            isOneToOne: false;
            referencedRelation: "supplierContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_shippingSupplierId_fkey";
            columns: ["shippingSupplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierShipping_shippingSupplierId_fkey";
            columns: ["shippingSupplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierShipping_shippingSupplierId_fkey";
            columns: ["shippingSupplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_shippingSupplierId_fkey";
            columns: ["shippingSupplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_shippingSupplierId_fkey";
            columns: ["shippingSupplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_shippingSupplierLocationId_fkey";
            columns: ["shippingSupplierLocationId"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_shippingTermId_fkey";
            columns: ["shippingTermId"];
            isOneToOne: false;
            referencedRelation: "shippingTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: true;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierShipping_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: true;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierShipping_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: true;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: true;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: true;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierShipping_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierStatus: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierStatus_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierStatus_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierStatus_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierStatus_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierStatus_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierStatus_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierStatus_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierStatus_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierStatus_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierStatus_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierStatus_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierStatus_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierStatus_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierStatus_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierType: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          protected: boolean;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          protected?: boolean;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          protected?: boolean;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierType_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierType_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierType_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplyActual: {
        Row: {
          actualQuantity: number;
          companyId: string;
          createdAt: string;
          createdBy: string;
          itemId: string;
          locationId: string;
          notes: string | null;
          periodId: string;
          sourceType: Database["public"]["Enums"]["supplySourceType"];
          updatedAt: string;
          updatedBy: string;
        };
        Insert: {
          actualQuantity?: number;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          itemId: string;
          locationId: string;
          notes?: string | null;
          periodId: string;
          sourceType: Database["public"]["Enums"]["supplySourceType"];
          updatedAt?: string;
          updatedBy: string;
        };
        Update: {
          actualQuantity?: number;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          itemId?: string;
          locationId?: string;
          notes?: string | null;
          periodId?: string;
          sourceType?: Database["public"]["Enums"]["supplySourceType"];
          updatedAt?: string;
          updatedBy?: string;
        };
        Relationships: [
          {
            foreignKeyName: "supplyActual_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplyActual_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplyActual_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplyActual_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_periodId_fkey";
            columns: ["periodId"];
            isOneToOne: false;
            referencedRelation: "period";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyActual_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplyForecast: {
        Row: {
          companyId: string;
          confidence: number | null;
          createdAt: string;
          createdBy: string;
          forecastMethod: string | null;
          forecastQuantity: number;
          itemId: string;
          locationId: string;
          notes: string | null;
          periodId: string;
          sourceType: Database["public"]["Enums"]["supplySourceType"] | null;
          updatedAt: string;
          updatedBy: string;
        };
        Insert: {
          companyId: string;
          confidence?: number | null;
          createdAt?: string;
          createdBy: string;
          forecastMethod?: string | null;
          forecastQuantity?: number;
          itemId: string;
          locationId: string;
          notes?: string | null;
          periodId: string;
          sourceType?: Database["public"]["Enums"]["supplySourceType"] | null;
          updatedAt?: string;
          updatedBy: string;
        };
        Update: {
          companyId?: string;
          confidence?: number | null;
          createdAt?: string;
          createdBy?: string;
          forecastMethod?: string | null;
          forecastQuantity?: number;
          itemId?: string;
          locationId?: string;
          notes?: string | null;
          periodId?: string;
          sourceType?: Database["public"]["Enums"]["supplySourceType"] | null;
          updatedAt?: string;
          updatedBy?: string;
        };
        Relationships: [
          {
            foreignKeyName: "supplyForecast_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplyForecast_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplyForecast_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplyForecast_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_periodId_fkey";
            columns: ["periodId"];
            isOneToOne: false;
            referencedRelation: "period";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplyForecast_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      tableView: {
        Row: {
          columnOrder: string[] | null;
          columnPinning: Json | null;
          columnVisibility: Json | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          description: string | null;
          filters: string[] | null;
          id: string;
          name: string;
          sortOrder: number;
          sorts: string[] | null;
          table: string;
          type: Database["public"]["Enums"]["tableViewType"];
          updatedBy: string | null;
        };
        Insert: {
          columnOrder?: string[] | null;
          columnPinning?: Json | null;
          columnVisibility?: Json | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          description?: string | null;
          filters?: string[] | null;
          id?: string;
          name: string;
          sortOrder?: number;
          sorts?: string[] | null;
          table: string;
          type?: Database["public"]["Enums"]["tableViewType"];
          updatedBy?: string | null;
        };
        Update: {
          columnOrder?: string[] | null;
          columnPinning?: Json | null;
          columnVisibility?: Json | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          description?: string | null;
          filters?: string[] | null;
          id?: string;
          name?: string;
          sortOrder?: number;
          sorts?: string[] | null;
          table?: string;
          type?: Database["public"]["Enums"]["tableViewType"];
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "tableView_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tableView_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tableView_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "tableView_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "tableView_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tableView_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tableView_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tableView_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tableView_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "tableView_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tableView_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tableView_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tableView_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tableView_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      tag: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          name: string;
          table: string;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          name: string;
          table: string;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          name?: string;
          table?: string;
        };
        Relationships: [
          {
            foreignKeyName: "tag_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tag_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tag_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "tag_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "tag_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tag_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tag_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tag_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tag_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      terms: {
        Row: {
          id: string;
          purchasingTerms: Json | null;
          salesTerms: Json | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          id?: string;
          purchasingTerms?: Json | null;
          salesTerms?: Json | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          id?: string;
          purchasingTerms?: Json | null;
          salesTerms?: Json | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "terms_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "terms_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "terms_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "terms_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "terms_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "terms_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "terms_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "terms_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "terms_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      tool: {
        Row: {
          approved: boolean;
          approvedBy: string | null;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          externalId: Json | null;
          id: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          externalId?: Json | null;
          id: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          approved?: boolean;
          approvedBy?: string | null;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          externalId?: Json | null;
          id?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "tool_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_approvedBy_fkey";
            columns: ["approvedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "tool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "tool_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "tool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "tool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "tool_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      trackedActivity: {
        Row: {
          attributes: Json;
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          sourceDocument: string | null;
          sourceDocumentId: string | null;
          sourceDocumentReadableId: string | null;
          type: string;
        };
        Insert: {
          attributes?: Json;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          sourceDocument?: string | null;
          sourceDocumentId?: string | null;
          sourceDocumentReadableId?: string | null;
          type: string;
        };
        Update: {
          attributes?: Json;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          sourceDocument?: string | null;
          sourceDocumentId?: string | null;
          sourceDocumentReadableId?: string | null;
          type?: string;
        };
        Relationships: [
          {
            foreignKeyName: "trackedActivity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "trackedActivity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "trackedActivity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      trackedActivityInput: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          quantity: number;
          trackedActivityId: string;
          trackedEntityId: string;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          quantity: number;
          trackedActivityId: string;
          trackedEntityId: string;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          quantity?: number;
          trackedActivityId?: string;
          trackedEntityId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "trackedActivityInput_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityInput_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityInput_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "trackedActivityInput_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "trackedActivityInput_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityInput_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityInput_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityInput_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityInput_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "trackedActivityInput_trackedActivityId_fkey";
            columns: ["trackedActivityId"];
            isOneToOne: false;
            referencedRelation: "trackedActivity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityInput_trackedEntityId_fkey";
            columns: ["trackedEntityId"];
            isOneToOne: false;
            referencedRelation: "trackedEntity";
            referencedColumns: ["id"];
          }
        ];
      };
      trackedActivityOutput: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          quantity: number;
          trackedActivityId: string;
          trackedEntityId: string;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          quantity: number;
          trackedActivityId: string;
          trackedEntityId: string;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          quantity?: number;
          trackedActivityId?: string;
          trackedEntityId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "trackedActivityOutput_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityOutput_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityOutput_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "trackedActivityOutput_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "trackedActivityOutput_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityOutput_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityOutput_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityOutput_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityOutput_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "trackedActivityOutput_trackedActivityId_fkey";
            columns: ["trackedActivityId"];
            isOneToOne: false;
            referencedRelation: "trackedActivity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedActivityOutput_trackedEntityId_fkey";
            columns: ["trackedEntityId"];
            isOneToOne: false;
            referencedRelation: "trackedEntity";
            referencedColumns: ["id"];
          }
        ];
      };
      trackedEntity: {
        Row: {
          attributes: Json;
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          quantity: number;
          sourceDocument: string;
          sourceDocumentId: string;
          sourceDocumentReadableId: string | null;
          status: Database["public"]["Enums"]["trackedEntityStatus"];
        };
        Insert: {
          attributes?: Json;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          quantity: number;
          sourceDocument: string;
          sourceDocumentId: string;
          sourceDocumentReadableId?: string | null;
          status?: Database["public"]["Enums"]["trackedEntityStatus"];
        };
        Update: {
          attributes?: Json;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          quantity?: number;
          sourceDocument?: string;
          sourceDocumentId?: string;
          sourceDocumentReadableId?: string | null;
          status?: Database["public"]["Enums"]["trackedEntityStatus"];
        };
        Relationships: [
          {
            foreignKeyName: "trackedEntity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedEntity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedEntity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "trackedEntity_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "trackedEntity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedEntity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedEntity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedEntity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "trackedEntity_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      unitOfMeasure: {
        Row: {
          active: boolean;
          code: string;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          id: string;
          name: string;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          code: string;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          id?: string;
          name: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          code?: string;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          id?: string;
          name?: string;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "unitOfMeasure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "unitOfMeasure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "unitOfMeasure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "unitOfMeasure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "unitOfMeasure_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "unitOfMeasure_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "unitOfMeasure_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "unitOfMeasure_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "unitOfMeasure_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "unitOfMeasure_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "unitOfMeasure_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "unitOfMeasure_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "unitOfMeasure_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "unitOfMeasure_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      user: {
        Row: {
          about: string;
          acknowledgedUniversity: boolean;
          active: boolean | null;
          admin: boolean | null;
          avatarUrl: string | null;
          createdAt: string;
          developer: boolean | null;
          email: string;
          firstName: string;
          fullName: string | null;
          id: string;
          lastName: string;
          updatedAt: string | null;
        };
        Insert: {
          about?: string;
          acknowledgedUniversity?: boolean;
          active?: boolean | null;
          admin?: boolean | null;
          avatarUrl?: string | null;
          createdAt?: string;
          developer?: boolean | null;
          email: string;
          firstName?: string;
          fullName?: string | null;
          id: string;
          lastName?: string;
          updatedAt?: string | null;
        };
        Update: {
          about?: string;
          acknowledgedUniversity?: boolean;
          active?: boolean | null;
          admin?: boolean | null;
          avatarUrl?: string | null;
          createdAt?: string;
          developer?: boolean | null;
          email?: string;
          firstName?: string;
          fullName?: string | null;
          id?: string;
          lastName?: string;
          updatedAt?: string | null;
        };
        Relationships: [];
      };
      userAttribute: {
        Row: {
          active: boolean | null;
          attributeDataTypeId: number;
          canSelfManage: boolean | null;
          createdAt: string;
          createdBy: string;
          id: string;
          listOptions: string[] | null;
          name: string;
          sortOrder: number;
          updatedAt: string | null;
          updatedBy: string | null;
          userAttributeCategoryId: string;
        };
        Insert: {
          active?: boolean | null;
          attributeDataTypeId: number;
          canSelfManage?: boolean | null;
          createdAt?: string;
          createdBy: string;
          id?: string;
          listOptions?: string[] | null;
          name: string;
          sortOrder?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
          userAttributeCategoryId: string;
        };
        Update: {
          active?: boolean | null;
          attributeDataTypeId?: number;
          canSelfManage?: boolean | null;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          listOptions?: string[] | null;
          name?: string;
          sortOrder?: number;
          updatedAt?: string | null;
          updatedBy?: string | null;
          userAttributeCategoryId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "userAttribute_attributeDataTypeId_fkey";
            columns: ["attributeDataTypeId"];
            isOneToOne: false;
            referencedRelation: "attributeDataType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttribute_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "userAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttribute_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "userAttribute_userAttributeCategoryId_fkey";
            columns: ["userAttributeCategoryId"];
            isOneToOne: false;
            referencedRelation: "userAttributeCategory";
            referencedColumns: ["id"];
          }
        ];
      };
      userAttributeCategory: {
        Row: {
          active: boolean | null;
          companyId: string | null;
          createdAt: string;
          createdBy: string;
          id: string;
          name: string;
          protected: boolean | null;
          public: boolean | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean | null;
          companyId?: string | null;
          createdAt?: string;
          createdBy: string;
          id?: string;
          name: string;
          protected?: boolean | null;
          public?: boolean | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean | null;
          companyId?: string | null;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          name?: string;
          protected?: boolean | null;
          public?: boolean | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "userAttributeCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "userAttributeCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "userAttributeCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "userAttributeCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      userAttributeValue: {
        Row: {
          createdAt: string;
          createdBy: string;
          id: string;
          updatedAt: string | null;
          updatedBy: string | null;
          userAttributeId: string;
          userId: string;
          valueBoolean: boolean | null;
          valueDate: string | null;
          valueNumeric: number | null;
          valueText: string | null;
          valueUser: string | null;
        };
        Insert: {
          createdAt?: string;
          createdBy: string;
          id?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          userAttributeId: string;
          userId: string;
          valueBoolean?: boolean | null;
          valueDate?: string | null;
          valueNumeric?: number | null;
          valueText?: string | null;
          valueUser?: string | null;
        };
        Update: {
          createdAt?: string;
          createdBy?: string;
          id?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          userAttributeId?: string;
          userId?: string;
          valueBoolean?: boolean | null;
          valueDate?: string | null;
          valueNumeric?: number | null;
          valueText?: string | null;
          valueUser?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "userAttributeValue_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "userAttributeValue_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "userAttributeValue_userAttributeId_fkey";
            columns: ["userAttributeId"];
            isOneToOne: false;
            referencedRelation: "userAttribute";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "userAttributeValue_valueUser_fkey";
            columns: ["valueUser"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_valueUser_fkey";
            columns: ["valueUser"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_valueUser_fkey";
            columns: ["valueUser"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_valueUser_fkey";
            columns: ["valueUser"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userAttributeValue_valueUser_fkey";
            columns: ["valueUser"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      userPermission: {
        Row: {
          id: string;
          permissions: Json | null;
        };
        Insert: {
          id: string;
          permissions?: Json | null;
        };
        Update: {
          id?: string;
          permissions?: Json | null;
        };
        Relationships: [
          {
            foreignKeyName: "userPermission_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userPermission_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userPermission_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userPermission_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userPermission_id_fkey";
            columns: ["id"];
            isOneToOne: true;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      userToCompany: {
        Row: {
          companyId: string;
          role: Database["public"]["Enums"]["role"];
          userId: string;
        };
        Insert: {
          companyId: string;
          role: Database["public"]["Enums"]["role"];
          userId: string;
        };
        Update: {
          companyId?: string;
          role?: Database["public"]["Enums"]["role"];
          userId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "userToCompany_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "userToCompany_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "userToCompany_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      warehouse: {
        Row: {
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          id: string;
          locationId: string;
          name: string;
          requiresBin: boolean;
          requiresPick: boolean;
          requiresPutAway: boolean;
          requiresReceive: boolean;
          requiresShipment: boolean;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          id?: string;
          locationId: string;
          name: string;
          requiresBin?: boolean;
          requiresPick?: boolean;
          requiresPutAway?: boolean;
          requiresReceive?: boolean;
          requiresShipment?: boolean;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          id?: string;
          locationId?: string;
          name?: string;
          requiresBin?: boolean;
          requiresPick?: boolean;
          requiresPutAway?: boolean;
          requiresReceive?: boolean;
          requiresShipment?: boolean;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "warehouse_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "warehouse_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "warehouse_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "warehouse_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "warehouse_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "warehouse_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "warehouse_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "warehouse_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "warehouse_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "warehouse_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "warehouse_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "warehouse_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "warehouse_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "warehouse_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "warehouse_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      webhook: {
        Row: {
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          errorCount: number;
          id: string;
          lastError: string | null;
          lastSuccess: string | null;
          name: string;
          onDelete: boolean;
          onInsert: boolean;
          onUpdate: boolean;
          successCount: number;
          table: string;
          updatedAt: string | null;
          updatedBy: string | null;
          url: string;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          errorCount?: number;
          id?: string;
          lastError?: string | null;
          lastSuccess?: string | null;
          name: string;
          onDelete?: boolean;
          onInsert?: boolean;
          onUpdate?: boolean;
          successCount?: number;
          table: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          url: string;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          errorCount?: number;
          id?: string;
          lastError?: string | null;
          lastSuccess?: string | null;
          name?: string;
          onDelete?: boolean;
          onInsert?: boolean;
          onUpdate?: boolean;
          successCount?: number;
          table?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          url?: string;
        };
        Relationships: [
          {
            foreignKeyName: "webhook_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "webhook_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "webhook_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "webhook_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "webhook_table_fkey";
            columns: ["table"];
            isOneToOne: false;
            referencedRelation: "webhookTable";
            referencedColumns: ["table"];
          }
        ];
      };
      webhookTable: {
        Row: {
          module: Database["public"]["Enums"]["module"];
          name: string;
          table: string;
        };
        Insert: {
          module: Database["public"]["Enums"]["module"];
          name: string;
          table: string;
        };
        Update: {
          module?: Database["public"]["Enums"]["module"];
          name?: string;
          table?: string;
        };
        Relationships: [];
      };
      workCenter: {
        Row: {
          active: boolean;
          companyId: string;
          createdAt: string;
          createdBy: string;
          customFields: Json | null;
          defaultStandardFactor: Database["public"]["Enums"]["factor"];
          description: string | null;
          id: string;
          laborRate: number;
          locationId: string | null;
          machineRate: number;
          name: string;
          overheadRate: number;
          requiredAbilityId: string | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          active?: boolean;
          companyId: string;
          createdAt?: string;
          createdBy: string;
          customFields?: Json | null;
          defaultStandardFactor?: Database["public"]["Enums"]["factor"];
          description?: string | null;
          id?: string;
          laborRate?: number;
          locationId?: string | null;
          machineRate?: number;
          name: string;
          overheadRate?: number;
          requiredAbilityId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          active?: boolean;
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          customFields?: Json | null;
          defaultStandardFactor?: Database["public"]["Enums"]["factor"];
          description?: string | null;
          id?: string;
          laborRate?: number;
          locationId?: string | null;
          machineRate?: number;
          name?: string;
          overheadRate?: number;
          requiredAbilityId?: string | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "workCenter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "workCenter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "workCenter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "workCenter_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_requiredAbilityId_fkey";
            columns: ["requiredAbilityId"];
            isOneToOne: false;
            referencedRelation: "ability";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      workCenterProcess: {
        Row: {
          companyId: string;
          createdAt: string;
          createdBy: string;
          processId: string;
          updatedAt: string | null;
          updatedBy: string | null;
          workCenterId: string;
        };
        Insert: {
          companyId: string;
          createdAt?: string;
          createdBy: string;
          processId: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId: string;
        };
        Update: {
          companyId?: string;
          createdAt?: string;
          createdBy?: string;
          processId?: string;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId?: string;
        };
        Relationships: [
          {
            foreignKeyName: "workCenterProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "workCenterProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "workCenterProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "workCenterProcess_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "process";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "processes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "workCenterProcess_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenter";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenterProcess_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenters";
            referencedColumns: ["id"];
          }
        ];
      };
    };
    Views: {
      accountCategories: {
        Row: {
          category: string | null;
          class: Database["public"]["Enums"]["glAccountClass"] | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          id: string | null;
          incomeBalance: Database["public"]["Enums"]["glIncomeBalance"] | null;
          subCategoriesCount: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          category?: string | null;
          class?: Database["public"]["Enums"]["glAccountClass"] | null;
          companyId?: string | null;
          createdAt?: string | null;
          createdBy?: string | null;
          customFields?: Json | null;
          id?: string | null;
          incomeBalance?: Database["public"]["Enums"]["glIncomeBalance"] | null;
          subCategoriesCount?: never;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          category?: string | null;
          class?: Database["public"]["Enums"]["glAccountClass"] | null;
          companyId?: string | null;
          createdAt?: string | null;
          createdBy?: string | null;
          customFields?: Json | null;
          id?: string | null;
          incomeBalance?: Database["public"]["Enums"]["glIncomeBalance"] | null;
          subCategoriesCount?: never;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "accountCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "accountCategory_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "accountCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "accountCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountCategory_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      accounts: {
        Row: {
          accountCategory: string | null;
          accountCategoryId: string | null;
          accountSubCategory: string | null;
          accountSubcategoryId: string | null;
          active: boolean | null;
          class: Database["public"]["Enums"]["glAccountClass"] | null;
          companyId: string | null;
          consolidatedRate:
            | Database["public"]["Enums"]["glConsolidatedRate"]
            | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          directPosting: boolean | null;
          id: string | null;
          incomeBalance: Database["public"]["Enums"]["glIncomeBalance"] | null;
          name: string | null;
          number: string | null;
          type: Database["public"]["Enums"]["glAccountType"] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          accountCategory?: never;
          accountCategoryId?: string | null;
          accountSubCategory?: never;
          accountSubcategoryId?: string | null;
          active?: boolean | null;
          class?: Database["public"]["Enums"]["glAccountClass"] | null;
          companyId?: string | null;
          consolidatedRate?:
            | Database["public"]["Enums"]["glConsolidatedRate"]
            | null;
          createdAt?: string | null;
          createdBy?: string | null;
          customFields?: Json | null;
          directPosting?: boolean | null;
          id?: string | null;
          incomeBalance?: Database["public"]["Enums"]["glIncomeBalance"] | null;
          name?: string | null;
          number?: string | null;
          type?: Database["public"]["Enums"]["glAccountType"] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          accountCategory?: never;
          accountCategoryId?: string | null;
          accountSubCategory?: never;
          accountSubcategoryId?: string | null;
          active?: boolean | null;
          class?: Database["public"]["Enums"]["glAccountClass"] | null;
          companyId?: string | null;
          consolidatedRate?:
            | Database["public"]["Enums"]["glConsolidatedRate"]
            | null;
          createdAt?: string | null;
          createdBy?: string | null;
          customFields?: Json | null;
          directPosting?: boolean | null;
          id?: string | null;
          incomeBalance?: Database["public"]["Enums"]["glIncomeBalance"] | null;
          name?: string | null;
          number?: string | null;
          type?: Database["public"]["Enums"]["glAccountType"] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "account_accountCategoryId_fkey";
            columns: ["accountCategoryId"];
            isOneToOne: false;
            referencedRelation: "accountCategories";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_accountCategoryId_fkey";
            columns: ["accountCategoryId"];
            isOneToOne: false;
            referencedRelation: "accountCategory";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "account_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "account_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "account_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "account_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      activeMakeMethods: {
        Row: {
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          id: string | null;
          itemId: string | null;
          rn: number | null;
          status: Database["public"]["Enums"]["makeMethodStatus"] | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          version: number | null;
        };
        Relationships: [
          {
            foreignKeyName: "method_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "method_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "method_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "method_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "method_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          }
        ];
      };
      companies: {
        Row: {
          addressLine1: string | null;
          addressLine2: string | null;
          baseCurrencyCode: string | null;
          city: string | null;
          companyId: string | null;
          countryCode: string | null;
          email: string | null;
          employeeType: string | null;
          fax: string | null;
          id: string | null;
          logoDark: string | null;
          logoDarkIcon: string | null;
          logoLight: string | null;
          logoLightIcon: string | null;
          name: string | null;
          ownerId: string | null;
          phone: string | null;
          postalCode: string | null;
          role: Database["public"]["Enums"]["role"] | null;
          slackChannel: string | null;
          stateProvince: string | null;
          taxId: string | null;
          updatedBy: string | null;
          userId: string | null;
          website: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "accountDefault_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "company_baseCurrencyCode_fkey";
            columns: ["baseCurrencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "userToCompany_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "userToCompany_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "userToCompany_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "userToCompany_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      consumables: {
        Row: {
          active: boolean | null;
          assignee: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          defaultMethodType: Database["public"]["Enums"]["methodType"] | null;
          description: string | null;
          id: string | null;
          itemTrackingType:
            | Database["public"]["Enums"]["itemTrackingType"]
            | null;
          modelName: string | null;
          modelPath: string | null;
          modelSize: number | null;
          modelUploadId: string | null;
          name: string | null;
          notes: Json | null;
          readableId: string | null;
          readableIdWithRevision: string | null;
          replenishmentSystem:
            | Database["public"]["Enums"]["itemReplenishmentSystem"]
            | null;
          revision: string | null;
          revisions: Json | null;
          supplierIds: string | null;
          tags: string[] | null;
          thumbnailPath: string | null;
          unitOfMeasure: string | null;
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "item_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "item_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "item_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      contractors: {
        Row: {
          abilityIds: string[] | null;
          active: boolean | null;
          companyId: string | null;
          customFields: Json | null;
          email: string | null;
          firstName: string | null;
          fullName: string | null;
          hoursPerWeek: number | null;
          lastName: string | null;
          supplierContactId: string | null;
          supplierId: string | null;
          supplierName: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "contractor_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "contractor_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "contractor_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "contractor_id_fkey";
            columns: ["supplierContactId"];
            isOneToOne: true;
            referencedRelation: "supplierContact";
            referencedColumns: ["id"];
          }
        ];
      };
      currencies: {
        Row: {
          active: boolean | null;
          code: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          decimalPlaces: number | null;
          exchangeRate: number | null;
          id: string | null;
          name: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "currency_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "currency_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "currency_currencyCode_fkey";
            columns: ["code"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "currency_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "currency_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      customers: {
        Row: {
          accountManagerId: string | null;
          assignee: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          currencyCode: string | null;
          customerStatusId: string | null;
          customerTypeId: string | null;
          customFields: Json | null;
          externalId: Json | null;
          fax: string | null;
          id: string | null;
          logo: string | null;
          name: string | null;
          orderCount: number | null;
          phone: string | null;
          status: string | null;
          tags: string[] | null;
          taxId: string | null;
          taxPercent: number | null;
          type: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
          website: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "customer_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "customer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "customer_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "customer_customerStatusId_fkey";
            columns: ["customerStatusId"];
            isOneToOne: false;
            referencedRelation: "customerStatus";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_customerTypeId_fkey";
            columns: ["customerTypeId"];
            isOneToOne: false;
            referencedRelation: "customerType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      customFieldTables: {
        Row: {
          companyId: string | null;
          fields: Json | null;
          module: Database["public"]["Enums"]["module"] | null;
          name: string | null;
          table: string | null;
        };
        Relationships: [];
      };
      documentExtensions: {
        Row: {
          extension: string | null;
        };
        Relationships: [];
      };
      documentLabels: {
        Row: {
          label: string | null;
          userId: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "documentLabels_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentLabels_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentLabels_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentLabels_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "documentLabels_userId_fkey";
            columns: ["userId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      documents: {
        Row: {
          active: boolean | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          description: string | null;
          extension: string | null;
          favorite: boolean | null;
          id: string | null;
          labels: string[] | null;
          lastActivityAt: string | null;
          name: string | null;
          path: string | null;
          readGroups: string[] | null;
          size: number | null;
          sourceDocument:
            | Database["public"]["Enums"]["documentSourceType"]
            | null;
          sourceDocumentId: string | null;
          type: Database["public"]["Enums"]["documentType"] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          writeGroups: string[] | null;
        };
        Relationships: [
          {
            foreignKeyName: "document_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "document_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "document_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      employees: {
        Row: {
          active: boolean | null;
          avatarUrl: string | null;
          companyId: string | null;
          email: string | null;
          employeeTypeId: string | null;
          firstName: string | null;
          id: string | null;
          lastName: string | null;
          name: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "employee_employeeTypeId_fkey";
            columns: ["employeeTypeId"];
            isOneToOne: false;
            referencedRelation: "employeeType";
            referencedColumns: ["id"];
          }
        ];
      };
      employeesAcrossCompanies: {
        Row: {
          active: boolean | null;
          avatarUrl: string | null;
          companyId: string[] | null;
          email: string | null;
          firstName: string | null;
          id: string | null;
          lastName: string | null;
          name: string | null;
        };
        Relationships: [];
      };
      employeeSummary: {
        Row: {
          avatarUrl: string | null;
          companyId: string | null;
          departmentName: string | null;
          id: string | null;
          locationName: string | null;
          managerName: string | null;
          name: string | null;
          startDate: string | null;
          title: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "employee_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      gaugeCalibrationRecords: {
        Row: {
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          dateCalibrated: string | null;
          description: string | null;
          gaugeId: string | null;
          gaugeReadableId: string | null;
          gaugeTypeId: string | null;
          id: string | null;
          inspectionStatus:
            | Database["public"]["Enums"]["inspectionStatus"]
            | null;
          notes: Json | null;
          requiresAction: boolean | null;
          requiresAdjustment: boolean | null;
          requiresRepair: boolean | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "gauge_gaugeTypeId_fkey";
            columns: ["gaugeTypeId"];
            isOneToOne: false;
            referencedRelation: "gaugeType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_gaugeId_fkey";
            columns: ["gaugeId"];
            isOneToOne: false;
            referencedRelation: "gauge";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_gaugeId_fkey";
            columns: ["gaugeId"];
            isOneToOne: false;
            referencedRelation: "gauges";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gaugeCalibrationRecord_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      gauges: {
        Row: {
          calibrationIntervalInMonths: number | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          dateAcquired: string | null;
          description: string | null;
          gaugeCalibrationStatus:
            | Database["public"]["Enums"]["gaugeCalibrationStatus"]
            | null;
          gaugeCalibrationStatusWithDueDate:
            | Database["public"]["Enums"]["gaugeCalibrationStatus"]
            | null;
          gaugeId: string | null;
          gaugeRole: Database["public"]["Enums"]["gaugeRole"] | null;
          gaugeStatus: Database["public"]["Enums"]["gaugeStatus"] | null;
          gaugeTypeId: string | null;
          id: string | null;
          lastCalibrationDate: string | null;
          locationId: string | null;
          modelNumber: string | null;
          nextCalibrationDate: string | null;
          serialNumber: string | null;
          shelfId: string | null;
          supplierId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Insert: {
          calibrationIntervalInMonths?: number | null;
          companyId?: string | null;
          createdAt?: string | null;
          createdBy?: string | null;
          customFields?: Json | null;
          dateAcquired?: string | null;
          description?: string | null;
          gaugeCalibrationStatus?:
            | Database["public"]["Enums"]["gaugeCalibrationStatus"]
            | null;
          gaugeCalibrationStatusWithDueDate?: never;
          gaugeId?: string | null;
          gaugeRole?: Database["public"]["Enums"]["gaugeRole"] | null;
          gaugeStatus?: Database["public"]["Enums"]["gaugeStatus"] | null;
          gaugeTypeId?: string | null;
          id?: string | null;
          lastCalibrationDate?: string | null;
          locationId?: string | null;
          modelNumber?: string | null;
          nextCalibrationDate?: string | null;
          serialNumber?: string | null;
          shelfId?: string | null;
          supplierId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Update: {
          calibrationIntervalInMonths?: number | null;
          companyId?: string | null;
          createdAt?: string | null;
          createdBy?: string | null;
          customFields?: Json | null;
          dateAcquired?: string | null;
          description?: string | null;
          gaugeCalibrationStatus?:
            | Database["public"]["Enums"]["gaugeCalibrationStatus"]
            | null;
          gaugeCalibrationStatusWithDueDate?: never;
          gaugeId?: string | null;
          gaugeRole?: Database["public"]["Enums"]["gaugeRole"] | null;
          gaugeStatus?: Database["public"]["Enums"]["gaugeStatus"] | null;
          gaugeTypeId?: string | null;
          id?: string | null;
          lastCalibrationDate?: string | null;
          locationId?: string | null;
          modelNumber?: string | null;
          nextCalibrationDate?: string | null;
          serialNumber?: string | null;
          shelfId?: string | null;
          supplierId?: string | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "gauge_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "gauge_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "gauge_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "gauge_gaugeTypeId_fkey";
            columns: ["gaugeTypeId"];
            isOneToOne: false;
            referencedRelation: "gaugeType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "gauge_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "gauge_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "gauge_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      groupMembers: {
        Row: {
          companyId: string | null;
          groupId: string | null;
          id: number | null;
          isCustomerOrgGroup: boolean | null;
          isCustomerTypeGroup: boolean | null;
          isEmployeeTypeGroup: boolean | null;
          isIdentityGroup: boolean | null;
          isSupplierOrgGroup: boolean | null;
          isSupplierTypeGroup: boolean | null;
          memberGroupId: string | null;
          memberUserId: string | null;
          name: string | null;
          user: Json | null;
        };
        Relationships: [
          {
            foreignKeyName: "group_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "group_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "group_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "group_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "membership_groupId_fkey";
            columns: ["groupId"];
            isOneToOne: false;
            referencedRelation: "group";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberGroupId_fkey";
            columns: ["memberGroupId"];
            isOneToOne: false;
            referencedRelation: "group";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberUserId_fkey";
            columns: ["memberUserId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberUserId_fkey";
            columns: ["memberUserId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberUserId_fkey";
            columns: ["memberUserId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberUserId_fkey";
            columns: ["memberUserId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "membership_memberUserId_fkey";
            columns: ["memberUserId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      groups: {
        Row: {
          companyId: string | null;
          id: string | null;
          isCustomerOrgGroup: boolean | null;
          isCustomerTypeGroup: boolean | null;
          isEmployeeTypeGroup: boolean | null;
          isSupplierOrgGroup: boolean | null;
          isSupplierTypeGroup: boolean | null;
          name: string | null;
          parentId: string | null;
          users: Json | null;
        };
        Relationships: [];
      };
      groups_recursive: {
        Row: {
          companyId: string | null;
          groupId: string | null;
          isCustomerOrgGroup: boolean | null;
          isCustomerTypeGroup: boolean | null;
          isEmployeeTypeGroup: boolean | null;
          isIdentityGroup: boolean | null;
          isSupplierOrgGroup: boolean | null;
          isSupplierTypeGroup: boolean | null;
          name: string | null;
          parentId: string | null;
          user: Json | null;
        };
        Relationships: [];
      };
      holidayYears: {
        Row: {
          companyId: string | null;
          year: number | null;
        };
        Relationships: [
          {
            foreignKeyName: "holiday_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "holiday_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "holiday_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      integrations: {
        Row: {
          active: boolean | null;
          companyId: string | null;
          id: string | null;
          jsonschema: Json | null;
          metadata: Json | null;
        };
        Relationships: [];
      };
      jobMaterialWithMakeMethodId: {
        Row: {
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          defaultShelf: boolean | null;
          description: string | null;
          estimatedQuantity: number | null;
          id: string | null;
          itemId: string | null;
          itemReadableId: string | null;
          itemType: string | null;
          jobId: string | null;
          jobMakeMethodId: string | null;
          jobMaterialMakeMethodId: string | null;
          jobOperationId: string | null;
          kit: boolean | null;
          methodType: Database["public"]["Enums"]["methodType"] | null;
          order: number | null;
          quantity: number | null;
          quantityIssued: number | null;
          quantityToIssue: number | null;
          requiresBatchTracking: boolean | null;
          requiresSerialTracking: boolean | null;
          scrapQuantity: number | null;
          shelfId: string | null;
          unitCost: number | null;
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
          version: number | null;
        };
        Relationships: [
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMakeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMaterialWithMakeMethodId";
            referencedColumns: ["jobMaterialMakeMethodId"];
          },
          {
            foreignKeyName: "jobMaterial_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "jobMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      jobOperationsWithDependencies: {
        Row: {
          assignee: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          dependencies: string[] | null;
          description: string | null;
          dueDate: string | null;
          id: string | null;
          jobId: string | null;
          jobMakeMethodId: string | null;
          laborRate: number | null;
          laborTime: number | null;
          laborUnit: Database["public"]["Enums"]["factor"] | null;
          machineRate: number | null;
          machineTime: number | null;
          machineUnit: Database["public"]["Enums"]["factor"] | null;
          operationLeadTime: number | null;
          operationMinimumCost: number | null;
          operationOrder:
            | Database["public"]["Enums"]["methodOperationOrder"]
            | null;
          operationQuantity: number | null;
          operationSupplierProcessId: string | null;
          operationType: Database["public"]["Enums"]["operationType"] | null;
          operationUnitCost: number | null;
          order: number | null;
          overheadRate: number | null;
          priority: number | null;
          procedureId: string | null;
          processId: string | null;
          quantityComplete: number | null;
          quantityReworked: number | null;
          quantityScrapped: number | null;
          setupTime: number | null;
          setupUnit: Database["public"]["Enums"]["factor"] | null;
          startDate: string | null;
          status: Database["public"]["Enums"]["jobOperationStatus"] | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          workCenterId: string | null;
          workInstruction: Json | null;
        };
        Insert: {
          assignee?: string | null;
          companyId?: string | null;
          createdAt?: string | null;
          createdBy?: string | null;
          customFields?: Json | null;
          dependencies?: never;
          description?: string | null;
          dueDate?: string | null;
          id?: string | null;
          jobId?: string | null;
          jobMakeMethodId?: string | null;
          laborRate?: number | null;
          laborTime?: number | null;
          laborUnit?: Database["public"]["Enums"]["factor"] | null;
          machineRate?: number | null;
          machineTime?: number | null;
          machineUnit?: Database["public"]["Enums"]["factor"] | null;
          operationLeadTime?: number | null;
          operationMinimumCost?: number | null;
          operationOrder?:
            | Database["public"]["Enums"]["methodOperationOrder"]
            | null;
          operationQuantity?: number | null;
          operationSupplierProcessId?: string | null;
          operationType?: Database["public"]["Enums"]["operationType"] | null;
          operationUnitCost?: number | null;
          order?: number | null;
          overheadRate?: number | null;
          priority?: number | null;
          procedureId?: string | null;
          processId?: string | null;
          quantityComplete?: number | null;
          quantityReworked?: number | null;
          quantityScrapped?: number | null;
          setupTime?: number | null;
          setupUnit?: Database["public"]["Enums"]["factor"] | null;
          startDate?: string | null;
          status?: Database["public"]["Enums"]["jobOperationStatus"] | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId?: string | null;
          workInstruction?: Json | null;
        };
        Update: {
          assignee?: string | null;
          companyId?: string | null;
          createdAt?: string | null;
          createdBy?: string | null;
          customFields?: Json | null;
          dependencies?: never;
          description?: string | null;
          dueDate?: string | null;
          id?: string | null;
          jobId?: string | null;
          jobMakeMethodId?: string | null;
          laborRate?: number | null;
          laborTime?: number | null;
          laborUnit?: Database["public"]["Enums"]["factor"] | null;
          machineRate?: number | null;
          machineTime?: number | null;
          machineUnit?: Database["public"]["Enums"]["factor"] | null;
          operationLeadTime?: number | null;
          operationMinimumCost?: number | null;
          operationOrder?:
            | Database["public"]["Enums"]["methodOperationOrder"]
            | null;
          operationQuantity?: number | null;
          operationSupplierProcessId?: string | null;
          operationType?: Database["public"]["Enums"]["operationType"] | null;
          operationUnitCost?: number | null;
          order?: number | null;
          overheadRate?: number | null;
          priority?: number | null;
          procedureId?: string | null;
          processId?: string | null;
          quantityComplete?: number | null;
          quantityReworked?: number | null;
          quantityScrapped?: number | null;
          setupTime?: number | null;
          setupUnit?: Database["public"]["Enums"]["factor"] | null;
          startDate?: string | null;
          status?: Database["public"]["Enums"]["jobOperationStatus"] | null;
          tags?: string[] | null;
          updatedAt?: string | null;
          updatedBy?: string | null;
          workCenterId?: string | null;
          workInstruction?: Json | null;
        };
        Relationships: [
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMakeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMaterialWithMakeMethodId";
            referencedColumns: ["jobMaterialMakeMethodId"];
          },
          {
            foreignKeyName: "jobOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedure";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedures";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "process";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "processes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenter";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenters";
            referencedColumns: ["id"];
          }
        ];
      };
      jobOperationsWithMakeMethods: {
        Row: {
          assignee: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          description: string | null;
          id: string | null;
          jobId: string | null;
          jobMakeMethodId: string | null;
          laborRate: number | null;
          laborTime: number | null;
          laborUnit: Database["public"]["Enums"]["factor"] | null;
          machineRate: number | null;
          machineTime: number | null;
          machineUnit: Database["public"]["Enums"]["factor"] | null;
          makeMethodId: string | null;
          operationLeadTime: number | null;
          operationMinimumCost: number | null;
          operationOrder:
            | Database["public"]["Enums"]["methodOperationOrder"]
            | null;
          operationQuantity: number | null;
          operationSupplierProcessId: string | null;
          operationType: Database["public"]["Enums"]["operationType"] | null;
          operationUnitCost: number | null;
          order: number | null;
          overheadRate: number | null;
          priority: number | null;
          procedureId: string | null;
          processId: string | null;
          quantityComplete: number | null;
          quantityReworked: number | null;
          quantityScrapped: number | null;
          setupTime: number | null;
          setupUnit: Database["public"]["Enums"]["factor"] | null;
          status: Database["public"]["Enums"]["jobOperationStatus"] | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          workCenterId: string | null;
          workInstruction: Json | null;
        };
        Relationships: [
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMakeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMaterialWithMakeMethodId";
            referencedColumns: ["jobMaterialMakeMethodId"];
          },
          {
            foreignKeyName: "jobOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedure";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedures";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "process";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "processes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "jobOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenter";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenters";
            referencedColumns: ["id"];
          }
        ];
      };
      jobs: {
        Row: {
          active: boolean | null;
          actualTime: number | null;
          assignee: string | null;
          autodeskUrn: string | null;
          companyId: string | null;
          completedDate: string | null;
          configuration: Json | null;
          createdAt: string | null;
          createdBy: string | null;
          customerId: string | null;
          customFields: Json | null;
          deadlineType: Database["public"]["Enums"]["deadlineType"] | null;
          description: string | null;
          dueDate: string | null;
          estimatedTime: number | null;
          id: string | null;
          itemId: string | null;
          itemReadableIdWithRevision: string | null;
          itemTrackingType:
            | Database["public"]["Enums"]["itemTrackingType"]
            | null;
          itemType: Database["public"]["Enums"]["itemType"] | null;
          jobId: string | null;
          locationId: string | null;
          modelId: string | null;
          modelName: string | null;
          modelPath: string | null;
          modelSize: number | null;
          modelUploadId: string | null;
          name: string | null;
          notes: Json | null;
          productionQuantity: number | null;
          quantity: number | null;
          quantityComplete: number | null;
          quantityReceivedToInventory: number | null;
          quantityShipped: number | null;
          quoteId: string | null;
          quoteLineId: string | null;
          quoteReadableId: string | null;
          releasedDate: string | null;
          replenishmentSystem:
            | Database["public"]["Enums"]["itemReplenishmentSystem"]
            | null;
          salesOrderId: string | null;
          salesOrderLineId: string | null;
          salesOrderReadableId: string | null;
          scrapQuantity: number | null;
          secondsToComplete: number | null;
          startDate: string | null;
          status: Database["public"]["Enums"]["jobStatus"] | null;
          tags: string[] | null;
          thumbnailPath: string | null;
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "job_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "job_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "job_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "job_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "openSalesOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "job_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      materialDimensions: {
        Row: {
          companyId: string | null;
          formName: string | null;
          id: string | null;
          isMetric: boolean | null;
          materialFormId: string | null;
          name: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "materialDimensions_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialDimensions_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialDimensions_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialDimensions_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialDimensions_materialFormId_fkey";
            columns: ["materialFormId"];
            isOneToOne: false;
            referencedRelation: "materialForm";
            referencedColumns: ["id"];
          }
        ];
      };
      materialFinishes: {
        Row: {
          companyId: string | null;
          id: string | null;
          materialSubstanceId: string | null;
          name: string | null;
          substanceName: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "materialFinish_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialFinish_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialFinish_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialFinish_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialFinish_materialSubstanceId_fkey";
            columns: ["materialSubstanceId"];
            isOneToOne: false;
            referencedRelation: "materialSubstance";
            referencedColumns: ["id"];
          }
        ];
      };
      materialGrades: {
        Row: {
          companyId: string | null;
          id: string | null;
          materialSubstanceId: string | null;
          name: string | null;
          substanceName: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "materialGrade_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialGrade_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "materialGrade_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialGrade_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "materialGrade_materialSubstanceId_fkey";
            columns: ["materialSubstanceId"];
            isOneToOne: false;
            referencedRelation: "materialSubstance";
            referencedColumns: ["id"];
          }
        ];
      };
      materials: {
        Row: {
          active: boolean | null;
          assignee: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          defaultMethodType: Database["public"]["Enums"]["methodType"] | null;
          description: string | null;
          dimensions: string | null;
          finish: string | null;
          grade: string | null;
          id: string | null;
          itemTrackingType:
            | Database["public"]["Enums"]["itemTrackingType"]
            | null;
          materialForm: string | null;
          materialFormId: string | null;
          materialSubstance: string | null;
          materialSubstanceId: string | null;
          modelName: string | null;
          modelPath: string | null;
          modelSize: number | null;
          modelUploadId: string | null;
          name: string | null;
          notes: Json | null;
          readableId: string | null;
          readableIdWithRevision: string | null;
          replenishmentSystem:
            | Database["public"]["Enums"]["itemReplenishmentSystem"]
            | null;
          revision: string | null;
          revisions: Json | null;
          supplierIds: string | null;
          tags: string[] | null;
          thumbnailPath: string | null;
          unitOfMeasure: string | null;
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "item_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "item_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "item_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "material_materialFormId_fkey";
            columns: ["materialFormId"];
            isOneToOne: false;
            referencedRelation: "materialForm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "material_materialSubstanceId_fkey";
            columns: ["materialSubstanceId"];
            isOneToOne: false;
            referencedRelation: "materialSubstance";
            referencedColumns: ["id"];
          }
        ];
      };
      modules: {
        Row: {
          name: Database["public"]["Enums"]["module"] | null;
        };
        Relationships: [];
      };
      openJobMaterialLines: {
        Row: {
          companyId: string | null;
          dueDate: string | null;
          id: string | null;
          itemId: string | null;
          itemTrackingType:
            | Database["public"]["Enums"]["itemTrackingType"]
            | null;
          jobId: string | null;
          jobMakeMethodId: string | null;
          jobReadableId: string | null;
          leadTime: number | null;
          locationId: string | null;
          parentMaterialId: string | null;
          quantityToIssue: number | null;
          replenishmentSystem:
            | Database["public"]["Enums"]["itemReplenishmentSystem"]
            | null;
          unitOfMeasureCode: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "job_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_parentMaterialId_fkey";
            columns: ["parentMaterialId"];
            isOneToOne: false;
            referencedRelation: "jobMaterial";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_parentMaterialId_fkey";
            columns: ["parentMaterialId"];
            isOneToOne: false;
            referencedRelation: "jobMaterialWithMakeMethodId";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMakeMethod_parentMaterialId_fkey";
            columns: ["parentMaterialId"];
            isOneToOne: false;
            referencedRelation: "openJobMaterialLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMakeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "jobMaterial_jobMakeMethodId_fkey";
            columns: ["jobMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "jobMaterialWithMakeMethodId";
            referencedColumns: ["jobMaterialMakeMethodId"];
          },
          {
            foreignKeyName: "jobMaterial_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          }
        ];
      };
      openProductionOrders: {
        Row: {
          companyId: string | null;
          deadlineType: Database["public"]["Enums"]["deadlineType"] | null;
          dueDate: string | null;
          id: string | null;
          itemId: string | null;
          itemTrackingType:
            | Database["public"]["Enums"]["itemTrackingType"]
            | null;
          jobId: string | null;
          leadTime: number | null;
          locationId: string | null;
          quantityToReceive: number | null;
          replenishmentSystem:
            | Database["public"]["Enums"]["itemReplenishmentSystem"]
            | null;
          unitOfMeasureCode: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "job_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "job_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          }
        ];
      };
      openPurchaseOrderLines: {
        Row: {
          companyId: string | null;
          dueDate: string | null;
          id: string | null;
          itemId: string | null;
          itemTrackingType:
            | Database["public"]["Enums"]["itemTrackingType"]
            | null;
          leadTime: number | null;
          locationId: string | null;
          orderDate: string | null;
          promisedDate: string | null;
          purchaseOrderId: string | null;
          purchaseOrderLineType:
            | Database["public"]["Enums"]["purchaseOrderLineType"]
            | null;
          purchaseOrderReadableId: string | null;
          quantityToReceive: number | null;
          replenishmentSystem:
            | Database["public"]["Enums"]["itemReplenishmentSystem"]
            | null;
          status: Database["public"]["Enums"]["purchaseOrderStatus"] | null;
          supplierId: string | null;
          unitOfMeasureCode: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrders";
            referencedColumns: ["id"];
          }
        ];
      };
      openSalesOrderLines: {
        Row: {
          companyId: string | null;
          id: string | null;
          itemId: string | null;
          itemTrackingType:
            | Database["public"]["Enums"]["itemTrackingType"]
            | null;
          leadTime: number | null;
          locationId: string | null;
          methodType: Database["public"]["Enums"]["methodType"] | null;
          promisedDate: string | null;
          quantityToSend: number | null;
          replenishmentSystem:
            | Database["public"]["Enums"]["itemReplenishmentSystem"]
            | null;
          salesOrderId: string | null;
          salesOrderLineType:
            | Database["public"]["Enums"]["salesOrderLineType"]
            | null;
          unitOfMeasureCode: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          }
        ];
      };
      partners: {
        Row: {
          abilityId: string | null;
          abilityName: string | null;
          active: boolean | null;
          city: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          hoursPerWeek: number | null;
          id: string | null;
          state: string | null;
          supplierId: string | null;
          supplierLocationId: string | null;
          supplierName: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "partner_abilityId_fkey";
            columns: ["abilityId"];
            isOneToOne: false;
            referencedRelation: "ability";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "partner_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "partner_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "partner_id_fkey";
            columns: ["supplierLocationId"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_id_fkey";
            columns: ["id"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "partner_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      parts: {
        Row: {
          active: boolean | null;
          assignee: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          defaultMethodType: Database["public"]["Enums"]["methodType"] | null;
          description: string | null;
          id: string | null;
          itemTrackingType:
            | Database["public"]["Enums"]["itemTrackingType"]
            | null;
          modelName: string | null;
          modelPath: string | null;
          modelSize: number | null;
          name: string | null;
          notes: Json | null;
          readableId: string | null;
          readableIdWithRevision: string | null;
          replenishmentSystem:
            | Database["public"]["Enums"]["itemReplenishmentSystem"]
            | null;
          revision: string | null;
          revisions: Json | null;
          supplierIds: string | null;
          tags: string[] | null;
          thumbnailPath: string | null;
          unitOfMeasure: string | null;
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "item_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      procedures: {
        Row: {
          assignee: string | null;
          companyId: string | null;
          id: string | null;
          name: string | null;
          processId: string | null;
          status: Database["public"]["Enums"]["procedureStatus"] | null;
          version: number | null;
          versions: Json | null;
        };
        Relationships: [
          {
            foreignKeyName: "procedure_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "procedure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "procedure_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "procedure_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "process";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "procedure_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "processes";
            referencedColumns: ["id"];
          }
        ];
      };
      processes: {
        Row: {
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          defaultStandardFactor: Database["public"]["Enums"]["factor"] | null;
          id: string | null;
          name: string | null;
          processType: Database["public"]["Enums"]["processType"] | null;
          suppliers: Json | null;
          updatedAt: string | null;
          updatedBy: string | null;
          workCenters: Json | null;
        };
        Relationships: [
          {
            foreignKeyName: "process_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "process_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "process_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "process_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "process_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseInvoiceLines: {
        Row: {
          accountNumber: string | null;
          assetId: string | null;
          companyId: string | null;
          conversionFactor: number | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          description: string | null;
          exchangeRate: number | null;
          extendedPrice: number | null;
          id: string | null;
          internalNotes: Json | null;
          inventoryUnitOfMeasureCode: string | null;
          invoiceId: string | null;
          invoiceLineType:
            | Database["public"]["Enums"]["payableLineType"]
            | null;
          itemDescription: string | null;
          itemId: string | null;
          itemName: string | null;
          itemReadableId: string | null;
          locationId: string | null;
          modelUploadId: string | null;
          purchaseOrderId: string | null;
          purchaseOrderLineId: string | null;
          purchaseUnitOfMeasureCode: string | null;
          quantity: number | null;
          serviceId: string | null;
          shelfId: string | null;
          shippingCost: number | null;
          supplierExtendedPrice: number | null;
          supplierPartId: string | null;
          supplierShippingCost: number | null;
          supplierTaxAmount: number | null;
          supplierUnitPrice: number | null;
          tags: string[] | null;
          taxAmount: number | null;
          taxPercent: number | null;
          thumbnailPath: string | null;
          totalAmount: number | null;
          unitCost: number | null;
          unitPrice: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_inventoryUnitOfMeasureCode_fkey";
            columns: ["inventoryUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoice";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "purchaseInvoices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderLineId_fkey";
            columns: ["purchaseOrderLineId"];
            isOneToOne: false;
            referencedRelation: "openPurchaseOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderLineId_fkey";
            columns: ["purchaseOrderLineId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseOrderLineId_fkey";
            columns: ["purchaseOrderLineId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_purchaseUnitOfMeasureCode_fkey";
            columns: ["purchaseUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoiceLines_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseInvoices: {
        Row: {
          assignee: string | null;
          balance: number | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          currencyCode: string | null;
          customFields: Json | null;
          dateDue: string | null;
          dateIssued: string | null;
          datePaid: string | null;
          exchangeRate: number | null;
          exchangeRateUpdatedAt: string | null;
          id: string | null;
          internalNotes: Json | null;
          invoiceId: string | null;
          invoiceSupplierContactId: string | null;
          invoiceSupplierId: string | null;
          invoiceSupplierLocationId: string | null;
          itemType: Database["public"]["Enums"]["itemType"] | null;
          locationId: string | null;
          orderTotal: number | null;
          paymentTermId: string | null;
          paymentTermName: string | null;
          postingDate: string | null;
          status: Database["public"]["Enums"]["purchaseInvoiceStatus"] | null;
          subtotal: number | null;
          supplierId: string | null;
          supplierInteractionId: string | null;
          supplierReference: string | null;
          thumbnailPath: string | null;
          totalAmount: number | null;
          totalDiscount: number | null;
          totalTax: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseInvoice_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseInvoice_currencyCode_fkey";
            columns: ["currencyCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "currencies";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoice_currencyCode_fkey";
            columns: ["currencyCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "currency";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierContactId_fkey";
            columns: ["invoiceSupplierContactId"];
            isOneToOne: false;
            referencedRelation: "supplierContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierId_fkey";
            columns: ["invoiceSupplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_invoiceSupplierLocationId_fkey";
            columns: ["invoiceSupplierLocationId"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_paymentTermId_fkey";
            columns: ["paymentTermId"];
            isOneToOne: false;
            referencedRelation: "paymentTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_supplierInteractionId_fkey";
            columns: ["supplierInteractionId"];
            isOneToOne: false;
            referencedRelation: "supplierInteraction";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseOrderLines: {
        Row: {
          accountNumber: string | null;
          assetId: string | null;
          autodeskUrn: string | null;
          companyId: string | null;
          conversionFactor: number | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          description: string | null;
          exchangeRate: number | null;
          extendedPrice: number | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          inventoryUnitOfMeasureCode: string | null;
          invoicedComplete: boolean | null;
          itemDescription: string | null;
          itemId: string | null;
          itemName: string | null;
          itemReadableId: string | null;
          jobId: string | null;
          jobOperationId: string | null;
          locationId: string | null;
          modelId: string | null;
          modelName: string | null;
          modelPath: string | null;
          modelSize: number | null;
          modelUploadId: string | null;
          purchaseOrderId: string | null;
          purchaseOrderLineType:
            | Database["public"]["Enums"]["purchaseOrderLineType"]
            | null;
          purchaseQuantity: number | null;
          purchaseUnitOfMeasureCode: string | null;
          quantityInvoiced: number | null;
          quantityReceived: number | null;
          quantityShipped: number | null;
          quantityToInvoice: number | null;
          quantityToReceive: number | null;
          receivedComplete: boolean | null;
          requiresInspection: boolean | null;
          setupPrice: number | null;
          shelfId: string | null;
          shippingCost: number | null;
          supplierExtendedPrice: number | null;
          supplierPartId: string | null;
          supplierShippingCost: number | null;
          supplierTaxAmount: number | null;
          supplierUnitPrice: number | null;
          tags: string[] | null;
          taxAmount: number | null;
          taxPercent: number | null;
          thumbnailPath: string | null;
          unitCost: number | null;
          unitPrice: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseOrderLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_inventoryUnitOfMeasureCode_fkey";
            columns: ["inventoryUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithDependencies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_jobOperationId_fkey";
            columns: ["jobOperationId"];
            isOneToOne: false;
            referencedRelation: "jobOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_purchaseOrderId_fkey";
            columns: ["purchaseOrderId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_purchaseUnitOfMeasureCode_fkey";
            columns: ["purchaseUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "purchaseOrderLine_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      purchaseOrderLocations: {
        Row: {
          customerAddressLine1: string | null;
          customerAddressLine2: string | null;
          customerCity: string | null;
          customerCountryCode: string | null;
          customerCountryName: string | null;
          customerName: string | null;
          customerPostalCode: string | null;
          customerStateProvince: string | null;
          deliveryAddressLine1: string | null;
          deliveryAddressLine2: string | null;
          deliveryCity: string | null;
          deliveryCountryCode: string | null;
          deliveryCountryName: string | null;
          deliveryName: string | null;
          deliveryPostalCode: string | null;
          deliveryStateProvince: string | null;
          dropShipment: boolean | null;
          id: string | null;
          supplierAddressLine1: string | null;
          supplierAddressLine2: string | null;
          supplierCity: string | null;
          supplierCountryCode: string | null;
          supplierCountryName: string | null;
          supplierName: string | null;
          supplierPostalCode: string | null;
          supplierStateProvince: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "address_countryCode_fkey";
            columns: ["customerCountryCode"];
            isOneToOne: false;
            referencedRelation: "country";
            referencedColumns: ["alpha2"];
          },
          {
            foreignKeyName: "address_countryCode_fkey";
            columns: ["supplierCountryCode"];
            isOneToOne: false;
            referencedRelation: "country";
            referencedColumns: ["alpha2"];
          }
        ];
      };
      purchaseOrders: {
        Row: {
          assignee: string | null;
          closedAt: string | null;
          closedBy: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          currencyCode: string | null;
          customFields: Json | null;
          deliveryDate: string | null;
          dropShipment: boolean | null;
          exchangeRate: number | null;
          exchangeRateUpdatedAt: string | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          itemType: Database["public"]["Enums"]["itemType"] | null;
          jobId: string | null;
          jobReadableId: string | null;
          locationId: string | null;
          orderDate: string | null;
          orderTotal: number | null;
          paymentTermId: string | null;
          purchaseOrderId: string | null;
          purchaseOrderType:
            | Database["public"]["Enums"]["purchaseOrderType"]
            | null;
          receiptPromisedDate: string | null;
          receiptRequestedDate: string | null;
          revisionId: number | null;
          shippingMethodId: string | null;
          shippingTermId: string | null;
          status: Database["public"]["Enums"]["purchaseOrderStatus"] | null;
          supplierContactId: string | null;
          supplierId: string | null;
          supplierInteractionId: string | null;
          supplierLocationId: string | null;
          supplierReference: string | null;
          supplierShippingCost: number | null;
          tags: string[] | null;
          thumbnailPath: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "purchaseOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "purchaseOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseOrder_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "purchaseOrder_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "job";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_jobId_fkey";
            columns: ["jobId"];
            isOneToOne: false;
            referencedRelation: "openProductionOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierContactId_fkey";
            columns: ["supplierContactId"];
            isOneToOne: false;
            referencedRelation: "supplierContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierInteractionId_fkey";
            columns: ["supplierInteractionId"];
            isOneToOne: false;
            referencedRelation: "supplierInteraction";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_supplierLocationId_fkey";
            columns: ["supplierLocationId"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_shippingMethodId_fkey";
            columns: ["shippingMethodId"];
            isOneToOne: false;
            referencedRelation: "shippingMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderDelivery_shippingTermId_fkey";
            columns: ["shippingTermId"];
            isOneToOne: false;
            referencedRelation: "shippingTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "purchaseOrderPayment_paymentTermId_fkey";
            columns: ["paymentTermId"];
            isOneToOne: false;
            referencedRelation: "paymentTerm";
            referencedColumns: ["id"];
          }
        ];
      };
      purchaseOrderSuppliers: {
        Row: {
          companyId: string | null;
          id: string | null;
          name: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      qualityActions: {
        Row: {
          actionType:
            | Database["public"]["Enums"]["nonConformanceAction"]
            | null;
          assignee: string | null;
          companyId: string | null;
          completedDate: string | null;
          createdAt: string | null;
          createdBy: string | null;
          dueDate: string | null;
          id: string | null;
          nonConformanceCloseDate: string | null;
          nonConformanceDueDate: string | null;
          nonConformanceId: string | null;
          nonConformanceItemId: string | null;
          nonConformanceName: string | null;
          nonConformanceOpenDate: string | null;
          nonConformanceStatus:
            | Database["public"]["Enums"]["nonConformanceStatus"]
            | null;
          nonConformanceTypeName: string | null;
          notes: Json | null;
          readableNonConformanceId: string | null;
          sortOrder: number | null;
          status:
            | Database["public"]["Enums"]["nonConformanceTaskStatus"]
            | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "nonConformance_itemId_fkey";
            columns: ["nonConformanceItemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_itemId_fkey";
            columns: ["nonConformanceItemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_itemId_fkey";
            columns: ["nonConformanceItemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_itemId_fkey";
            columns: ["nonConformanceItemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformance_itemId_fkey";
            columns: ["nonConformanceItemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_nonConformanceId_fkey";
            columns: ["nonConformanceId"];
            isOneToOne: false;
            referencedRelation: "nonConformance";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "nonConformanceActionTask_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteCustomerDetails: {
        Row: {
          contactEmail: string | null;
          contactName: string | null;
          customerAddressLine1: string | null;
          customerAddressLine2: string | null;
          customerCity: string | null;
          customerCountryCode: string | null;
          customerCountryName: string | null;
          customerName: string | null;
          customerPostalCode: string | null;
          customerStateProvince: string | null;
          quoteId: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "address_countryCode_fkey";
            columns: ["customerCountryCode"];
            isOneToOne: false;
            referencedRelation: "country";
            referencedColumns: ["alpha2"];
          }
        ];
      };
      quoteLinePrices: {
        Row: {
          additionalCharges: Json | null;
          autodeskUrn: string | null;
          companyId: string | null;
          configuration: Json | null;
          createdBy: string | null;
          customerId: string | null;
          customerPartId: string | null;
          customerPartRevision: string | null;
          customFields: Json | null;
          description: string | null;
          estimatorId: string | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          itemId: string | null;
          itemReadableId: string | null;
          itemType: string | null;
          locationId: string | null;
          methodType: Database["public"]["Enums"]["methodType"] | null;
          modelId: string | null;
          modelName: string | null;
          modelPath: string | null;
          modelSize: number | null;
          modelUploadId: string | null;
          noQuoteReason: string | null;
          qty: number | null;
          quantity: number[] | null;
          quoteCreatedAt: string | null;
          quoteId: string | null;
          quoteReadableId: string | null;
          quoteRevisionId: number | null;
          status: Database["public"]["Enums"]["quoteLineStatus"] | null;
          tags: string[] | null;
          taxPercent: number | null;
          thumbnailPath: string | null;
          unitCost: number | null;
          unitOfMeasureCode: string | null;
          unitPrice: number | null;
          unitPricePrecision: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "quote_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "quoteLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "quoteLine_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quoteLine_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteLines: {
        Row: {
          additionalCharges: Json | null;
          autodeskUrn: string | null;
          companyId: string | null;
          configuration: Json | null;
          createdBy: string | null;
          customerPartId: string | null;
          customerPartRevision: string | null;
          customFields: Json | null;
          description: string | null;
          estimatorId: string | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          itemId: string | null;
          itemReadableId: string | null;
          itemType: string | null;
          locationId: string | null;
          methodType: Database["public"]["Enums"]["methodType"] | null;
          modelId: string | null;
          modelName: string | null;
          modelPath: string | null;
          modelSize: number | null;
          modelUploadId: string | null;
          noQuoteReason: string | null;
          quantity: number[] | null;
          quoteId: string | null;
          quoteRevisionId: number | null;
          status: Database["public"]["Enums"]["quoteLineStatus"] | null;
          tags: string[] | null;
          taxPercent: number | null;
          thumbnailPath: string | null;
          unitCost: number | null;
          unitOfMeasureCode: string | null;
          unitPricePrecision: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "quoteLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "quoteLine_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quoteLine_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteMaterialWithMakeMethodId: {
        Row: {
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          description: string | null;
          id: string | null;
          itemId: string | null;
          itemReadableId: string | null;
          itemType: string | null;
          kit: boolean | null;
          methodType: Database["public"]["Enums"]["methodType"] | null;
          order: number | null;
          productionQuantity: number | null;
          quantity: number | null;
          quoteId: string | null;
          quoteLineId: string | null;
          quoteMakeMethodId: string | null;
          quoteMaterialMakeMethodId: string | null;
          quoteOperationId: string | null;
          scrapQuantity: number | null;
          tags: string[] | null;
          unitCost: number | null;
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
          version: number | null;
        };
        Relationships: [
          {
            foreignKeyName: "quoteMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteMaterial_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLinePrices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteMakeMethodId_fkey";
            columns: ["quoteMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "quoteMakeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteMakeMethodId_fkey";
            columns: ["quoteMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "quoteMaterialWithMakeMethodId";
            referencedColumns: ["quoteMaterialMakeMethodId"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteOperationId_fkey";
            columns: ["quoteOperationId"];
            isOneToOne: false;
            referencedRelation: "quoteOperation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_quoteOperationId_fkey";
            columns: ["quoteOperationId"];
            isOneToOne: false;
            referencedRelation: "quoteOperationsWithMakeMethods";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "quoteMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteMaterial_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      quoteOperationsWithMakeMethods: {
        Row: {
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          description: string | null;
          id: string | null;
          laborRate: number | null;
          laborTime: number | null;
          laborUnit: Database["public"]["Enums"]["factor"] | null;
          machineRate: number | null;
          machineTime: number | null;
          machineUnit: Database["public"]["Enums"]["factor"] | null;
          makeMethodId: string | null;
          operationLeadTime: number | null;
          operationMinimumCost: number | null;
          operationOrder:
            | Database["public"]["Enums"]["methodOperationOrder"]
            | null;
          operationSupplierProcessId: string | null;
          operationType: Database["public"]["Enums"]["operationType"] | null;
          operationUnitCost: number | null;
          order: number | null;
          overheadRate: number | null;
          procedureId: string | null;
          processId: string | null;
          quoteId: string | null;
          quoteLineId: string | null;
          quoteMakeMethodId: string | null;
          setupTime: number | null;
          setupUnit: Database["public"]["Enums"]["factor"] | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
          workCenterId: string | null;
          workInstruction: Json | null;
        };
        Relationships: [
          {
            foreignKeyName: "quoteOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteOperation_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quoteOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteOperation_operationSupplierProcessId_fkey";
            columns: ["operationSupplierProcessId"];
            isOneToOne: false;
            referencedRelation: "supplierProcess";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_operationSupplierProcessId_fkey";
            columns: ["operationSupplierProcessId"];
            isOneToOne: false;
            referencedRelation: "supplierProcesses";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedure";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_procedureId_fkey";
            columns: ["procedureId"];
            isOneToOne: false;
            referencedRelation: "procedures";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "process";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "processes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quoteCustomerDetails";
            referencedColumns: ["quoteId"];
          },
          {
            foreignKeyName: "quoteOperation_quoteId_fkey";
            columns: ["quoteId"];
            isOneToOne: false;
            referencedRelation: "quotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLinePrices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteLineId_fkey";
            columns: ["quoteLineId"];
            isOneToOne: false;
            referencedRelation: "quoteLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteMakeMethodId_fkey";
            columns: ["quoteMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "quoteMakeMethod";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_quoteMakeMethodId_fkey";
            columns: ["quoteMakeMethodId"];
            isOneToOne: false;
            referencedRelation: "quoteMaterialWithMakeMethodId";
            referencedColumns: ["quoteMaterialMakeMethodId"];
          },
          {
            foreignKeyName: "quoteOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quoteOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenter";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quoteOperation_workCenterId_fkey";
            columns: ["workCenterId"];
            isOneToOne: false;
            referencedRelation: "workCenters";
            referencedColumns: ["id"];
          }
        ];
      };
      quotes: {
        Row: {
          assignee: string | null;
          companyId: string | null;
          completedDate: string | null;
          completedLines: number | null;
          createdAt: string | null;
          createdBy: string | null;
          currencyCode: string | null;
          customerContactId: string | null;
          customerEngineeringContactId: string | null;
          customerId: string | null;
          customerLocationId: string | null;
          customerReference: string | null;
          customFields: Json | null;
          digitalQuoteAcceptedBy: string | null;
          digitalQuoteAcceptedByEmail: string | null;
          digitalQuoteRejectedBy: string | null;
          digitalQuoteRejectedByEmail: string | null;
          dueDate: string | null;
          estimatorId: string | null;
          exchangeRate: number | null;
          exchangeRateUpdatedAt: string | null;
          expirationDate: string | null;
          externalLinkId: string | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          itemType: Database["public"]["Enums"]["itemType"] | null;
          lines: number | null;
          locationId: string | null;
          locationName: string | null;
          opportunityId: string | null;
          quoteId: string | null;
          revisionId: number | null;
          salesPersonId: string | null;
          shippingCost: number | null;
          status: Database["public"]["Enums"]["quoteStatus"] | null;
          tags: string[] | null;
          thumbnailPath: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "quote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "quote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quote_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "quote_customerContactId_fkey";
            columns: ["customerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerEngineeringContactId_fkey";
            columns: ["customerEngineeringContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_customerLocationId_fkey";
            columns: ["customerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_estimatorId_fkey";
            columns: ["estimatorId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quote_externalLinkId_fkey";
            columns: ["externalLinkId"];
            isOneToOne: false;
            referencedRelation: "externalLink";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_opportunityId_fkey";
            columns: ["opportunityId"];
            isOneToOne: false;
            referencedRelation: "opportunity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_salesPersonId_fkey";
            columns: ["salesPersonId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_salesPersonId_fkey";
            columns: ["salesPersonId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_salesPersonId_fkey";
            columns: ["salesPersonId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_salesPersonId_fkey";
            columns: ["salesPersonId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_salesPersonId_fkey";
            columns: ["salesPersonId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "quote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "quote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      receiptLines: {
        Row: {
          companyId: string | null;
          conversionFactor: number | null;
          createdAt: string | null;
          createdBy: string | null;
          description: string | null;
          id: string | null;
          itemId: string | null;
          itemReadableId: string | null;
          lineId: string | null;
          locationId: string | null;
          orderQuantity: number | null;
          outstandingQuantity: number | null;
          receiptId: string | null;
          receivedQuantity: number | null;
          requiresBatchTracking: boolean | null;
          requiresSerialTracking: boolean | null;
          shelfId: string | null;
          thumbnailPath: string | null;
          unitOfMeasure: string | null;
          unitPrice: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "receiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "receiptLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_receiptId_fkey";
            columns: ["receiptId"];
            isOneToOne: false;
            referencedRelation: "receipt";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "receiptLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesInvoiceLines: {
        Row: {
          accountNumber: string | null;
          addOnCost: number | null;
          assetId: string | null;
          companyId: string | null;
          convertedAddOnCost: number | null;
          convertedSetupPrice: number | null;
          convertedShippingCost: number | null;
          convertedUnitPrice: number | null;
          createdAt: string | null;
          createdBy: string | null;
          customerPartId: string | null;
          customFields: Json | null;
          description: string | null;
          exchangeRate: number | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          invoiceId: string | null;
          invoiceLineType:
            | Database["public"]["Enums"]["salesInvoiceLineType"]
            | null;
          itemDescription: string | null;
          itemId: string | null;
          itemName: string | null;
          itemReadableId: string | null;
          locationId: string | null;
          methodType: Database["public"]["Enums"]["methodType"] | null;
          modelUploadId: string | null;
          opportunityId: string | null;
          quantity: number | null;
          salesOrderId: string | null;
          salesOrderLineId: string | null;
          setupPrice: number | null;
          shelfId: string | null;
          shippingCost: number | null;
          taxPercent: number | null;
          thumbnailPath: string | null;
          unitCost: number | null;
          unitOfMeasureCode: string | null;
          unitPrice: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesInvoiceLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "salesInvoice";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "salesInvoiceLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_invoiceId_fkey";
            columns: ["invoiceId"];
            isOneToOne: false;
            referencedRelation: "salesInvoices";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "salesInvoiceLine_opportunityId_fkey";
            columns: ["opportunityId"];
            isOneToOne: false;
            referencedRelation: "opportunity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "openSalesOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLine";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_salesOrderLineId_fkey";
            columns: ["salesOrderLineId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLines";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoiceLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesInvoiceLocations: {
        Row: {
          customerAddressLine1: string | null;
          customerAddressLine2: string | null;
          customerCity: string | null;
          customerCountryCode: string | null;
          customerCountryName: string | null;
          customerName: string | null;
          customerPostalCode: string | null;
          customerStateProvince: string | null;
          id: string | null;
          invoiceAddressLine1: string | null;
          invoiceAddressLine2: string | null;
          invoiceCity: string | null;
          invoiceCountryCode: string | null;
          invoiceCountryName: string | null;
          invoiceCustomerName: string | null;
          invoicePostalCode: string | null;
          invoiceStateProvince: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "address_countryCode_fkey";
            columns: ["customerCountryCode"];
            isOneToOne: false;
            referencedRelation: "country";
            referencedColumns: ["alpha2"];
          },
          {
            foreignKeyName: "address_countryCode_fkey";
            columns: ["invoiceCountryCode"];
            isOneToOne: false;
            referencedRelation: "country";
            referencedColumns: ["alpha2"];
          }
        ];
      };
      salesInvoices: {
        Row: {
          assignee: string | null;
          balance: number | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          currencyCode: string | null;
          customerId: string | null;
          customerReference: string | null;
          customFields: Json | null;
          dateDue: string | null;
          dateIssued: string | null;
          datePaid: string | null;
          exchangeRate: number | null;
          exchangeRateUpdatedAt: string | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          invoiceCustomerContactId: string | null;
          invoiceCustomerId: string | null;
          invoiceCustomerLocationId: string | null;
          invoiceId: string | null;
          invoiceTotal: number | null;
          itemType: Database["public"]["Enums"]["itemType"] | null;
          lines: Json[] | null;
          locationId: string | null;
          opportunityId: string | null;
          paymentTermId: string | null;
          postingDate: string | null;
          shipmentId: string | null;
          status: Database["public"]["Enums"]["salesInvoiceStatus"] | null;
          subtotal: number | null;
          tags: string[] | null;
          thumbnailPath: string | null;
          totalAmount: number | null;
          totalDiscount: number | null;
          totalTax: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesInvoice_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesInvoice_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "salesInvoice_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_invoiceCustomerContactId_fkey";
            columns: ["invoiceCustomerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_invoiceCustomerId_fkey";
            columns: ["invoiceCustomerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_invoiceCustomerLocationId_fkey";
            columns: ["invoiceCustomerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_opportunityId_fkey";
            columns: ["opportunityId"];
            isOneToOne: false;
            referencedRelation: "opportunity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_paymentTermId_fkey";
            columns: ["paymentTermId"];
            isOneToOne: false;
            referencedRelation: "paymentTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_shipmentId_fkey";
            columns: ["shipmentId"];
            isOneToOne: false;
            referencedRelation: "shipment";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesInvoice_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesOrderCustomers: {
        Row: {
          companyId: string | null;
          id: string | null;
          name: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "customer_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      salesOrderLines: {
        Row: {
          accountNumber: string | null;
          addOnCost: number | null;
          assetId: string | null;
          autodeskUrn: string | null;
          companyId: string | null;
          convertedAddOnCost: number | null;
          convertedShippingCost: number | null;
          convertedUnitPrice: number | null;
          createdAt: string | null;
          createdBy: string | null;
          customerId: string | null;
          customerPartId: string | null;
          customerPartRevision: string | null;
          customFields: Json | null;
          description: string | null;
          exchangeRate: number | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          invoicedComplete: boolean | null;
          itemId: string | null;
          itemReadableId: string | null;
          locationId: string | null;
          methodType: Database["public"]["Enums"]["methodType"] | null;
          modelId: string | null;
          modelName: string | null;
          modelPath: string | null;
          modelSize: number | null;
          modelUploadId: string | null;
          orderDate: string | null;
          promisedDate: string | null;
          quantityInvoiced: number | null;
          quantitySent: number | null;
          quantityToInvoice: number | null;
          quantityToSend: number | null;
          requiresInspection: boolean | null;
          saleQuantity: number | null;
          salesOrderId: string | null;
          salesOrderLineType:
            | Database["public"]["Enums"]["salesOrderLineType"]
            | null;
          salesOrderReadableId: string | null;
          sentComplete: boolean | null;
          sentDate: string | null;
          setupPrice: number | null;
          shelfId: string | null;
          shippingCost: number | null;
          status: Database["public"]["Enums"]["salesOrderLineStatus"] | null;
          taxPercent: number | null;
          thumbnailPath: string | null;
          unitCost: number | null;
          unitOfMeasureCode: string | null;
          unitPrice: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesOrder_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "account";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "salesOrderLine_accountNumber_fkey";
            columns: ["accountNumber", "companyId"];
            isOneToOne: false;
            referencedRelation: "accounts";
            referencedColumns: ["number", "companyId"];
          },
          {
            foreignKeyName: "salesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrder";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrderLocations";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_salesOrderId_fkey";
            columns: ["salesOrderId"];
            isOneToOne: false;
            referencedRelation: "salesOrders";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "salesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesOrderLocations: {
        Row: {
          customerAddressLine1: string | null;
          customerAddressLine2: string | null;
          customerCity: string | null;
          customerCountryCode: string | null;
          customerCountryName: string | null;
          customerName: string | null;
          customerPostalCode: string | null;
          customerStateProvince: string | null;
          id: string | null;
          paymentAddressLine1: string | null;
          paymentAddressLine2: string | null;
          paymentCity: string | null;
          paymentCountryCode: string | null;
          paymentCountryName: string | null;
          paymentCustomerName: string | null;
          paymentPostalCode: string | null;
          paymentStateProvince: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "address_countryCode_fkey";
            columns: ["customerCountryCode"];
            isOneToOne: false;
            referencedRelation: "country";
            referencedColumns: ["alpha2"];
          },
          {
            foreignKeyName: "address_countryCode_fkey";
            columns: ["paymentCountryCode"];
            isOneToOne: false;
            referencedRelation: "country";
            referencedColumns: ["alpha2"];
          }
        ];
      };
      salesOrders: {
        Row: {
          assignee: string | null;
          closedAt: string | null;
          closedBy: string | null;
          companyId: string | null;
          completedDate: string | null;
          createdAt: string | null;
          createdBy: string | null;
          currencyCode: string | null;
          customerContactId: string | null;
          customerEngineeringContactId: string | null;
          customerId: string | null;
          customerLocationId: string | null;
          customerReference: string | null;
          customFields: Json | null;
          dropShipment: boolean | null;
          exchangeRate: number | null;
          exchangeRateUpdatedAt: string | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          itemType: Database["public"]["Enums"]["itemType"] | null;
          jobs: Json[] | null;
          lines: Json[] | null;
          locationId: string | null;
          opportunityId: string | null;
          orderDate: string | null;
          orderTotal: number | null;
          paymentTermId: string | null;
          receiptPromisedDate: string | null;
          receiptRequestedDate: string | null;
          revisionId: number | null;
          salesOrderId: string | null;
          salesPersonId: string | null;
          sentCompleteDate: string | null;
          shippingCost: number | null;
          shippingMethodId: string | null;
          shippingTermName: string | null;
          status: Database["public"]["Enums"]["salesOrderStatus"] | null;
          thumbnailPath: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_closedBy_fkey";
            columns: ["closedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesOrder_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrder_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "salesOrder_customerContactId_fkey";
            columns: ["customerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_customerEngineeringContactId_fkey";
            columns: ["customerEngineeringContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_opportunityId_fkey";
            columns: ["opportunityId"];
            isOneToOne: false;
            referencedRelation: "opportunity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrder_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesOrderLine_customerLocationId_fkey";
            columns: ["customerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderPayment_paymentTermId_fkey";
            columns: ["paymentTermId"];
            isOneToOne: false;
            referencedRelation: "paymentTerm";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesOrderShipment_shippingMethodId_fkey";
            columns: ["shippingMethodId"];
            isOneToOne: false;
            referencedRelation: "shippingMethod";
            referencedColumns: ["id"];
          }
        ];
      };
      salesRfqLines: {
        Row: {
          autodeskUrn: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customerPartId: string | null;
          customerPartRevision: string | null;
          customFields: Json | null;
          description: string | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          itemId: string | null;
          itemName: string | null;
          itemReadableId: string | null;
          itemType: Database["public"]["Enums"]["itemType"] | null;
          methodType: Database["public"]["Enums"]["methodType"] | null;
          modelId: string | null;
          modelName: string | null;
          modelPath: string | null;
          modelSize: number | null;
          modelUploadId: string | null;
          order: number | null;
          quantity: number[] | null;
          salesRfqId: string | null;
          tags: string[] | null;
          thumbnailPath: string | null;
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesRfqLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesRfqLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesRfqLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesRfqLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "jobs";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "salesRfqLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "modelUpload";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_modelUploadId_fkey";
            columns: ["modelUploadId"];
            isOneToOne: false;
            referencedRelation: "salesRfqLines";
            referencedColumns: ["modelId"];
          },
          {
            foreignKeyName: "salesRfqLine_salesRfqId_fkey";
            columns: ["salesRfqId"];
            isOneToOne: false;
            referencedRelation: "salesRfq";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_salesRfqId_fkey";
            columns: ["salesRfqId"];
            isOneToOne: false;
            referencedRelation: "salesRfqs";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "salesRfqLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfqLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      salesRfqs: {
        Row: {
          assignee: string | null;
          companyId: string | null;
          completedDate: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customerContactId: string | null;
          customerEngineeringContactId: string | null;
          customerId: string | null;
          customerLocationId: string | null;
          customerReference: string | null;
          customFields: Json | null;
          employeeId: string | null;
          expirationDate: string | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          locationId: string | null;
          locationName: string | null;
          noQuoteReasonId: string | null;
          opportunityId: string | null;
          revisionId: number | null;
          rfqDate: string | null;
          rfqId: string | null;
          salesPersonId: string | null;
          status: Database["public"]["Enums"]["salesRfqStatus"] | null;
          tags: string[] | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "salesRfq_assigneeId_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_assigneeId_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_assigneeId_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_assigneeId_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_assigneeId_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesRfq_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesRfq_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "salesRfq_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesRfq_customerContactId_fkey";
            columns: ["customerContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_customerEngineeringContactId_fkey";
            columns: ["customerEngineeringContactId"];
            isOneToOne: false;
            referencedRelation: "customerContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customer";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "customers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_customerId_fkey";
            columns: ["customerId"];
            isOneToOne: false;
            referencedRelation: "salesOrderCustomers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_customerLocationId_fkey";
            columns: ["customerLocationId"];
            isOneToOne: false;
            referencedRelation: "customerLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_employeeId_fkey";
            columns: ["employeeId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "salesRfq_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_noQuoteReasonId_fkey";
            columns: ["noQuoteReasonId"];
            isOneToOne: false;
            referencedRelation: "noQuoteReason";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_opportunityId_fkey";
            columns: ["opportunityId"];
            isOneToOne: false;
            referencedRelation: "opportunity";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "salesRfq_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      shifts: {
        Row: {
          active: boolean | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          endTime: string | null;
          friday: boolean | null;
          id: string | null;
          locationId: string | null;
          locationName: string | null;
          monday: boolean | null;
          name: string | null;
          saturday: boolean | null;
          startTime: string | null;
          sunday: boolean | null;
          thursday: boolean | null;
          tuesday: boolean | null;
          updatedAt: string | null;
          updatedBy: string | null;
          wednesday: boolean | null;
        };
        Relationships: [
          {
            foreignKeyName: "shifts_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shifts_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "shifts_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "shifts_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shifts_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      shipmentLines: {
        Row: {
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          description: string | null;
          fulfillmentId: string | null;
          id: string | null;
          itemId: string | null;
          itemReadableId: string | null;
          lineId: string | null;
          locationId: string | null;
          orderQuantity: number | null;
          outstandingQuantity: number | null;
          requiresBatchTracking: boolean | null;
          requiresSerialTracking: boolean | null;
          shelfId: string | null;
          shipmentId: string | null;
          shippedQuantity: number | null;
          thumbnailPath: string | null;
          unitOfMeasure: string | null;
          unitPrice: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "shipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "shipmentLine_fulfillmentId_fkey";
            columns: ["fulfillmentId"];
            isOneToOne: false;
            referencedRelation: "fulfillment";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_shelfId_fkey";
            columns: ["shelfId"];
            isOneToOne: false;
            referencedRelation: "shelf";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_shipmentId_fkey";
            columns: ["shipmentId"];
            isOneToOne: false;
            referencedRelation: "shipment";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "shipmentLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierProcesses: {
        Row: {
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          id: string | null;
          leadTime: number | null;
          minimumCost: number | null;
          processId: string | null;
          processName: string | null;
          supplierId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierProcess_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierProcess_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "process";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_processId_fkey";
            columns: ["processId"];
            isOneToOne: false;
            referencedRelation: "processes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierProcess_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierProcess_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierProcess_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierQuoteLines: {
        Row: {
          companyId: string | null;
          conversionFactor: number | null;
          createdBy: string | null;
          customFields: Json | null;
          description: string | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          inventoryUnitOfMeasureCode: string | null;
          itemId: string | null;
          itemReadableId: string | null;
          itemType: Database["public"]["Enums"]["itemType"] | null;
          purchaseUnitOfMeasureCode: string | null;
          quantity: number[] | null;
          supplierPartId: string | null;
          supplierPartRevision: string | null;
          supplierQuoteId: string | null;
          supplierQuoteRevisionId: number | null;
          tags: string[] | null;
          thumbnailPath: string | null;
          unitCost: number | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierQuoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierQuoteLine_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierQuoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierQuoteLine_inventoryUnitOfMeasureCode_fkey";
            columns: ["inventoryUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "supplierQuoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "consumables";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "item";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "materials";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "parts";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_itemId_fkey";
            columns: ["itemId"];
            isOneToOne: false;
            referencedRelation: "tools";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_purchaseUnitOfMeasureCode_fkey";
            columns: ["purchaseUnitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "supplierQuoteLine_supplierQuoteId_fkey";
            columns: ["supplierQuoteId"];
            isOneToOne: false;
            referencedRelation: "supplierQuote";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_supplierQuoteId_fkey";
            columns: ["supplierQuoteId"];
            isOneToOne: false;
            referencedRelation: "supplierQuotes";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuoteLine_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      supplierQuotes: {
        Row: {
          assignee: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          currencyCode: string | null;
          customFields: Json | null;
          exchangeRate: number | null;
          exchangeRateUpdatedAt: string | null;
          expirationDate: string | null;
          externalNotes: Json | null;
          id: string | null;
          internalNotes: Json | null;
          itemType: Database["public"]["Enums"]["itemType"] | null;
          quotedDate: string | null;
          revisionId: number | null;
          status: Database["public"]["Enums"]["supplierQuoteStatus"] | null;
          supplierContactId: string | null;
          supplierId: string | null;
          supplierInteractionId: string | null;
          supplierLocationId: string | null;
          supplierQuoteId: string | null;
          supplierReference: string | null;
          tags: string[] | null;
          thumbnailPath: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplierQuote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierQuote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierQuote_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplierQuote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplierQuote_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "supplierQuote_supplierContactId_fkey";
            columns: ["supplierContactId"];
            isOneToOne: false;
            referencedRelation: "supplierContact";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "contractors";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierQuote_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "partners";
            referencedColumns: ["supplierId"];
          },
          {
            foreignKeyName: "supplierQuote_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "purchaseOrderSuppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "supplier";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_supplierId_fkey";
            columns: ["supplierId"];
            isOneToOne: false;
            referencedRelation: "suppliers";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_supplierInteractionId_fkey";
            columns: ["supplierInteractionId"];
            isOneToOne: false;
            referencedRelation: "supplierInteraction";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_supplierLocationId_fkey";
            columns: ["supplierLocationId"];
            isOneToOne: false;
            referencedRelation: "supplierLocation";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplierQuote_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      suppliers: {
        Row: {
          accountManagerId: string | null;
          assignee: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          currencyCode: string | null;
          customFields: Json | null;
          externalId: Json | null;
          fax: string | null;
          id: string | null;
          logo: string | null;
          name: string | null;
          orderCount: number | null;
          partCount: number | null;
          phone: string | null;
          status: string | null;
          supplierStatusId: string | null;
          supplierTypeId: string | null;
          tags: string[] | null;
          taxId: string | null;
          taxPercent: number | null;
          type: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
          website: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "supplier_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_accountManagerId_fkey";
            columns: ["accountManagerId"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplier_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplier_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "supplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "supplier_currencyCode_fkey";
            columns: ["currencyCode"];
            isOneToOne: false;
            referencedRelation: "currencyCode";
            referencedColumns: ["code"];
          },
          {
            foreignKeyName: "supplier_supplierStatusId_fkey";
            columns: ["supplierStatusId"];
            isOneToOne: false;
            referencedRelation: "supplierStatus";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_supplierTypeId_fkey";
            columns: ["supplierTypeId"];
            isOneToOne: false;
            referencedRelation: "supplierType";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "supplier_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      tools: {
        Row: {
          active: boolean | null;
          assignee: string | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          defaultMethodType: Database["public"]["Enums"]["methodType"] | null;
          description: string | null;
          id: string | null;
          itemTrackingType:
            | Database["public"]["Enums"]["itemTrackingType"]
            | null;
          modelName: string | null;
          modelPath: string | null;
          modelSize: number | null;
          name: string | null;
          notes: Json | null;
          readableId: string | null;
          readableIdWithRevision: string | null;
          replenishmentSystem:
            | Database["public"]["Enums"]["itemReplenishmentSystem"]
            | null;
          revision: string | null;
          revisions: Json | null;
          supplierIds: string | null;
          tags: string[] | null;
          thumbnailPath: string | null;
          unitOfMeasure: string | null;
          unitOfMeasureCode: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_assignee_fkey";
            columns: ["assignee"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "item_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "item_unitOfMeasureCode_fkey";
            columns: ["unitOfMeasureCode", "companyId"];
            isOneToOne: false;
            referencedRelation: "unitOfMeasure";
            referencedColumns: ["code", "companyId"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "item_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
      userDefaults: {
        Row: {
          companyId: string | null;
          locationId: string | null;
          userId: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "employeeJob_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "location_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "location_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "location_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "location_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          }
        ];
      };
      workCenters: {
        Row: {
          active: boolean | null;
          companyId: string | null;
          createdAt: string | null;
          createdBy: string | null;
          customFields: Json | null;
          defaultStandardFactor: Database["public"]["Enums"]["factor"] | null;
          description: string | null;
          id: string | null;
          laborRate: number | null;
          locationId: string | null;
          locationName: string | null;
          machineRate: number | null;
          name: string | null;
          overheadRate: number | null;
          processes: Json | null;
          requiredAbilityId: string | null;
          updatedAt: string | null;
          updatedBy: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "workCenter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "companies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "company";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "customFieldTables";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "workCenter_companyId_fkey";
            columns: ["companyId"];
            isOneToOne: false;
            referencedRelation: "integrations";
            referencedColumns: ["companyId"];
          },
          {
            foreignKeyName: "workCenter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_createdBy_fkey";
            columns: ["createdBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          },
          {
            foreignKeyName: "workCenter_locationId_fkey";
            columns: ["locationId"];
            isOneToOne: false;
            referencedRelation: "location";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_requiredAbilityId_fkey";
            columns: ["requiredAbilityId"];
            isOneToOne: false;
            referencedRelation: "ability";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employees";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeesAcrossCompanies";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "employeeSummary";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "user";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "workCenter_updatedBy_fkey";
            columns: ["updatedBy"];
            isOneToOne: false;
            referencedRelation: "userDefaults";
            referencedColumns: ["userId"];
          }
        ];
      };
    };
    Functions: {
      _xid_machine_id: {
        Args: Record<PropertyKey, never>;
        Returns: number;
      };
      check_operation_dependencies: {
        Args: {
          operation_id: string;
        };
        Returns: boolean;
      };
      create_rfq_from_model_v1: {
        Args: {
          company_id: string;
          customer_part_id: string;
          email: string;
          model_id: string;
          sequence_number: string;
          unit_of_measure: string;
          notes?: Json;
        };
        Returns: {
          rfq_id: string;
          rfq_readable_id: string;
          rfq_line_id: string;
        }[];
      };
      create_rfq_from_models_v1: {
        Args: {
          company_id: string;
          email: string;
          sequence_number: string;
          model_data: Json[];
        };
        Returns: {
          rfq_id: string;
          rfq_readable_id: string;
          rfq_line_ids: string[];
        }[];
      };
      create_rfq_from_models_v2: {
        Args: {
          company_id: string;
          email: string;
          sequence_number: string;
          model_data: Json[];
        };
        Returns: {
          rfq_id: string;
          rfq_readable_id: string;
          rfq_line_ids: string[];
        }[];
      };
      get_active_job_count: {
        Args: {
          employee_id: string;
          company_id: string;
        };
        Returns: number;
      };
      get_active_job_operations_by_employee: {
        Args: {
          employee_id: string;
          company_id: string;
        };
        Returns: {
          id: string;
          jobId: string;
          operationOrder: number;
          processId: string;
          workCenterId: string;
          description: string;
          setupTime: number;
          setupUnit: Database["public"]["Enums"]["factor"];
          laborTime: number;
          laborUnit: Database["public"]["Enums"]["factor"];
          machineTime: number;
          machineUnit: Database["public"]["Enums"]["factor"];
          operationOrderType: Database["public"]["Enums"]["methodOperationOrder"];
          jobReadableId: string;
          jobStatus: Database["public"]["Enums"]["jobStatus"];
          jobDueDate: string;
          jobDeadlineType: Database["public"]["Enums"]["deadlineType"];
          jobCustomerId: string;
          salesOrderReadableId: string;
          salesOrderId: string;
          salesOrderLineId: string;
          parentMaterialId: string;
          itemReadableId: string;
          itemDescription: string;
          operationStatus: Database["public"]["Enums"]["jobOperationStatus"];
          operationQuantity: number;
          quantityComplete: number;
          quantityScrapped: number;
          thumbnailPath: string;
          assignee: string;
          tags: string[];
        }[];
      };
      get_active_job_operations_by_location: {
        Args: {
          location_id: string;
          work_center_ids: string[];
        };
        Returns: {
          id: string;
          jobId: string;
          operationOrder: number;
          priority: number;
          processId: string;
          workCenterId: string;
          description: string;
          setupTime: number;
          setupUnit: Database["public"]["Enums"]["factor"];
          laborTime: number;
          laborUnit: Database["public"]["Enums"]["factor"];
          machineTime: number;
          machineUnit: Database["public"]["Enums"]["factor"];
          operationOrderType: Database["public"]["Enums"]["methodOperationOrder"];
          jobMakeMethodId: string;
          assignee: string;
          tags: string[];
          jobReadableId: string;
          jobStatus: Database["public"]["Enums"]["jobStatus"];
          jobDueDate: string;
          jobDeadlineType: Database["public"]["Enums"]["deadlineType"];
          jobCustomerId: string;
          salesOrderReadableId: string;
          salesOrderId: string;
          salesOrderLineId: string;
          parentMaterialId: string;
          itemReadableId: string;
          itemDescription: string;
          operationStatus: Database["public"]["Enums"]["jobOperationStatus"];
          operationQuantity: number;
          quantityComplete: number;
          quantityScrapped: number;
          thumbnailPath: string;
        }[];
      };
      get_assigned_job_operations: {
        Args: {
          user_id: string;
          company_id: string;
        };
        Returns: {
          id: string;
          jobId: string;
          operationOrder: number;
          processId: string;
          workCenterId: string;
          description: string;
          setupTime: number;
          setupUnit: Database["public"]["Enums"]["factor"];
          laborTime: number;
          laborUnit: Database["public"]["Enums"]["factor"];
          machineTime: number;
          machineUnit: Database["public"]["Enums"]["factor"];
          operationOrderType: Database["public"]["Enums"]["methodOperationOrder"];
          jobReadableId: string;
          jobStatus: Database["public"]["Enums"]["jobStatus"];
          jobDueDate: string;
          jobDeadlineType: Database["public"]["Enums"]["deadlineType"];
          jobCustomerId: string;
          salesOrderReadableId: string;
          salesOrderId: string;
          salesOrderLineId: string;
          parentMaterialId: string;
          itemReadableId: string;
          itemDescription: string;
          operationStatus: Database["public"]["Enums"]["jobOperationStatus"];
          operationQuantity: number;
          quantityComplete: number;
          quantityScrapped: number;
          thumbnailPath: string;
          assignee: string;
          tags: string[];
        }[];
      };
      get_claims: {
        Args: {
          uid: string;
          company: string;
        };
        Returns: Json;
      };
      get_companies_with_any_role: {
        Args: Record<PropertyKey, never>;
        Returns: string[];
      };
      get_companies_with_employee_permission: {
        Args: {
          permission: string;
        };
        Returns: string[];
      };
      get_companies_with_employee_role: {
        Args: Record<PropertyKey, never>;
        Returns: string[];
      };
      get_companies_with_permission: {
        Args: {
          permission: string;
        };
        Returns: string[];
      };
      get_company_id_from_api_key: {
        Args: Record<PropertyKey, never>;
        Returns: string;
      };
      get_company_id_from_foreign_key: {
        Args: {
          foreign_key: string;
          tbl: string;
        };
        Returns: string;
      };
      get_consumable_details: {
        Args: {
          item_id: string;
        };
        Returns: {
          active: boolean;
          assignee: string;
          defaultMethodType: Database["public"]["Enums"]["methodType"];
          description: string;
          itemTrackingType: Database["public"]["Enums"]["itemTrackingType"];
          name: string;
          replenishmentSystem: Database["public"]["Enums"]["itemReplenishmentSystem"];
          unitOfMeasureCode: string;
          notes: Json;
          thumbnailPath: string;
          modelUploadId: string;
          modelPath: string;
          modelName: string;
          modelSize: number;
          id: string;
          companyId: string;
          readableId: string;
          revision: string;
          readableIdWithRevision: string;
          supplierIds: string;
          unitOfMeasure: string;
          revisions: Json;
          customFields: Json;
          tags: string[];
          createdBy: string;
          createdAt: string;
          updatedBy: string;
          updatedAt: string;
        }[];
      };
      get_custom_field_unique_values: {
        Args: {
          table_name: string;
          field_key: string;
          company_id: string;
        };
        Returns: {
          value: Json;
        }[];
      };
      get_customer_ids_with_customer_permission: {
        Args: {
          permission: string;
        };
        Returns: string[];
      };
      get_direct_ancestors_of_tracked_entity: {
        Args: {
          p_tracked_entity_id: string;
        };
        Returns: {
          trackedActivityId: string;
          id: string;
          quantity: number;
          status: Database["public"]["Enums"]["trackedEntityStatus"];
          sourceDocument: string;
          sourceDocumentId: string;
          sourceDocumentReadableId: string;
          activityAttributes: Json;
          attributes: Json;
        }[];
      };
      get_direct_ancestors_of_tracked_entity_strict: {
        Args: {
          p_tracked_entity_id: string;
        };
        Returns: {
          trackedActivityId: string;
          id: string;
          quantity: number;
          status: Database["public"]["Enums"]["trackedEntityStatus"];
          sourceDocument: string;
          sourceDocumentId: string;
          sourceDocumentReadableId: string;
          activityAttributes: Json;
          attributes: Json;
        }[];
      };
      get_direct_descendants_of_tracked_entity: {
        Args: {
          p_tracked_entity_id: string;
        };
        Returns: {
          trackedActivityId: string;
          id: string;
          quantity: number;
          status: Database["public"]["Enums"]["trackedEntityStatus"];
          sourceDocument: string;
          sourceDocumentId: string;
          sourceDocumentReadableId: string;
          activityAttributes: Json;
          attributes: Json;
        }[];
      };
      get_direct_descendants_of_tracked_entity_strict: {
        Args: {
          p_tracked_entity_id: string;
        };
        Returns: {
          trackedActivityId: string;
          id: string;
          quantity: number;
          status: Database["public"]["Enums"]["trackedEntityStatus"];
          sourceDocument: string;
          sourceDocumentId: string;
          sourceDocumentReadableId: string;
          activityAttributes: Json;
          attributes: Json;
        }[];
      };
      get_inventory_quantities: {
        Args: {
          company_id: string;
          location_id: string;
        };
        Returns: {
          id: string;
          readableId: string;
          readableIdWithRevision: string;
          name: string;
          active: boolean;
          type: Database["public"]["Enums"]["itemType"];
          itemTrackingType: Database["public"]["Enums"]["itemTrackingType"];
          replenishmentSystem: Database["public"]["Enums"]["itemReplenishmentSystem"];
          materialSubstanceId: string;
          materialFormId: string;
          thumbnailPath: string;
          unitOfMeasureCode: string;
          quantityOnHand: number;
          quantityOnSalesOrder: number;
          quantityOnPurchaseOrder: number;
          quantityOnProductionOrder: number;
          quantityOnProductionDemand: number;
        }[];
      };
      get_item_quantities_by_tracking_id: {
        Args: {
          item_id: string;
          company_id: string;
          location_id: string;
        };
        Returns: {
          itemId: string;
          shelfId: string;
          shelfName: string;
          trackedEntityId: string;
          quantity: number;
        }[];
      };
      get_job_method: {
        Args: {
          jid: string;
        };
        Returns: {
          jobId: string;
          methodMaterialId: string;
          jobMakeMethodId: string;
          jobMaterialMakeMethodId: string;
          itemId: string;
          itemReadableId: string;
          description: string;
          itemType: string;
          quantity: number;
          unitCost: number;
          methodType: Database["public"]["Enums"]["methodType"];
          parentMaterialId: string;
          order: number;
          isRoot: boolean;
          kit: boolean;
          revision: string;
          version: number;
        }[];
      };
      get_job_methods_by_method_id: {
        Args: {
          mid: string;
        };
        Returns: {
          jobId: string;
          methodMaterialId: string;
          jobMakeMethodId: string;
          jobMaterialMakeMethodId: string;
          itemId: string;
          itemReadableId: string;
          description: string;
          unitOfMeasureCode: string;
          itemType: string;
          quantity: number;
          unitCost: number;
          methodType: Database["public"]["Enums"]["methodType"];
          parentMaterialId: string;
          order: number;
          isRoot: boolean;
        }[];
      };
      get_job_operation_by_id: {
        Args: {
          operation_id: string;
        };
        Returns: {
          id: string;
          jobId: string;
          jobMakeMethodId: string;
          operationOrder: number;
          processId: string;
          workCenterId: string;
          description: string;
          setupTime: number;
          setupUnit: Database["public"]["Enums"]["factor"];
          laborTime: number;
          laborUnit: Database["public"]["Enums"]["factor"];
          machineTime: number;
          machineUnit: Database["public"]["Enums"]["factor"];
          operationOrderType: Database["public"]["Enums"]["methodOperationOrder"];
          jobReadableId: string;
          jobStatus: Database["public"]["Enums"]["jobStatus"];
          jobDueDate: string;
          jobDeadlineType: Database["public"]["Enums"]["deadlineType"];
          parentMaterialId: string;
          itemId: string;
          itemReadableId: string;
          itemDescription: string;
          itemUnitOfMeasure: string;
          itemModelPath: string;
          itemModelId: string;
          itemModelName: string;
          itemModelSize: number;
          operationStatus: Database["public"]["Enums"]["jobOperationStatus"];
          operationQuantity: number;
          quantityComplete: number;
          quantityReworked: number;
          quantityScrapped: number;
          workInstruction: Json;
        }[];
      };
      get_job_operations_by_work_center: {
        Args: {
          work_center_id: string;
          location_id: string;
        };
        Returns: {
          id: string;
          jobId: string;
          operationOrder: number;
          processId: string;
          workCenterId: string;
          description: string;
          setupTime: number;
          setupUnit: Database["public"]["Enums"]["factor"];
          laborTime: number;
          laborUnit: Database["public"]["Enums"]["factor"];
          machineTime: number;
          machineUnit: Database["public"]["Enums"]["factor"];
          operationOrderType: Database["public"]["Enums"]["methodOperationOrder"];
          jobReadableId: string;
          jobStatus: Database["public"]["Enums"]["jobStatus"];
          jobDueDate: string;
          jobDeadlineType: Database["public"]["Enums"]["deadlineType"];
          parentMaterialId: string;
          itemReadableId: string;
          operationStatus: Database["public"]["Enums"]["jobOperationStatus"];
          operationQuantity: number;
          quantityComplete: number;
          quantityScrapped: number;
        }[];
      };
      get_job_quantity_on_hand: {
        Args: {
          job_id: string;
          company_id: string;
          location_id: string;
        };
        Returns: {
          id: string;
          jobMaterialItemId: string;
          jobMakeMethodId: string;
          itemReadableId: string;
          name: string;
          description: string;
          itemTrackingType: Database["public"]["Enums"]["itemTrackingType"];
          methodType: Database["public"]["Enums"]["methodType"];
          type: Database["public"]["Enums"]["itemType"];
          thumbnailPath: string;
          unitOfMeasureCode: string;
          quantityPerParent: number;
          estimatedQuantity: number;
          quantityIssued: number;
          quantityOnHand: number;
          quantityOnSalesOrder: number;
          quantityOnPurchaseOrder: number;
          quantityOnProductionOrder: number;
        }[];
      };
      get_material_details: {
        Args: {
          item_id: string;
        };
        Returns: {
          active: boolean;
          assignee: string;
          defaultMethodType: Database["public"]["Enums"]["methodType"];
          description: string;
          itemTrackingType: Database["public"]["Enums"]["itemTrackingType"];
          name: string;
          replenishmentSystem: Database["public"]["Enums"]["itemReplenishmentSystem"];
          unitOfMeasureCode: string;
          notes: Json;
          thumbnailPath: string;
          modelUploadId: string;
          modelPath: string;
          modelName: string;
          modelSize: number;
          id: string;
          companyId: string;
          readableId: string;
          revision: string;
          readableIdWithRevision: string;
          supplierIds: string;
          unitOfMeasure: string;
          revisions: Json;
          materialForm: string;
          materialSubstance: string;
          finish: string;
          grade: string;
          dimensions: string;
          materialSubstanceId: string;
          materialFormId: string;
          customFields: Json;
          tags: string[];
          createdBy: string;
          createdAt: string;
          updatedBy: string;
          updatedAt: string;
        }[];
      };
      get_method_tree: {
        Args: {
          uid: string;
        };
        Returns: {
          methodMaterialId: string;
          makeMethodId: string;
          materialMakeMethodId: string;
          itemId: string;
          itemReadableId: string;
          itemType: string;
          description: string;
          unitOfMeasureCode: string;
          unitCost: number;
          quantity: number;
          methodType: Database["public"]["Enums"]["methodType"];
          itemTrackingType: string;
          parentMaterialId: string;
          order: number;
          operationId: string;
          isRoot: boolean;
          kit: boolean;
          revision: string;
          externalId: Json;
          version: number;
        }[];
      };
      get_my_claim: {
        Args: {
          claim: string;
        };
        Returns: Json;
      };
      get_my_permission: {
        Args: {
          claim: string;
        };
        Returns: Json;
      };
      get_next_numeric_sequence: {
        Args: {
          company_id: string;
          item_type: Database["public"]["Enums"]["itemType"];
        };
        Returns: string;
      };
      get_next_prefixed_sequence: {
        Args: {
          company_id: string;
          item_type: Database["public"]["Enums"]["itemType"];
          prefix: string;
        };
        Returns: string;
      };
      get_next_sequence: {
        Args: {
          sequence_name: string;
          company_id: string;
        };
        Returns: string;
      };
      get_opportunity_with_related_records: {
        Args: {
          opportunity_id: string;
        };
        Returns: {
          id: string;
          companyId: string;
          customerId: string;
          purchaseOrderDocumentPath: string;
          requestForQuoteDocumentPath: string;
          salesRfqs: Json;
          quotes: Json;
          salesOrders: Json;
        }[];
      };
      get_part_details: {
        Args: {
          item_id: string;
        };
        Returns: {
          active: boolean;
          assignee: string;
          defaultMethodType: Database["public"]["Enums"]["methodType"];
          description: string;
          itemTrackingType: Database["public"]["Enums"]["itemTrackingType"];
          name: string;
          replenishmentSystem: Database["public"]["Enums"]["itemReplenishmentSystem"];
          unitOfMeasureCode: string;
          notes: Json;
          thumbnailPath: string;
          modelId: string;
          modelPath: string;
          modelName: string;
          modelSize: number;
          id: string;
          companyId: string;
          unitOfMeasure: string;
          readableId: string;
          revision: string;
          readableIdWithRevision: string;
          revisions: Json;
          customFields: Json;
          tags: string[];
          createdBy: string;
          createdAt: string;
          updatedBy: string;
          updatedAt: string;
        }[];
      };
      get_permission_companies: {
        Args: {
          claim: string;
        };
        Returns: string[];
      };
      get_production_planning: {
        Args: {
          company_id: string;
          location_id: string;
          periods: string[];
        };
        Returns: {
          id: string;
          readableIdWithRevision: string;
          name: string;
          active: boolean;
          type: Database["public"]["Enums"]["itemType"];
          itemTrackingType: Database["public"]["Enums"]["itemTrackingType"];
          replenishmentSystem: Database["public"]["Enums"]["itemReplenishmentSystem"];
          thumbnailPath: string;
          unitOfMeasureCode: string;
          leadTime: number;
          manufacturingBlocked: boolean;
          lotSize: number;
          reorderingPolicy: Database["public"]["Enums"]["itemReorderingPolicy"];
          demandAccumulationPeriod: number;
          demandAccumulationSafetyStock: number;
          reorderPoint: number;
          reorderQuantity: number;
          minimumOrderQuantity: number;
          maximumOrderQuantity: number;
          orderMultiple: number;
          quantityOnHand: number;
          maximumInventoryQuantity: number;
          week1: number;
          week2: number;
          week3: number;
          week4: number;
          week5: number;
          week6: number;
          week7: number;
          week8: number;
          week9: number;
          week10: number;
          week11: number;
          week12: number;
          week13: number;
          week14: number;
          week15: number;
          week16: number;
          week17: number;
          week18: number;
          week19: number;
          week20: number;
          week21: number;
          week22: number;
          week23: number;
          week24: number;
          week25: number;
          week26: number;
          week27: number;
          week28: number;
          week29: number;
          week30: number;
          week31: number;
          week32: number;
          week33: number;
          week34: number;
          week35: number;
          week36: number;
          week37: number;
          week38: number;
          week39: number;
          week40: number;
          week41: number;
          week42: number;
          week43: number;
          week44: number;
          week45: number;
          week46: number;
          week47: number;
          week48: number;
          week49: number;
          week50: number;
          week51: number;
          week52: number;
        }[];
      };
      get_purchasing_planning: {
        Args: {
          company_id: string;
          location_id: string;
          periods: string[];
        };
        Returns: {
          id: string;
          readableIdWithRevision: string;
          name: string;
          active: boolean;
          type: Database["public"]["Enums"]["itemType"];
          itemTrackingType: Database["public"]["Enums"]["itemTrackingType"];
          replenishmentSystem: Database["public"]["Enums"]["itemReplenishmentSystem"];
          thumbnailPath: string;
          unitOfMeasureCode: string;
          leadTime: number;
          purchasingBlocked: boolean;
          lotSize: number;
          reorderingPolicy: Database["public"]["Enums"]["itemReorderingPolicy"];
          demandAccumulationPeriod: number;
          demandAccumulationSafetyStock: number;
          reorderPoint: number;
          reorderQuantity: number;
          minimumOrderQuantity: number;
          maximumOrderQuantity: number;
          orderMultiple: number;
          quantityOnHand: number;
          maximumInventoryQuantity: number;
          suppliers: Json;
          preferredSupplierId: string;
          purchasingUnitOfMeasureCode: string;
          conversionFactor: number;
          week1: number;
          week2: number;
          week3: number;
          week4: number;
          week5: number;
          week6: number;
          week7: number;
          week8: number;
          week9: number;
          week10: number;
          week11: number;
          week12: number;
          week13: number;
          week14: number;
          week15: number;
          week16: number;
          week17: number;
          week18: number;
          week19: number;
          week20: number;
          week21: number;
          week22: number;
          week23: number;
          week24: number;
          week25: number;
          week26: number;
          week27: number;
          week28: number;
          week29: number;
          week30: number;
          week31: number;
          week32: number;
          week33: number;
          week34: number;
          week35: number;
          week36: number;
          week37: number;
          week38: number;
          week39: number;
          week40: number;
          week41: number;
          week42: number;
          week43: number;
          week44: number;
          week45: number;
          week46: number;
          week47: number;
          week48: number;
          week49: number;
          week50: number;
          week51: number;
          week52: number;
        }[];
      };
      get_quote_methods: {
        Args: {
          qid: string;
        };
        Returns: {
          quoteId: string;
          quoteLineId: string;
          methodMaterialId: string;
          quoteMakeMethodId: string;
          quoteMaterialMakeMethodId: string;
          itemId: string;
          itemReadableId: string;
          description: string;
          itemType: string;
          quantity: number;
          unitCost: number;
          methodType: Database["public"]["Enums"]["methodType"];
          parentMaterialId: string;
          order: number;
          isRoot: boolean;
          kit: boolean;
          revision: string;
          externalId: Json;
          version: number;
        }[];
      };
      get_quote_methods_by_method_id: {
        Args: {
          mid: string;
        };
        Returns: {
          quoteId: string;
          quoteLineId: string;
          methodMaterialId: string;
          quoteMakeMethodId: string;
          quoteMaterialMakeMethodId: string;
          itemId: string;
          itemReadableId: string;
          description: string;
          unitOfMeasureCode: string;
          itemType: string;
          itemTrackingType: string;
          quantity: number;
          unitCost: number;
          methodType: Database["public"]["Enums"]["methodType"];
          parentMaterialId: string;
          order: number;
          isRoot: boolean;
          kit: boolean;
          revision: string;
          externalId: Json;
          version: number;
        }[];
      };
      get_recent_job_operations_by_employee: {
        Args: {
          employee_id: string;
          company_id: string;
        };
        Returns: {
          id: string;
          jobId: string;
          operationOrder: number;
          processId: string;
          workCenterId: string;
          description: string;
          setupTime: number;
          setupUnit: Database["public"]["Enums"]["factor"];
          laborTime: number;
          laborUnit: Database["public"]["Enums"]["factor"];
          machineTime: number;
          machineUnit: Database["public"]["Enums"]["factor"];
          operationOrderType: Database["public"]["Enums"]["methodOperationOrder"];
          jobReadableId: string;
          jobStatus: Database["public"]["Enums"]["jobStatus"];
          jobDueDate: string;
          jobDeadlineType: Database["public"]["Enums"]["deadlineType"];
          jobCustomerId: string;
          salesOrderReadableId: string;
          salesOrderId: string;
          salesOrderLineId: string;
          parentMaterialId: string;
          itemReadableId: string;
          itemDescription: string;
          operationStatus: Database["public"]["Enums"]["jobOperationStatus"];
          operationQuantity: number;
          quantityComplete: number;
          quantityScrapped: number;
          thumbnailPath: string;
          assignee: string;
          tags: string[];
        }[];
      };
      get_sales_order_lines_by_customer_id: {
        Args: {
          customer_id: string;
        };
        Returns: {
          customerReference: string;
          salesOrderId: string;
          customerContactName: string;
          customerEngineeringContactName: string;
          saleQuantity: number;
          quantityToSend: number;
          quantitySent: number;
          quantityInvoiced: number;
          unitPrice: number;
          unitOfMeasureCode: string;
          locationId: string;
          orderDate: string;
          promisedDate: string;
          receiptRequestedDate: string;
          receiptPromisedDate: string;
          salesOrderStatus: Database["public"]["Enums"]["salesOrderStatus"];
          readableId: string;
          revision: string;
          readableIdWithRevision: string;
          customerId: string;
          thumbnailPath: string;
          jobOperations: Json;
          jobQuantityShipped: number;
          jobQuantityComplete: number;
          jobProductionQuantity: number;
          jobStatus: Database["public"]["Enums"]["jobStatus"];
        }[];
      };
      get_supplier_ids_with_supplier_permission: {
        Args: {
          permission: string;
        };
        Returns: string[];
      };
      get_supplier_interaction_with_related_records: {
        Args: {
          supplier_interaction_id: string;
        };
        Returns: {
          id: string;
          companyId: string;
          supplierId: string;
          supplierQuotes: Json;
          purchaseOrders: Json;
          purchaseInvoices: Json;
        }[];
      };
      get_tool_details: {
        Args: {
          item_id: string;
        };
        Returns: {
          active: boolean;
          assignee: string;
          defaultMethodType: Database["public"]["Enums"]["methodType"];
          description: string;
          itemTrackingType: Database["public"]["Enums"]["itemTrackingType"];
          name: string;
          replenishmentSystem: Database["public"]["Enums"]["itemReplenishmentSystem"];
          unitOfMeasureCode: string;
          notes: Json;
          thumbnailPath: string;
          modelId: string;
          modelPath: string;
          modelName: string;
          modelSize: number;
          id: string;
          companyId: string;
          unitOfMeasure: string;
          readableId: string;
          revision: string;
          readableIdWithRevision: string;
          revisions: Json;
          customFields: Json;
          tags: string[];
          createdBy: string;
          createdAt: string;
          updatedBy: string;
          updatedAt: string;
        }[];
      };
      groups_for_user: {
        Args: {
          uid: string;
        };
        Returns: string[];
      };
      groups_query: {
        Args: {
          _name?: string;
          _uid?: string;
        };
        Returns: {
          id: string;
          name: string;
          companyId: string;
          parentId: string;
          isEmployeeTypeGroup: boolean;
          isCustomerOrgGroup: boolean;
          isCustomerTypeGroup: boolean;
          isSupplierOrgGroup: boolean;
          isSupplierTypeGroup: boolean;
          users: Json;
        }[];
      };
      has_any_company_permission: {
        Args: {
          claim: string;
        };
        Returns: boolean;
      };
      has_company_permission: {
        Args: {
          claim: string;
          company: string;
        };
        Returns: boolean;
      };
      has_role: {
        Args: {
          required_role: string;
          company: string;
        };
        Returns: boolean;
      };
      has_valid_api_key_for_company: {
        Args: {
          company: string;
        };
        Returns: boolean;
      };
      increment_webhook_error: {
        Args: {
          webhook_id: string;
        };
        Returns: undefined;
      };
      increment_webhook_success: {
        Args: {
          webhook_id: string;
        };
        Returns: undefined;
      };
      is_claims_admin: {
        Args: Record<PropertyKey, never>;
        Returns: boolean;
      };
      is_last_job_operation: {
        Args: {
          operation_id: string;
        };
        Returns: boolean;
      };
      items_search: {
        Args: {
          query_embedding: string;
          match_threshold: number;
          match_count: number;
          p_company_id: string;
        };
        Returns: {
          id: string;
          readableId: string;
          name: string;
          description: string;
          similarity: number;
        }[];
      };
      journalLinesByAccountNumber: {
        Args: {
          from_date?: string;
          to_date?: string;
        };
        Returns: {
          number: string;
          companyId: string;
          balance: number;
          balanceAtDate: number;
          netChange: number;
        }[];
      };
      jsonb_to_text_array: {
        Args: {
          "": Json;
        };
        Returns: string[];
      };
      nanoid: {
        Args: {
          prefix?: string;
          size?: number;
          alphabet?: string;
          additionalbytesfactor?: number;
        };
        Returns: string;
      };
      nanoid_optimized: {
        Args: {
          size: number;
          alphabet: string;
          mask: number;
          step: number;
        };
        Returns: string;
      };
      suppliers_search: {
        Args: {
          query_embedding: string;
          match_threshold: number;
          match_count: number;
          p_company_id: string;
        };
        Returns: {
          id: string;
          name: string;
          similarity: number;
        }[];
      };
      update_receipt_line_batch_tracking: {
        Args: {
          p_receipt_line_id: string;
          p_receipt_id: string;
          p_batch_number: string;
          p_quantity: number;
          p_tracked_entity_id?: string;
          p_properties?: Json;
        };
        Returns: undefined;
      };
      update_receipt_line_serial_tracking: {
        Args: {
          p_receipt_line_id: string;
          p_receipt_id: string;
          p_serial_number: string;
          p_index: number;
          p_tracked_entity_id?: string;
        };
        Returns: undefined;
      };
      users_for_groups: {
        Args: {
          groups: string[];
        };
        Returns: Json;
      };
      xid: {
        Args: {
          _at?: string;
        };
        Returns: unknown;
      };
      xid_counter: {
        Args: {
          _xid: unknown;
        };
        Returns: number;
      };
      xid_decode: {
        Args: {
          _xid: unknown;
        };
        Returns: number[];
      };
      xid_encode: {
        Args: {
          _id: number[];
        };
        Returns: unknown;
      };
      xid_machine: {
        Args: {
          _xid: unknown;
        };
        Returns: number[];
      };
      xid_pid: {
        Args: {
          _xid: unknown;
        };
        Returns: number;
      };
      xid_time: {
        Args: {
          _xid: unknown;
        };
        Returns: string;
      };
    };
    Enums: {
      accountingPeriodStatus: "Inactive" | "Active";
      configurationParameterDataType:
        | "text"
        | "numeric"
        | "boolean"
        | "list"
        | "date";
      costLedgerType:
        | "Direct Cost"
        | "Revaluation"
        | "Rounding"
        | "Indirect Cost"
        | "Variance"
        | "Total";
      deadlineType: "No Deadline" | "ASAP" | "Soft Deadline" | "Hard Deadline";
      demandSourceType: "Sales Order" | "Job Material";
      documentSourceType:
        | "Job"
        | "Part"
        | "Purchase Order"
        | "Purchase Invoice"
        | "Purchase Return Order"
        | "Quote"
        | "Receipt"
        | "Request for Quote"
        | "Sales Order"
        | "Sales Invoice"
        | "Sales Return Order"
        | "Service"
        | "Shipment"
        | "Material"
        | "Tool"
        | "Fixture"
        | "Consumable";
      documentTransactionType:
        | "Download"
        | "Edit"
        | "Favorite"
        | "Label"
        | "Unfavorite"
        | "Upload";
      documentType:
        | "Archive"
        | "Document"
        | "Presentation"
        | "PDF"
        | "Spreadsheet"
        | "Text"
        | "Image"
        | "Video"
        | "Audio"
        | "Other"
        | "Model";
      externalLinkDocumentType: "Quote" | "SupplierQuote" | "Customer";
      factor:
        | "Hours/Piece"
        | "Hours/100 Pieces"
        | "Hours/1000 Pieces"
        | "Minutes/Piece"
        | "Minutes/100 Pieces"
        | "Minutes/1000 Pieces"
        | "Pieces/Hour"
        | "Pieces/Minute"
        | "Seconds/Piece"
        | "Total Hours"
        | "Total Minutes";
      fulfillmentType: "Inventory" | "Job";
      gaugeCalibrationStatus:
        | "Pending"
        | "In-Calibration"
        | "Out-of-Calibration";
      gaugeRole: "Master" | "Standard";
      gaugeStatus: "Active" | "Inactive";
      glAccountCategory:
        | "Bank"
        | "Accounts Receivable"
        | "Inventory"
        | "Other Current Asset"
        | "Fixed Asset"
        | "Accumulated Depreciation"
        | "Other Asset"
        | "Accounts Payable"
        | "Other Current Liability"
        | "Long Term Liability"
        | "Equity - No Close"
        | "Equity - Close"
        | "Retained Earnings"
        | "Income"
        | "Cost of Goods Sold"
        | "Expense"
        | "Other Income"
        | "Other Expense";
      glAccountClass: "Asset" | "Liability" | "Equity" | "Revenue" | "Expense";
      glAccountType: "Posting" | "Total" | "Begin Total" | "End Total";
      glConsolidatedRate: "Average" | "Current" | "Historical";
      glIncomeBalance: "Balance Sheet" | "Income Statement";
      inspectionStatus: "Pass" | "Fail";
      itemCostingMethod: "Standard" | "Average" | "LIFO" | "FIFO";
      itemLedgerDocumentType:
        | "Sales Shipment"
        | "Sales Invoice"
        | "Sales Return Receipt"
        | "Sales Credit Memo"
        | "Purchase Receipt"
        | "Purchase Invoice"
        | "Purchase Return Shipment"
        | "Purchase Credit Memo"
        | "Transfer Shipment"
        | "Transfer Receipt"
        | "Service Shipment"
        | "Service Invoice"
        | "Service Credit Memo"
        | "Posted Assembly"
        | "Inventory Receipt"
        | "Inventory Shipment"
        | "Direct Transfer"
        | "Job Consumption"
        | "Job Receipt"
        | "Batch Split";
      itemLedgerType:
        | "Purchase"
        | "Sale"
        | "Positive Adjmt."
        | "Negative Adjmt."
        | "Transfer"
        | "Consumption"
        | "Output"
        | "Assembly Consumption"
        | "Assembly Output";
      itemReorderingPolicy:
        | "Manual Reorder"
        | "Demand-Based Reorder"
        | "Fixed Reorder Quantity"
        | "Maximum Quantity";
      itemReplenishmentSystem: "Buy" | "Make" | "Buy and Make";
      itemTrackingSourceDocument:
        | "Receipt"
        | "Job Production"
        | "Job Material"
        | "Shipment";
      itemTrackingType: "Inventory" | "Non-Inventory" | "Serial" | "Batch";
      itemType:
        | "Part"
        | "Material"
        | "Tool"
        | "Service"
        | "Consumable"
        | "Fixture";
      jobOperationStatus:
        | "Canceled"
        | "Done"
        | "In Progress"
        | "Paused"
        | "Ready"
        | "Todo"
        | "Waiting";
      jobStatus:
        | "Draft"
        | "Ready"
        | "In Progress"
        | "Paused"
        | "Completed"
        | "Cancelled"
        | "Overdue"
        | "Due Today"
        | "Planned";
      journalLineDocumentType:
        | "Receipt"
        | "Invoice"
        | "Credit Memo"
        | "Blanket Order"
        | "Return Order";
      makeMethodStatus: "Draft" | "Active" | "Archived";
      methodOperationOrder: "After Previous" | "With Previous";
      methodType: "Buy" | "Make" | "Pick";
      module:
        | "Accounting"
        | "Documents"
        | "Invoicing"
        | "Inventory"
        | "Items"
        | "Messaging"
        | "Parts"
        | "People"
        | "Production"
        | "Purchasing"
        | "Resources"
        | "Sales"
        | "Settings"
        | "Users"
        | "Quality";
      month:
        | "January"
        | "February"
        | "March"
        | "April"
        | "May"
        | "June"
        | "July"
        | "August"
        | "September"
        | "October"
        | "November"
        | "December";
      nonConformanceAction:
        | "Corrective Action"
        | "Preventive Action"
        | "Containment Action"
        | "Verification"
        | "Customer Communication";
      nonConformanceApproval: "MRB";
      nonConformanceInvestigation:
        | "Root Cause Analysis"
        | "Inventory"
        | "WIP"
        | "Finished Goods"
        | "Incoming Materials"
        | "Process"
        | "Documentation";
      nonConformancePriority: "Low" | "Medium" | "High" | "Critical";
      nonConformanceSource: "Internal" | "External";
      nonConformanceStatus: "Registered" | "In Progress" | "Closed";
      nonConformanceTaskStatus:
        | "Pending"
        | "In Progress"
        | "Completed"
        | "Skipped";
      operationType: "Inside" | "Outside";
      payableLineType:
        | "Comment"
        | "G/L Account"
        | "Fixed Asset"
        | "Part"
        | "Material"
        | "Tool"
        | "Service"
        | "Consumable"
        | "Fixture";
      paymentTermCalculationMethod: "Net" | "End of Month" | "Day of Month";
      periodType: "Week" | "Day" | "Month";
      procedureAttributeType:
        | "Value"
        | "Measurement"
        | "Checkbox"
        | "Timestamp"
        | "Person"
        | "List"
        | "File"
        | "Task";
      procedureStatus: "Draft" | "Active" | "Archived";
      processType: "Inside" | "Outside" | "Inside and Outside";
      productionEventType: "Setup" | "Labor" | "Machine";
      productionQuantityType: "Rework" | "Scrap" | "Production";
      purchaseInvoiceStatus:
        | "Draft"
        | "Pending"
        | "Submitted"
        | "Return"
        | "Debit Note Issued"
        | "Paid"
        | "Partially Paid"
        | "Overdue"
        | "Voided";
      purchaseOrderLineType:
        | "Comment"
        | "G/L Account"
        | "Fixed Asset"
        | "Part"
        | "Material"
        | "Tool"
        | "Service"
        | "Consumable"
        | "Fixture";
      purchaseOrderStatus:
        | "Draft"
        | "To Review"
        | "Rejected"
        | "To Receive"
        | "To Receive and Invoice"
        | "To Invoice"
        | "Completed"
        | "Closed"
        | "Planned";
      purchaseOrderTransactionType:
        | "Edit"
        | "Favorite"
        | "Unfavorite"
        | "Approved"
        | "Reject"
        | "Request Approval";
      purchaseOrderType: "Purchase" | "Return" | "Outside Processing";
      quoteLineStatus: "Not Started" | "In Progress" | "Complete" | "No Quote";
      quoteStatus:
        | "Draft"
        | "Sent"
        | "Ordered"
        | "Partial"
        | "Lost"
        | "Cancelled"
        | "Expired";
      receiptSourceDocument:
        | "Sales Order"
        | "Sales Invoice"
        | "Sales Return Order"
        | "Purchase Order"
        | "Purchase Invoice"
        | "Purchase Return Order"
        | "Inbound Transfer"
        | "Outbound Transfer"
        | "Manufacturing Consumption"
        | "Manufacturing Output";
      receiptStatus: "Draft" | "Pending" | "Posted";
      role: "customer" | "employee" | "supplier";
      salesInvoiceLineType:
        | "Comment"
        | "Part"
        | "Material"
        | "Tool"
        | "Service"
        | "Consumable"
        | "Fixture"
        | "Fixed Asset";
      salesInvoiceStatus:
        | "Draft"
        | "Pending"
        | "Submitted"
        | "Return"
        | "Credit Note Issued"
        | "Paid"
        | "Partially Paid"
        | "Overdue"
        | "Voided";
      salesOrderLineStatus: "Ordered" | "In Progress" | "Completed";
      salesOrderLineType:
        | "Comment"
        | "Part"
        | "Material"
        | "Tool"
        | "Service"
        | "Consumable"
        | "Fixture"
        | "Fixed Asset";
      salesOrderStatus:
        | "Draft"
        | "Needs Approval"
        | "Confirmed"
        | "In Progress"
        | "Completed"
        | "Invoiced"
        | "Cancelled"
        | "Closed"
        | "To Ship and Invoice"
        | "To Ship"
        | "To Invoice";
      salesOrderTransactionType:
        | "Edit"
        | "Favorite"
        | "Unfavorite"
        | "Approved"
        | "Reject"
        | "Request Approval";
      salesRfqStatus: "Draft" | "Ready for Quote" | "Closed" | "Quoted";
      searchEntity:
        | "Resource"
        | "Person"
        | "Customer"
        | "Supplier"
        | "Job"
        | "Part"
        | "Purchase Order"
        | "Lead"
        | "Opportunity"
        | "Quotation"
        | "Sales Order"
        | "Request for Quotation"
        | "Sales Invoice"
        | "Purchase Invoice"
        | "Document"
        | "Sales RFQ"
        | "Service"
        | "Tool"
        | "Consumable"
        | "Material"
        | "Fixture";
      serviceType: "Internal" | "External";
      shipmentSourceDocument:
        | "Sales Order"
        | "Sales Invoice"
        | "Sales Return Order"
        | "Purchase Order"
        | "Purchase Invoice"
        | "Purchase Return Order"
        | "Inbound Transfer"
        | "Outbound Transfer";
      shipmentStatus: "Draft" | "Pending" | "Posted";
      shippingCarrier: "UPS" | "FedEx" | "USPS" | "DHL" | "Other";
      supplierLedgerDocumentType:
        | "Payment"
        | "Invoice"
        | "Credit Memo"
        | "Finance Charge Memo"
        | "Reminder"
        | "Refund";
      supplierQuoteStatus: "Active" | "Expired";
      supplySourceType: "Purchase Order" | "Production Order";
      tableViewType: "Public" | "Private";
      trackedEntityStatus: "Available" | "Reserved" | "On Hold" | "Consumed";
      trackingSource: "Purchased" | "Manufactured";
    };
    CompositeTypes: {
      [_ in never]: never;
    };
  };
  storage: {
    Tables: {
      buckets: {
        Row: {
          allowed_mime_types: string[] | null;
          avif_autodetection: boolean | null;
          created_at: string | null;
          file_size_limit: number | null;
          id: string;
          name: string;
          owner: string | null;
          owner_id: string | null;
          public: boolean | null;
          updated_at: string | null;
        };
        Insert: {
          allowed_mime_types?: string[] | null;
          avif_autodetection?: boolean | null;
          created_at?: string | null;
          file_size_limit?: number | null;
          id: string;
          name: string;
          owner?: string | null;
          owner_id?: string | null;
          public?: boolean | null;
          updated_at?: string | null;
        };
        Update: {
          allowed_mime_types?: string[] | null;
          avif_autodetection?: boolean | null;
          created_at?: string | null;
          file_size_limit?: number | null;
          id?: string;
          name?: string;
          owner?: string | null;
          owner_id?: string | null;
          public?: boolean | null;
          updated_at?: string | null;
        };
        Relationships: [];
      };
      migrations: {
        Row: {
          executed_at: string | null;
          hash: string;
          id: number;
          name: string;
        };
        Insert: {
          executed_at?: string | null;
          hash: string;
          id: number;
          name: string;
        };
        Update: {
          executed_at?: string | null;
          hash?: string;
          id?: number;
          name?: string;
        };
        Relationships: [];
      };
      objects: {
        Row: {
          bucket_id: string | null;
          created_at: string | null;
          id: string;
          last_accessed_at: string | null;
          metadata: Json | null;
          name: string | null;
          owner: string | null;
          owner_id: string | null;
          path_tokens: string[] | null;
          updated_at: string | null;
          version: string | null;
        };
        Insert: {
          bucket_id?: string | null;
          created_at?: string | null;
          id?: string;
          last_accessed_at?: string | null;
          metadata?: Json | null;
          name?: string | null;
          owner?: string | null;
          owner_id?: string | null;
          path_tokens?: string[] | null;
          updated_at?: string | null;
          version?: string | null;
        };
        Update: {
          bucket_id?: string | null;
          created_at?: string | null;
          id?: string;
          last_accessed_at?: string | null;
          metadata?: Json | null;
          name?: string | null;
          owner?: string | null;
          owner_id?: string | null;
          path_tokens?: string[] | null;
          updated_at?: string | null;
          version?: string | null;
        };
        Relationships: [
          {
            foreignKeyName: "objects_bucketId_fkey";
            columns: ["bucket_id"];
            isOneToOne: false;
            referencedRelation: "buckets";
            referencedColumns: ["id"];
          }
        ];
      };
      s3_multipart_uploads: {
        Row: {
          bucket_id: string;
          created_at: string;
          id: string;
          in_progress_size: number;
          key: string;
          owner_id: string | null;
          upload_signature: string;
          version: string;
        };
        Insert: {
          bucket_id: string;
          created_at?: string;
          id: string;
          in_progress_size?: number;
          key: string;
          owner_id?: string | null;
          upload_signature: string;
          version: string;
        };
        Update: {
          bucket_id?: string;
          created_at?: string;
          id?: string;
          in_progress_size?: number;
          key?: string;
          owner_id?: string | null;
          upload_signature?: string;
          version?: string;
        };
        Relationships: [
          {
            foreignKeyName: "s3_multipart_uploads_bucket_id_fkey";
            columns: ["bucket_id"];
            isOneToOne: false;
            referencedRelation: "buckets";
            referencedColumns: ["id"];
          }
        ];
      };
      s3_multipart_uploads_parts: {
        Row: {
          bucket_id: string;
          created_at: string;
          etag: string;
          id: string;
          key: string;
          owner_id: string | null;
          part_number: number;
          size: number;
          upload_id: string;
          version: string;
        };
        Insert: {
          bucket_id: string;
          created_at?: string;
          etag: string;
          id?: string;
          key: string;
          owner_id?: string | null;
          part_number: number;
          size?: number;
          upload_id: string;
          version: string;
        };
        Update: {
          bucket_id?: string;
          created_at?: string;
          etag?: string;
          id?: string;
          key?: string;
          owner_id?: string | null;
          part_number?: number;
          size?: number;
          upload_id?: string;
          version?: string;
        };
        Relationships: [
          {
            foreignKeyName: "s3_multipart_uploads_parts_bucket_id_fkey";
            columns: ["bucket_id"];
            isOneToOne: false;
            referencedRelation: "buckets";
            referencedColumns: ["id"];
          },
          {
            foreignKeyName: "s3_multipart_uploads_parts_upload_id_fkey";
            columns: ["upload_id"];
            isOneToOne: false;
            referencedRelation: "s3_multipart_uploads";
            referencedColumns: ["id"];
          }
        ];
      };
    };
    Views: {
      [_ in never]: never;
    };
    Functions: {
      can_insert_object: {
        Args: {
          bucketid: string;
          name: string;
          owner: string;
          metadata: Json;
        };
        Returns: undefined;
      };
      extension: {
        Args: {
          name: string;
        };
        Returns: string;
      };
      filename: {
        Args: {
          name: string;
        };
        Returns: string;
      };
      foldername: {
        Args: {
          name: string;
        };
        Returns: string[];
      };
      get_size_by_bucket: {
        Args: Record<PropertyKey, never>;
        Returns: {
          size: number;
          bucket_id: string;
        }[];
      };
      list_multipart_uploads_with_delimiter: {
        Args: {
          bucket_id: string;
          prefix_param: string;
          delimiter_param: string;
          max_keys?: number;
          next_key_token?: string;
          next_upload_token?: string;
        };
        Returns: {
          key: string;
          id: string;
          created_at: string;
        }[];
      };
      list_objects_with_delimiter: {
        Args: {
          bucket_id: string;
          prefix_param: string;
          delimiter_param: string;
          max_keys?: number;
          start_after?: string;
          next_token?: string;
        };
        Returns: {
          name: string;
          id: string;
          metadata: Json;
          updated_at: string;
        }[];
      };
      search: {
        Args: {
          prefix: string;
          bucketname: string;
          limits?: number;
          levels?: number;
          offsets?: number;
          search?: string;
          sortcolumn?: string;
          sortorder?: string;
        };
        Returns: {
          name: string;
          id: string;
          updated_at: string;
          created_at: string;
          last_accessed_at: string;
          metadata: Json;
        }[];
      };
    };
    Enums: {
      [_ in never]: never;
    };
    CompositeTypes: {
      [_ in never]: never;
    };
  };
};

type PublicSchema = Database[Extract<keyof Database, "public">];

export type Tables<
  PublicTableNameOrOptions extends
    | keyof (PublicSchema["Tables"] & PublicSchema["Views"])
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
        Database[PublicTableNameOrOptions["schema"]]["Views"])
    : never = never
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? (Database[PublicTableNameOrOptions["schema"]]["Tables"] &
      Database[PublicTableNameOrOptions["schema"]]["Views"])[TableName] extends {
      Row: infer R;
    }
    ? R
    : never
  : PublicTableNameOrOptions extends keyof (PublicSchema["Tables"] &
      PublicSchema["Views"])
  ? (PublicSchema["Tables"] &
      PublicSchema["Views"])[PublicTableNameOrOptions] extends {
      Row: infer R;
    }
    ? R
    : never
  : never;

export type TablesInsert<
  PublicTableNameOrOptions extends
    | keyof PublicSchema["Tables"]
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Insert: infer I;
    }
    ? I
    : never
  : PublicTableNameOrOptions extends keyof PublicSchema["Tables"]
  ? PublicSchema["Tables"][PublicTableNameOrOptions] extends {
      Insert: infer I;
    }
    ? I
    : never
  : never;

export type TablesUpdate<
  PublicTableNameOrOptions extends
    | keyof PublicSchema["Tables"]
    | { schema: keyof Database },
  TableName extends PublicTableNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicTableNameOrOptions["schema"]]["Tables"]
    : never = never
> = PublicTableNameOrOptions extends { schema: keyof Database }
  ? Database[PublicTableNameOrOptions["schema"]]["Tables"][TableName] extends {
      Update: infer U;
    }
    ? U
    : never
  : PublicTableNameOrOptions extends keyof PublicSchema["Tables"]
  ? PublicSchema["Tables"][PublicTableNameOrOptions] extends {
      Update: infer U;
    }
    ? U
    : never
  : never;

export type Enums<
  PublicEnumNameOrOptions extends
    | keyof PublicSchema["Enums"]
    | { schema: keyof Database },
  EnumName extends PublicEnumNameOrOptions extends { schema: keyof Database }
    ? keyof Database[PublicEnumNameOrOptions["schema"]]["Enums"]
    : never = never
> = PublicEnumNameOrOptions extends { schema: keyof Database }
  ? Database[PublicEnumNameOrOptions["schema"]]["Enums"][EnumName]
  : PublicEnumNameOrOptions extends keyof PublicSchema["Enums"]
  ? PublicSchema["Enums"][PublicEnumNameOrOptions]
  : never;

export type CompositeTypes<
  PublicCompositeTypeNameOrOptions extends
    | keyof PublicSchema["CompositeTypes"]
    | { schema: keyof Database },
  CompositeTypeName extends PublicCompositeTypeNameOrOptions extends {
    schema: keyof Database;
  }
    ? keyof Database[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"]
    : never = never
> = PublicCompositeTypeNameOrOptions extends { schema: keyof Database }
  ? Database[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"][CompositeTypeName]
  : PublicCompositeTypeNameOrOptions extends keyof PublicSchema["CompositeTypes"]
  ? PublicSchema["CompositeTypes"][PublicCompositeTypeNameOrOptions]
  : never;
